AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

6347 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T
                        ;
                        ; Copyright (C) 2012-2020  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on propper setting of the processor status
                        ; register bits.
                        ;
                        ; version 05-jan-2020
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 written by Frank A. Kingswood
                        ; The assembler as65_142.zip can be obtained from my GitHub repository
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        ;   01-aug-2012  added trap macro to allow user to change error handling
                        ;   01-dec-2012  fixed trap in branch field must be a branch
                        ;   02-mar-2013  fixed PLA flags not tested
                        ;   19-jul-2013  allowed ROM vectors to be loaded when load_data_direct = 0
                        ;                added test sequence check to detect if tests jump their fence
                        ;   23-jul-2013  added RAM integrity check option
                        ;   16-aug-2013  added error report to standard output option
                        ;   13-dec-2014  added binary/decimal opcode table switch test
                        ;   14-dec-2014  improved relative address test
                        ;   23-aug-2015  added option to disable self modifying tests
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;                added small branch offset pretest
                        ;   21-oct-2015  added option to disable decimal mode ADC & SBC tests
                        ;   04-dec-2017  fixed BRK only tested with interrupts enabled
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;   05-jan-2020  fixed shifts not testing zero result and flag when last 1-bit
                        ;                is shifted out
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $52 (82) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        
                        ;data_segment memory start address, $7B (123) consecutive Bytes required
1100 =                  data_segment = BASE
                        
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif
                        
                        ;code_segment memory start address, 13.1kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
1300 =                  code_segment = BASE+$200
                        
                        ;self modifying code may be disabled to allow running in ROM
                        ;0=part of the code is self modifying and must reside in RAM
                        ;1=tests disabled: branch range
0000 =                  disable_selfmod = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3.5 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                        ;disable test decimal mode ADC & SBC, 0=enable, 1=disable,
                        ;2=disable including decimal flag in processor status
0000 =                  disable_decimal = 0
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
0038 =                  faod    equ fao+decmode     ;+ ignore decimal
003c =                  faid    equ fai+decmode     ;+ ignore decimal
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking test of decimal bit
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                            if disable_decimal < 2
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                            else
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faod)&m8i  ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #(\1&m8i|faod)  ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faid)&m8   ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #(\1|faid)      ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faod)&m8i  ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #(\1&m8i|faod)  ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    cmp #(\1|faod)&m8   ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    ora #decmode        ;ignore decimal mode bit
                                    eor #\1|faod        ;invert expected flags + always on bits
                                    endm
                                endif
                            endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                  if disable_selfmod = 0
                                    sta range_adr   ;reset self modifying code
                                  endif
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;6 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (only binary mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zps     db  $80,1           ;additional shift pattern to test zero result & flag
005b =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005f =                  zp7f    db  $7f             ;test pattern for compare
                        ;logical zeropage operands
0060 =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0064 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0068 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006c =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006e =                          dw  abs1+1
0070 =                          dw  abs1+2
0072 =                          dw  abs1+3
0074 =                          dw  abs7f
0076 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0078 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
007a =                          dw  abst+1
007c =                          dw  abst+2
007e =                          dw  abst+3
0080 =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0082 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0084 =                          dw  absAN+1
0086 =                          dw  absAN+2
0088 =                          dw  absAN+3
008a =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008c =                          dw  absEO+1
008e =                          dw  absEO+2
0090 =                          dw  absEO+3
0092 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0094 =                          dw  absOR+1
0096 =                          dw  absOR+2
0098 =                          dw  absOR+3
                        ;add/subtract indirect pointers
009a =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009c =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009e =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
00a0 =                  sbiy2   dw  sba2-$ff
00a2 =                  zp_bss_end
                        
1100 =                          org data_segment
1100 =                  test_case   ds  1           ;current test number
1101 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
1103 =                  abst                        ;6 bytes store/modify test area
1103 =                  ada2    ds  1               ;operand 2
1104 =                  sba2    ds  1               ;operand 2 complemented for subtract
1105 =                          ds  4               ;fill remaining bytes
1109 =                  data_bss
                            if load_data_direct = 1
                        ex_andi and #0              ;execute immediate opcodes
                                rts
                        ex_eori eor #0              ;execute immediate opcodes
                                rts
                        ex_orai ora #0              ;execute immediate opcodes
                                rts
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
1109 =                  ex_andi ds  3
110c =                  ex_eori ds  3
110f =                  ex_orai ds  3
1112 =                  ex_adci ds  3
1115 =                  ex_sbci ds  3
                            endif
                        ;zps    db  $80,1           ;additional shift patterns test zero result & flag
1118 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
111c =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
111d =                  fLDx    db  fn,fn,0,fz              ;expected flags for load
                        ;shifts
1121 =                  rASL                                ;expected result ASL & ROL -carry
1121 =                  rROL    db  0,2,$86,$04,$82,0
1127 =                  rROLc   db  1,3,$87,$05,$83,1       ;expected result ROL +carry
112d =                  rLSR                                ;expected result LSR & ROR -carry
112d =                  rROR    db  $40,0,$61,$41,$20,0
1133 =                  rRORc   db  $c0,$80,$e1,$c1,$a0,$80 ;expected result ROR +carry
1139 =                  fASL                                ;expected flags for shifts
1139 =                  fROL    db  fzc,0,fnc,fc,fn,fz      ;no carry in
113f =                  fROLc   db  fc,0,fnc,fc,fn,0        ;carry in
1145 =                  fLSR
1145 =                  fROR    db  0,fzc,fc,0,fc,fz        ;no carry in
114b =                  fRORc   db  fn,fnc,fnc,fn,fnc,fn    ;carry in
                        ;increments (decrements)
1151 =                  rINC    db  $7f,$80,$ff,0,1         ;expected result for INC/DEC
1156 =                  fINC    db  0,fn,fn,fz,0            ;expected flags for INC/DEC
                        ;logical memory operand
115b =                  absOR   db  0,$1f,$71,$80           ;test pattern for OR
115f =                  absAN   db  $0f,$ff,$7f,$80         ;test pattern for AND
1163 =                  absEO   db  $ff,$0f,$8f,$8f         ;test pattern for EOR
                        ;logical accu operand
1167 =                  absORa  db  0,$f1,$1f,0             ;test pattern for OR
116b =                  absANa  db  $f0,$ff,$ff,$ff         ;test pattern for AND
116f =                  absEOa  db  $ff,$f0,$f0,$0f         ;test pattern for EOR
                        ;logical results
1173 =                  absrlo  db  0,$ff,$7f,$80
1177 =                  absflo  db  fz,fn,0,fn
117b =                  data_bss_end
                        
                        
                                code
1300 =                          org code_segment
1300 : d8               start   cld
1301 : a2ff                     ldx #$ff
1303 : 9a                       txs
1304 : a900                     lda #0          ;*** test 0 = initialize
1306 : 8d0011                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                        
                        ;initialize I/O for report channel
                            if report = 1
1309 : 207653                   jsr report_init
                            endif
                        
                        ;pretest small branch offset
130c : a205                     ldx #5
130e : 4c3613                   jmp psb_test
1311 :                  psb_bwok
1311 : a005                     ldy #5
1313 : d008                     bne psb_forw
                                trap        ;branch should be taken
1315 : 208553          >        jsr report_error
                        
1318 : 88                       dey         ;forward landing zone
1319 : 88                       dey
131a : 88                       dey
131b : 88                       dey
131c : 88                       dey
131d :                  psb_forw
131d : 88                       dey
131e : 88                       dey
131f : 88                       dey
1320 : 88                       dey
1321 : 88                       dey
1322 : f017                     beq psb_fwok
                                trap        ;forward offset
1324 : 208553          >        jsr report_error
                        
                        
1327 : ca                       dex         ;backward landing zone
1328 : ca                       dex
1329 : ca                       dex
132a : ca                       dex
132b : ca                       dex
132c :                  psb_back
132c : ca                       dex
132d : ca                       dex
132e : ca                       dex
132f : ca                       dex
1330 : ca                       dex
1331 : f0de                     beq psb_bwok
                                trap        ;backward offset
1333 : 208553          >        jsr report_error
                        
1336 :                  psb_test
1336 : d0f4                     bne psb_back
                                trap        ;branch should be taken
1338 : 208553          >        jsr report_error
                        
133b :                  psb_fwok
                        
                        ;initialize BSS segment
                            if load_data_direct != 1
133b : a248                     ldx #zp_end-zp_init-1
133d : bd2055           ld_zp   lda zp_init,x
1340 : 9559                     sta zp_bss,x
1342 : ca                       dex
1343 : 10f8                     bpl ld_zp
1345 : a271                     ldx #data_end-data_init-1
1347 : bd6955           ld_data lda data_init,x
134a : 9d0911                   sta data_bss,x
134d : ca                       dex
134e : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                        
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                              if disable_selfmod = 0
                                sta range_adr   ;reset self modifying code
                              endif
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test
1350 : ad0011          >            lda test_case   ;previous test
1353 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1355 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
1357 : 208553          >        jsr report_error
                       >
135a :                 >skip0006
                       >
0001 =                 >test_num = test_num + 1
135a : a901            >            lda #test_num   ;*** next tests' number
135c : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if disable_selfmod = 0
                        ;testing relative addressing with BEQ
135f : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
1361 :                  range_loop
1361 : 88                       dey             ;next relative address
1362 : 98                       tya
1363 : aa                       tax             ;precharge count to end of loop
1364 : 1008                     bpl range_fw    ;calculate relative address
1366 : 18                       clc             ;avoid branch self or to relative address of branch
1367 : 6902                     adc #2
1369 : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
136a : ea                       nop
136b : ea                       nop
136c : ea                       nop
136d : ea                       nop
136e :                  range_fw
136e : ea                       nop
136f : ea                       nop
1370 : ea                       nop
1371 : ea                       nop
1372 : ea                       nop
1373 : 497f                     eor #$7f        ;complement except sign
1375 : 8d0114                   sta range_adr   ;load into test target
1378 : a900                     lda #0          ;should set zero flag in status register
137a : 4c0014                   jmp range_op
                        
137d : ca                       dex             ; offset landing zone - backward branch too far
137e : ca                       dex
137f : ca                       dex
1380 : ca                       dex
1381 : ca                       dex
                                ;relative address target field with branch under test in the middle
1382 : ca                       dex             ;-128 - max backward
1383 : ca                       dex
1384 : ca                       dex
1385 : ca                       dex
1386 : ca                       dex
1387 : ca                       dex
1388 : ca                       dex
1389 : ca                       dex
138a : ca                       dex             ;-120
138b : ca                       dex
138c : ca                       dex
138d : ca                       dex
138e : ca                       dex
138f : ca                       dex
1390 : ca                       dex
1391 : ca                       dex
1392 : ca                       dex
1393 : ca                       dex
1394 : ca                       dex             ;-110
1395 : ca                       dex
1396 : ca                       dex
1397 : ca                       dex
1398 : ca                       dex
1399 : ca                       dex
139a : ca                       dex
139b : ca                       dex
139c : ca                       dex
139d : ca                       dex
139e : ca                       dex             ;-100
139f : ca                       dex
13a0 : ca                       dex
13a1 : ca                       dex
13a2 : ca                       dex
13a3 : ca                       dex
13a4 : ca                       dex
13a5 : ca                       dex
13a6 : ca                       dex
13a7 : ca                       dex
13a8 : ca                       dex             ;-90
13a9 : ca                       dex
13aa : ca                       dex
13ab : ca                       dex
13ac : ca                       dex
13ad : ca                       dex
13ae : ca                       dex
13af : ca                       dex
13b0 : ca                       dex
13b1 : ca                       dex
13b2 : ca                       dex             ;-80
13b3 : ca                       dex
13b4 : ca                       dex
13b5 : ca                       dex
13b6 : ca                       dex
13b7 : ca                       dex
13b8 : ca                       dex
13b9 : ca                       dex
13ba : ca                       dex
13bb : ca                       dex
13bc : ca                       dex             ;-70
13bd : ca                       dex
13be : ca                       dex
13bf : ca                       dex
13c0 : ca                       dex
13c1 : ca                       dex
13c2 : ca                       dex
13c3 : ca                       dex
13c4 : ca                       dex
13c5 : ca                       dex
13c6 : ca                       dex             ;-60
13c7 : ca                       dex
13c8 : ca                       dex
13c9 : ca                       dex
13ca : ca                       dex
13cb : ca                       dex
13cc : ca                       dex
13cd : ca                       dex
13ce : ca                       dex
13cf : ca                       dex
13d0 : ca                       dex             ;-50
13d1 : ca                       dex
13d2 : ca                       dex
13d3 : ca                       dex
13d4 : ca                       dex
13d5 : ca                       dex
13d6 : ca                       dex
13d7 : ca                       dex
13d8 : ca                       dex
13d9 : ca                       dex
13da : ca                       dex             ;-40
13db : ca                       dex
13dc : ca                       dex
13dd : ca                       dex
13de : ca                       dex
13df : ca                       dex
13e0 : ca                       dex
13e1 : ca                       dex
13e2 : ca                       dex
13e3 : ca                       dex
13e4 : ca                       dex             ;-30
13e5 : ca                       dex
13e6 : ca                       dex
13e7 : ca                       dex
13e8 : ca                       dex
13e9 : ca                       dex
13ea : ca                       dex
13eb : ca                       dex
13ec : ca                       dex
13ed : ca                       dex
13ee : ca                       dex             ;-20
13ef : ca                       dex
13f0 : ca                       dex
13f1 : ca                       dex
13f2 : ca                       dex
13f3 : ca                       dex
13f4 : ca                       dex
13f5 : ca                       dex
13f6 : ca                       dex
13f7 : ca                       dex
13f8 : ca                       dex             ;-10
13f9 : ca                       dex
13fa : ca                       dex
13fb : ca                       dex
13fc : ca                       dex
13fd : ca                       dex
13fe : ca                       dex
13ff : ca                       dex             ;-3
1400 :                  range_op                ;test target with zero flag=0, z=1 if previous dex
1401 =                  range_adr   = *+1       ;modifiable relative address
1400 : f03e                     beq *+64        ;+64 if called without modification
1402 : ca                       dex             ;+0
1403 : ca                       dex
1404 : ca                       dex
1405 : ca                       dex
1406 : ca                       dex
1407 : ca                       dex
1408 : ca                       dex
1409 : ca                       dex
140a : ca                       dex
140b : ca                       dex
140c : ca                       dex             ;+10
140d : ca                       dex
140e : ca                       dex
140f : ca                       dex
1410 : ca                       dex
1411 : ca                       dex
1412 : ca                       dex
1413 : ca                       dex
1414 : ca                       dex
1415 : ca                       dex
1416 : ca                       dex             ;+20
1417 : ca                       dex
1418 : ca                       dex
1419 : ca                       dex
141a : ca                       dex
141b : ca                       dex
141c : ca                       dex
141d : ca                       dex
141e : ca                       dex
141f : ca                       dex
1420 : ca                       dex             ;+30
1421 : ca                       dex
1422 : ca                       dex
1423 : ca                       dex
1424 : ca                       dex
1425 : ca                       dex
1426 : ca                       dex
1427 : ca                       dex
1428 : ca                       dex
1429 : ca                       dex
142a : ca                       dex             ;+40
142b : ca                       dex
142c : ca                       dex
142d : ca                       dex
142e : ca                       dex
142f : ca                       dex
1430 : ca                       dex
1431 : ca                       dex
1432 : ca                       dex
1433 : ca                       dex
1434 : ca                       dex             ;+50
1435 : ca                       dex
1436 : ca                       dex
1437 : ca                       dex
1438 : ca                       dex
1439 : ca                       dex
143a : ca                       dex
143b : ca                       dex
143c : ca                       dex
143d : ca                       dex
143e : ca                       dex             ;+60
143f : ca                       dex
1440 : ca                       dex
1441 : ca                       dex
1442 : ca                       dex
1443 : ca                       dex
1444 : ca                       dex
1445 : ca                       dex
1446 : ca                       dex
1447 : ca                       dex
1448 : ca                       dex             ;+70
1449 : ca                       dex
144a : ca                       dex
144b : ca                       dex
144c : ca                       dex
144d : ca                       dex
144e : ca                       dex
144f : ca                       dex
1450 : ca                       dex
1451 : ca                       dex
1452 : ca                       dex             ;+80
1453 : ca                       dex
1454 : ca                       dex
1455 : ca                       dex
1456 : ca                       dex
1457 : ca                       dex
1458 : ca                       dex
1459 : ca                       dex
145a : ca                       dex
145b : ca                       dex
145c : ca                       dex             ;+90
145d : ca                       dex
145e : ca                       dex
145f : ca                       dex
1460 : ca                       dex
1461 : ca                       dex
1462 : ca                       dex
1463 : ca                       dex
1464 : ca                       dex
1465 : ca                       dex
1466 : ca                       dex             ;+100
1467 : ca                       dex
1468 : ca                       dex
1469 : ca                       dex
146a : ca                       dex
146b : ca                       dex
146c : ca                       dex
146d : ca                       dex
146e : ca                       dex
146f : ca                       dex
1470 : ca                       dex             ;+110
1471 : ca                       dex
1472 : ca                       dex
1473 : ca                       dex
1474 : ca                       dex
1475 : ca                       dex
1476 : ca                       dex
1477 : ca                       dex
1478 : ca                       dex
1479 : ca                       dex
147a : ca                       dex             ;+120
147b : ca                       dex
147c : ca                       dex
147d : ca                       dex
147e : ca                       dex
147f : ca                       dex
1480 : ca                       dex
1481 : ea                       nop             ;offset landing zone - forward branch too far
1482 : ea                       nop
1483 : ea                       nop
1484 : ea                       nop
1485 : ea                       nop
1486 : f008                     beq range_ok    ;+127 - max forward
                                trap            ; bad range
1488 : 208553          >        jsr report_error
                        
148b : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
148c : ea                       nop
148d : ea                       nop
148e : ea                       nop
148f : ea                       nop
1490 :                  range_ok
1490 : ea                       nop
1491 : ea                       nop
1492 : ea                       nop
1493 : ea                       nop
1494 : ea                       nop
1495 : c000                     cpy #0
1497 : f003                     beq range_end
1499 : 4c6113                   jmp range_loop
149c :                  range_end               ;range test successful
                            endif
                                next_test
149c : ad0011          >            lda test_case   ;previous test
149f : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
14a1 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
14a3 : 208553          >        jsr report_error
                       >
14a6 :                 >skip0010
                       >
0002 =                 >test_num = test_num + 1
14a6 : a902            >            lda #test_num   ;*** next tests' number
14a8 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
14ab : c001                     cpy #1          ;testing BNE true
14ad : d003                     bne test_bne
                                trap
14af : 208553          >        jsr report_error
                        
14b2 :                  test_bne
14b2 : a900                     lda #0
14b4 : c900                     cmp #0          ;test compare immediate
                                trap_ne
14b6 : f003            >        beq skip0013
                       >        trap            ;failed not equal (non zero)
14b8 : 208553          >        jsr report_error
                       >
14bb :                 >skip0013
                        
                                trap_cc
14bb : b003            >        bcs skip0015
                       >        trap            ;failed carry clear
14bd : 208553          >        jsr report_error
                       >
14c0 :                 >skip0015
                        
                                trap_mi
14c0 : 1003            >        bpl skip0017
                       >        trap            ;failed minus (bit 7 set)
14c2 : 208553          >        jsr report_error
                       >
14c5 :                 >skip0017
                        
14c5 : c901                     cmp #1
                                trap_eq
14c7 : d003            >        bne skip0019
                       >        trap           ;failed equal (zero)
14c9 : 208553          >        jsr report_error
                       >
14cc :                 >skip0019
                        
                                trap_cs
14cc : 9003            >        bcc skip0021
                       >        trap            ;failed carry set
14ce : 208553          >        jsr report_error
                       >
14d1 :                 >skip0021
                        
                                trap_pl
14d1 : 3003            >        bmi skip0023
                       >        trap            ;failed plus (bit 7 clear)
14d3 : 208553          >        jsr report_error
                       >
14d6 :                 >skip0023
                        
14d6 : aa                       tax
14d7 : e000                     cpx #0          ;test compare x immediate
                                trap_ne
14d9 : f003            >        beq skip0025
                       >        trap            ;failed not equal (non zero)
14db : 208553          >        jsr report_error
                       >
14de :                 >skip0025
                        
                                trap_cc
14de : b003            >        bcs skip0027
                       >        trap            ;failed carry clear
14e0 : 208553          >        jsr report_error
                       >
14e3 :                 >skip0027
                        
                                trap_mi
14e3 : 1003            >        bpl skip0029
                       >        trap            ;failed minus (bit 7 set)
14e5 : 208553          >        jsr report_error
                       >
14e8 :                 >skip0029
                        
14e8 : e001                     cpx #1
                                trap_eq
14ea : d003            >        bne skip0031
                       >        trap           ;failed equal (zero)
14ec : 208553          >        jsr report_error
                       >
14ef :                 >skip0031
                        
                                trap_cs
14ef : 9003            >        bcc skip0033
                       >        trap            ;failed carry set
14f1 : 208553          >        jsr report_error
                       >
14f4 :                 >skip0033
                        
                                trap_pl
14f4 : 3003            >        bmi skip0035
                       >        trap            ;failed plus (bit 7 clear)
14f6 : 208553          >        jsr report_error
                       >
14f9 :                 >skip0035
                        
14f9 : a8                       tay
14fa : c000                     cpy #0          ;test compare y immediate
                                trap_ne
14fc : f003            >        beq skip0037
                       >        trap            ;failed not equal (non zero)
14fe : 208553          >        jsr report_error
                       >
1501 :                 >skip0037
                        
                                trap_cc
1501 : b003            >        bcs skip0039
                       >        trap            ;failed carry clear
1503 : 208553          >        jsr report_error
                       >
1506 :                 >skip0039
                        
                                trap_mi
1506 : 1003            >        bpl skip0041
                       >        trap            ;failed minus (bit 7 set)
1508 : 208553          >        jsr report_error
                       >
150b :                 >skip0041
                        
150b : c001                     cpy #1
                                trap_eq
150d : d003            >        bne skip0043
                       >        trap           ;failed equal (zero)
150f : 208553          >        jsr report_error
                       >
1512 :                 >skip0043
                        
                                trap_cs
1512 : 9003            >        bcc skip0045
                       >        trap            ;failed carry set
1514 : 208553          >        jsr report_error
                       >
1517 :                 >skip0045
                        
                                trap_pl
1517 : 3003            >        bmi skip0047
                       >        trap            ;failed plus (bit 7 clear)
1519 : 208553          >        jsr report_error
                       >
151c :                 >skip0047
                        
                                next_test
151c : ad0011          >            lda test_case   ;previous test
151f : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1521 : f003            >        beq skip0050
                       >        trap            ;failed not equal (non zero)
1523 : 208553          >        jsr report_error
                       >
1526 :                 >skip0050
                       >
0003 =                 >test_num = test_num + 1
1526 : a903            >            lda #test_num   ;*** next tests' number
1528 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ;testing stack operations PHA PHP PLA PLP
                        
152b : a2ff                     ldx #$ff        ;initialize stack
152d : 9a                       txs
152e : a955                     lda #$55
1530 : 48                       pha
1531 : a9aa                     lda #$aa
1533 : 48                       pha
1534 : cdfe01                   cmp $1fe        ;on stack ?
                                trap_ne
1537 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
1539 : 208553          >        jsr report_error
                       >
153c :                 >skip0052
                        
153c : ba                       tsx
153d : 8a                       txa             ;overwrite accu
153e : c9fd                     cmp #$fd        ;sp decremented?
                                trap_ne
1540 : f003            >        beq skip0054
                       >        trap            ;failed not equal (non zero)
1542 : 208553          >        jsr report_error
                       >
1545 :                 >skip0054
                        
1545 : 68                       pla
1546 : c9aa                     cmp #$aa        ;successful retreived from stack?
                                trap_ne
1548 : f003            >        beq skip0056
                       >        trap            ;failed not equal (non zero)
154a : 208553          >        jsr report_error
                       >
154d :                 >skip0056
                        
154d : 68                       pla
154e : c955                     cmp #$55
                                trap_ne
1550 : f003            >        beq skip0058
                       >        trap            ;failed not equal (non zero)
1552 : 208553          >        jsr report_error
                       >
1555 :                 >skip0058
                        
1555 : cdff01                   cmp $1ff        ;remains on stack?
                                trap_ne
1558 : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
155a : 208553          >        jsr report_error
                       >
155d :                 >skip0060
                        
155d : ba                       tsx
155e : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
1560 : f003            >        beq skip0062
                       >        trap            ;failed not equal (non zero)
1562 : 208553          >        jsr report_error
                       >
1565 :                 >skip0062
                        
                                next_test
1565 : ad0011          >            lda test_case   ;previous test
1568 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
156a : f003            >        beq skip0065
                       >        trap            ;failed not equal (non zero)
156c : 208553          >        jsr report_error
                       >
156f :                 >skip0065
                       >
0004 =                 >test_num = test_num + 1
156f : a904            >            lda #test_num   ;*** next tests' number
1571 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ
                                set_stat $ff    ;all on
                       >            load_flag $ff    
1574 : a9ff            >            lda #$ff                 ;allow test to change I-flag (no mask)
                       >
1576 : 48              >            pha         ;use stack to load status
1577 : 28              >            plp
                        
1578 : 101a                     bpl nbr1        ;branches should not be taken
157a : 501b                     bvc nbr2
157c : 901c                     bcc nbr3
157e : d01d                     bne nbr4
1580 : 3003                     bmi br1         ;branches should be taken
                                trap
1582 : 208553          >        jsr report_error
                        
1585 : 7003             br1     bvs br2
                                trap
1587 : 208553          >        jsr report_error
                        
158a : b003             br2     bcs br3
                                trap
158c : 208553          >        jsr report_error
                        
158f : f00f             br3     beq br4
                                trap
1591 : 208553          >        jsr report_error
                        
1594 :                  nbr1
                                trap            ;previous bpl taken
1594 : 208553          >        jsr report_error
                        
1597 :                  nbr2
                                trap            ;previous bvc taken
1597 : 208553          >        jsr report_error
                        
159a :                  nbr3
                                trap            ;previous bcc taken
159a : 208553          >        jsr report_error
                        
159d :                  nbr4
                                trap            ;previous bne taken
159d : 208553          >        jsr report_error
                        
15a0 : 08               br4     php
15a1 : ba                       tsx
15a2 : e0fe                     cpx #$fe        ;sp after php?
                                trap_ne
15a4 : f003            >        beq skip0077
                       >        trap            ;failed not equal (non zero)
15a6 : 208553          >        jsr report_error
                       >
15a9 :                 >skip0077
                        
15a9 : 68                       pla
                                cmp_flag $ff    ;returned all flags on?
15aa : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
15ac : f003            >        beq skip0080
                       >        trap            ;failed not equal (non zero)
15ae : 208553          >        jsr report_error
                       >
15b1 :                 >skip0080
                        
15b1 : ba                       tsx
15b2 : e0ff                     cpx #$ff        ;sp after php?
                                trap_ne
15b4 : f003            >        beq skip0082
                       >        trap            ;failed not equal (non zero)
15b6 : 208553          >        jsr report_error
                       >
15b9 :                 >skip0082
                        
                                set_stat 0      ;all off
                       >            load_flag 0      
15b9 : a900            >            lda #0                   ;allow test to change I-flag (no mask)
                       >
15bb : 48              >            pha         ;use stack to load status
15bc : 28              >            plp
                        
15bd : 301a                     bmi nbr11       ;branches should not be taken
15bf : 701b                     bvs nbr12
15c1 : b01c                     bcs nbr13
15c3 : f01d                     beq nbr14
15c5 : 1003                     bpl br11        ;branches should be taken
                                trap
15c7 : 208553          >        jsr report_error
                        
15ca : 5003             br11    bvc br12
                                trap
15cc : 208553          >        jsr report_error
                        
15cf : 9003             br12    bcc br13
                                trap
15d1 : 208553          >        jsr report_error
                        
15d4 : d00f             br13    bne br14
                                trap
15d6 : 208553          >        jsr report_error
                        
15d9 :                  nbr11
                                trap            ;previous bmi taken
15d9 : 208553          >        jsr report_error
                        
15dc :                  nbr12
                                trap            ;previous bvs taken
15dc : 208553          >        jsr report_error
                        
15df :                  nbr13
                                trap            ;previous bcs taken
15df : 208553          >        jsr report_error
                        
15e2 :                  nbr14
                                trap            ;previous beq taken
15e2 : 208553          >        jsr report_error
                        
15e5 : 08               br14    php
15e6 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
15e7 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
15e9 : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
15eb : 208553          >        jsr report_error
                       >
15ee :                 >skip0095
                        
                                ;crosscheck flags
                                set_stat zero
                       >            load_flag zero
15ee : a902            >            lda #zero             ;allow test to change I-flag (no mask)
                       >
15f0 : 48              >            pha         ;use stack to load status
15f1 : 28              >            plp
                        
15f2 : d002                     bne brzs1
15f4 : f003                     beq brzs2
15f6 :                  brzs1
                                trap            ;branch zero/non zero
15f6 : 208553          >        jsr report_error
                        
15f9 : b002             brzs2   bcs brzs3
15fb : 9003                     bcc brzs4
15fd :                  brzs3
                                trap            ;branch carry/no carry
15fd : 208553          >        jsr report_error
                        
1600 : 3002             brzs4   bmi brzs5
1602 : 1003                     bpl brzs6
1604 :                  brzs5
                                trap            ;branch minus/plus
1604 : 208553          >        jsr report_error
                        
1607 : 7002             brzs6   bvs brzs7
1609 : 5003                     bvc brzs8
160b :                  brzs7
                                trap            ;branch overflow/no overflow
160b : 208553          >        jsr report_error
                        
160e :                  brzs8
                                set_stat carry
                       >            load_flag carry
160e : a901            >            lda #carry             ;allow test to change I-flag (no mask)
                       >
1610 : 48              >            pha         ;use stack to load status
1611 : 28              >            plp
                        
1612 : f002                     beq brcs1
1614 : d003                     bne brcs2
1616 :                  brcs1
                                trap            ;branch zero/non zero
1616 : 208553          >        jsr report_error
                        
1619 : 9002             brcs2   bcc brcs3
161b : b003                     bcs brcs4
161d :                  brcs3
                                trap            ;branch carry/no carry
161d : 208553          >        jsr report_error
                        
1620 : 3002             brcs4   bmi brcs5
1622 : 1003                     bpl brcs6
1624 :                  brcs5
                                trap            ;branch minus/plus
1624 : 208553          >        jsr report_error
                        
1627 : 7002             brcs6   bvs brcs7
1629 : 5003                     bvc brcs8
162b :                  brcs7
                                trap            ;branch overflow/no overflow
162b : 208553          >        jsr report_error
                        
                        
162e :                  brcs8
                                set_stat minus
                       >            load_flag minus
162e : a980            >            lda #minus             ;allow test to change I-flag (no mask)
                       >
1630 : 48              >            pha         ;use stack to load status
1631 : 28              >            plp
                        
1632 : f002                     beq brmi1
1634 : d003                     bne brmi2
1636 :                  brmi1
                                trap            ;branch zero/non zero
1636 : 208553          >        jsr report_error
                        
1639 : b002             brmi2   bcs brmi3
163b : 9003                     bcc brmi4
163d :                  brmi3
                                trap            ;branch carry/no carry
163d : 208553          >        jsr report_error
                        
1640 : 1002             brmi4   bpl brmi5
1642 : 3003                     bmi brmi6
1644 :                  brmi5
                                trap            ;branch minus/plus
1644 : 208553          >        jsr report_error
                        
1647 : 7002             brmi6   bvs brmi7
1649 : 5003                     bvc brmi8
164b :                  brmi7
                                trap            ;branch overflow/no overflow
164b : 208553          >        jsr report_error
                        
164e :                  brmi8
                                set_stat overfl
                       >            load_flag overfl
164e : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
1650 : 48              >            pha         ;use stack to load status
1651 : 28              >            plp
                        
1652 : f002                     beq brvs1
1654 : d003                     bne brvs2
1656 :                  brvs1
                                trap            ;branch zero/non zero
1656 : 208553          >        jsr report_error
                        
1659 : b002             brvs2   bcs brvs3
165b : 9003                     bcc brvs4
165d :                  brvs3
                                trap            ;branch carry/no carry
165d : 208553          >        jsr report_error
                        
1660 : 3002             brvs4   bmi brvs5
1662 : 1003                     bpl brvs6
1664 :                  brvs5
                                trap            ;branch minus/plus
1664 : 208553          >        jsr report_error
                        
1667 : 5002             brvs6   bvc brvs7
1669 : 7003                     bvs brvs8
166b :                  brvs7
                                trap            ;branch overflow/no overflow
166b : 208553          >        jsr report_error
                        
166e :                  brvs8
                                set_stat $ff-zero
                       >            load_flag $ff-zero
166e : a9fd            >            lda #$ff-zero             ;allow test to change I-flag (no mask)
                       >
1670 : 48              >            pha         ;use stack to load status
1671 : 28              >            plp
                        
1672 : f002                     beq brzc1
1674 : d003                     bne brzc2
1676 :                  brzc1
                                trap            ;branch zero/non zero
1676 : 208553          >        jsr report_error
                        
1679 : 9002             brzc2   bcc brzc3
167b : b003                     bcs brzc4
167d :                  brzc3
                                trap            ;branch carry/no carry
167d : 208553          >        jsr report_error
                        
1680 : 1002             brzc4   bpl brzc5
1682 : 3003                     bmi brzc6
1684 :                  brzc5
                                trap            ;branch minus/plus
1684 : 208553          >        jsr report_error
                        
1687 : 5002             brzc6   bvc brzc7
1689 : 7003                     bvs brzc8
168b :                  brzc7
                                trap            ;branch overflow/no overflow
168b : 208553          >        jsr report_error
                        
168e :                  brzc8
                                set_stat $ff-carry
                       >            load_flag $ff-carry
168e : a9fe            >            lda #$ff-carry             ;allow test to change I-flag (no mask)
                       >
1690 : 48              >            pha         ;use stack to load status
1691 : 28              >            plp
                        
1692 : d002                     bne brcc1
1694 : f003                     beq brcc2
1696 :                  brcc1
                                trap            ;branch zero/non zero
1696 : 208553          >        jsr report_error
                        
1699 : b002             brcc2   bcs brcc3
169b : 9003                     bcc brcc4
169d :                  brcc3
                                trap            ;branch carry/no carry
169d : 208553          >        jsr report_error
                        
16a0 : 1002             brcc4   bpl brcc5
16a2 : 3003                     bmi brcc6
16a4 :                  brcc5
                                trap            ;branch minus/plus
16a4 : 208553          >        jsr report_error
                        
16a7 : 5002             brcc6   bvc brcc7
16a9 : 7003                     bvs brcc8
16ab :                  brcc7
                                trap            ;branch overflow/no overflow
16ab : 208553          >        jsr report_error
                        
16ae :                  brcc8
                                set_stat $ff-minus
                       >            load_flag $ff-minus
16ae : a97f            >            lda #$ff-minus             ;allow test to change I-flag (no mask)
                       >
16b0 : 48              >            pha         ;use stack to load status
16b1 : 28              >            plp
                        
16b2 : d002                     bne brpl1
16b4 : f003                     beq brpl2
16b6 :                  brpl1
                                trap            ;branch zero/non zero
16b6 : 208553          >        jsr report_error
                        
16b9 : 9002             brpl2   bcc brpl3
16bb : b003                     bcs brpl4
16bd :                  brpl3
                                trap            ;branch carry/no carry
16bd : 208553          >        jsr report_error
                        
16c0 : 3002             brpl4   bmi brpl5
16c2 : 1003                     bpl brpl6
16c4 :                  brpl5
                                trap            ;branch minus/plus
16c4 : 208553          >        jsr report_error
                        
16c7 : 5002             brpl6   bvc brpl7
16c9 : 7003                     bvs brpl8
16cb :                  brpl7
                                trap            ;branch overflow/no overflow
16cb : 208553          >        jsr report_error
                        
16ce :                  brpl8
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
16ce : a9bf            >            lda #$ff-overfl             ;allow test to change I-flag (no mask)
                       >
16d0 : 48              >            pha         ;use stack to load status
16d1 : 28              >            plp
                        
16d2 : d002                     bne brvc1
16d4 : f003                     beq brvc2
16d6 :                  brvc1
                                trap            ;branch zero/non zero
16d6 : 208553          >        jsr report_error
                        
16d9 : 9002             brvc2   bcc brvc3
16db : b003                     bcs brvc4
16dd :                  brvc3
                                trap            ;branch carry/no carry
16dd : 208553          >        jsr report_error
                        
16e0 : 1002             brvc4   bpl brvc5
16e2 : 3003                     bmi brvc6
16e4 :                  brvc5
                                trap            ;branch minus/plus
16e4 : 208553          >        jsr report_error
                        
16e7 : 7002             brvc6   bvs brvc7
16e9 : 5003                     bvc brvc8
16eb :                  brvc7
                                trap            ;branch overflow/no overflow
16eb : 208553          >        jsr report_error
                        
16ee :                  brvc8
                                next_test
16ee : ad0011          >            lda test_case   ;previous test
16f1 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
16f3 : f003            >        beq skip0146
                       >        trap            ;failed not equal (non zero)
16f5 : 208553          >        jsr report_error
                       >
16f8 :                 >skip0146
                       >
0005 =                 >test_num = test_num + 1
16f8 : a905            >            lda #test_num   ;*** next tests' number
16fa : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test PHA does not alter flags or accumulator but PLA does
16fd : a255                     ldx #$55        ;x & y protected
16ff : a0aa                     ldy #$aa
                                set_a 1,$ff     ;push
                       >            load_flag $ff     
1701 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1703 : 48              >            pha         ;use stack to load status
1704 : a901            >            lda #1     ;precharge accu
1706 : 28              >            plp
                        
1707 : 48                       pha
                                tst_a 1,$ff
1708 : 08              >            php         ;save flags
1709 : c901            >            cmp #1     ;test result
                       >            trap_ne
170b : f003            >        beq skip0151
                       >        trap            ;failed not equal (non zero)
170d : 208553          >        jsr report_error
                       >
1710 :                 >skip0151
                       >
1710 : 68              >            pla         ;load status
1711 : 48              >            pha
                       >            cmp_flag $ff
1712 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1714 : f003            >        beq skip0154
                       >        trap            ;failed not equal (non zero)
1716 : 208553          >        jsr report_error
                       >
1719 :                 >skip0154
                       >
1719 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
171a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
171c : 48              >            pha         ;use stack to load status
171d : a900            >            lda #0     ;precharge accu
171f : 28              >            plp
                        
1720 : 48                       pha
                                tst_a 0,0
1721 : 08              >            php         ;save flags
1722 : c900            >            cmp #0     ;test result
                       >            trap_ne
1724 : f003            >        beq skip0159
                       >        trap            ;failed not equal (non zero)
1726 : 208553          >        jsr report_error
                       >
1729 :                 >skip0159
                       >
1729 : 68              >            pla         ;load status
172a : 48              >            pha
                       >            cmp_flag 0
172b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
172d : f003            >        beq skip0162
                       >        trap            ;failed not equal (non zero)
172f : 208553          >        jsr report_error
                       >
1732 :                 >skip0162
                       >
1732 : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
1733 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1735 : 48              >            pha         ;use stack to load status
1736 : a9ff            >            lda #$ff     ;precharge accu
1738 : 28              >            plp
                        
1739 : 48                       pha
                                tst_a $ff,$ff
173a : 08              >            php         ;save flags
173b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
173d : f003            >        beq skip0167
                       >        trap            ;failed not equal (non zero)
173f : 208553          >        jsr report_error
                       >
1742 :                 >skip0167
                       >
1742 : 68              >            pla         ;load status
1743 : 48              >            pha
                       >            cmp_flag $ff
1744 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1746 : f003            >        beq skip0170
                       >        trap            ;failed not equal (non zero)
1748 : 208553          >        jsr report_error
                       >
174b :                 >skip0170
                       >
174b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
174c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
174e : 48              >            pha         ;use stack to load status
174f : a901            >            lda #1     ;precharge accu
1751 : 28              >            plp
                        
1752 : 48                       pha
                                tst_a 1,0
1753 : 08              >            php         ;save flags
1754 : c901            >            cmp #1     ;test result
                       >            trap_ne
1756 : f003            >        beq skip0175
                       >        trap            ;failed not equal (non zero)
1758 : 208553          >        jsr report_error
                       >
175b :                 >skip0175
                       >
175b : 68              >            pla         ;load status
175c : 48              >            pha
                       >            cmp_flag 0
175d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
175f : f003            >        beq skip0178
                       >        trap            ;failed not equal (non zero)
1761 : 208553          >        jsr report_error
                       >
1764 :                 >skip0178
                       >
1764 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff
                       >            load_flag $ff
1765 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1767 : 48              >            pha         ;use stack to load status
1768 : a900            >            lda #0     ;precharge accu
176a : 28              >            plp
                        
176b : 48                       pha
                                tst_a 0,$ff
176c : 08              >            php         ;save flags
176d : c900            >            cmp #0     ;test result
                       >            trap_ne
176f : f003            >        beq skip0183
                       >        trap            ;failed not equal (non zero)
1771 : 208553          >        jsr report_error
                       >
1774 :                 >skip0183
                       >
1774 : 68              >            pla         ;load status
1775 : 48              >            pha
                       >            cmp_flag $ff
1776 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1778 : f003            >        beq skip0186
                       >        trap            ;failed not equal (non zero)
177a : 208553          >        jsr report_error
                       >
177d :                 >skip0186
                       >
177d : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
177e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1780 : 48              >            pha         ;use stack to load status
1781 : a9ff            >            lda #$ff     ;precharge accu
1783 : 28              >            plp
                        
1784 : 48                       pha
                                tst_a $ff,0
1785 : 08              >            php         ;save flags
1786 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1788 : f003            >        beq skip0191
                       >        trap            ;failed not equal (non zero)
178a : 208553          >        jsr report_error
                       >
178d :                 >skip0191
                       >
178d : 68              >            pla         ;load status
178e : 48              >            pha
                       >            cmp_flag 0
178f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1791 : f003            >        beq skip0194
                       >        trap            ;failed not equal (non zero)
1793 : 208553          >        jsr report_error
                       >
1796 :                 >skip0194
                       >
1796 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff     ;pull
                       >            load_flag $ff     
1797 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1799 : 48              >            pha         ;use stack to load status
179a : a900            >            lda #0     ;precharge accu
179c : 28              >            plp
                        
179d : 68                       pla
                                tst_a $ff,$ff-zero
179e : 08              >            php         ;save flags
179f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
17a1 : f003            >        beq skip0199
                       >        trap            ;failed not equal (non zero)
17a3 : 208553          >        jsr report_error
                       >
17a6 :                 >skip0199
                       >
17a6 : 68              >            pla         ;load status
17a7 : 48              >            pha
                       >            cmp_flag $ff-zero
17a8 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17aa : f003            >        beq skip0202
                       >        trap            ;failed not equal (non zero)
17ac : 208553          >        jsr report_error
                       >
17af :                 >skip0202
                       >
17af : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
17b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17b2 : 48              >            pha         ;use stack to load status
17b3 : a9ff            >            lda #$ff     ;precharge accu
17b5 : 28              >            plp
                        
17b6 : 68                       pla
                                tst_a 0,zero
17b7 : 08              >            php         ;save flags
17b8 : c900            >            cmp #0     ;test result
                       >            trap_ne
17ba : f003            >        beq skip0207
                       >        trap            ;failed not equal (non zero)
17bc : 208553          >        jsr report_error
                       >
17bf :                 >skip0207
                       >
17bf : 68              >            pla         ;load status
17c0 : 48              >            pha
                       >            cmp_flag zero
17c1 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17c3 : f003            >        beq skip0210
                       >        trap            ;failed not equal (non zero)
17c5 : 208553          >        jsr report_error
                       >
17c8 :                 >skip0210
                       >
17c8 : 28              >            plp         ;restore status
                        
                                set_a $fe,$ff
                       >            load_flag $ff
17c9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17cb : 48              >            pha         ;use stack to load status
17cc : a9fe            >            lda #$fe     ;precharge accu
17ce : 28              >            plp
                        
17cf : 68                       pla
                                tst_a 1,$ff-zero-minus
17d0 : 08              >            php         ;save flags
17d1 : c901            >            cmp #1     ;test result
                       >            trap_ne
17d3 : f003            >        beq skip0215
                       >        trap            ;failed not equal (non zero)
17d5 : 208553          >        jsr report_error
                       >
17d8 :                 >skip0215
                       >
17d8 : 68              >            pla         ;load status
17d9 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
17da : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17dc : f003            >        beq skip0218
                       >        trap            ;failed not equal (non zero)
17de : 208553          >        jsr report_error
                       >
17e1 :                 >skip0218
                       >
17e1 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
17e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17e4 : 48              >            pha         ;use stack to load status
17e5 : a900            >            lda #0     ;precharge accu
17e7 : 28              >            plp
                        
17e8 : 68                       pla
                                tst_a $ff,minus
17e9 : 08              >            php         ;save flags
17ea : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
17ec : f003            >        beq skip0223
                       >        trap            ;failed not equal (non zero)
17ee : 208553          >        jsr report_error
                       >
17f1 :                 >skip0223
                       >
17f1 : 68              >            pla         ;load status
17f2 : 48              >            pha
                       >            cmp_flag minus
17f3 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17f5 : f003            >        beq skip0226
                       >        trap            ;failed not equal (non zero)
17f7 : 208553          >        jsr report_error
                       >
17fa :                 >skip0226
                       >
17fa : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
17fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17fd : 48              >            pha         ;use stack to load status
17fe : a9ff            >            lda #$ff     ;precharge accu
1800 : 28              >            plp
                        
1801 : 68                       pla
                                tst_a 0,$ff-minus
1802 : 08              >            php         ;save flags
1803 : c900            >            cmp #0     ;test result
                       >            trap_ne
1805 : f003            >        beq skip0231
                       >        trap            ;failed not equal (non zero)
1807 : 208553          >        jsr report_error
                       >
180a :                 >skip0231
                       >
180a : 68              >            pla         ;load status
180b : 48              >            pha
                       >            cmp_flag $ff-minus
180c : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
180e : f003            >        beq skip0234
                       >        trap            ;failed not equal (non zero)
1810 : 208553          >        jsr report_error
                       >
1813 :                 >skip0234
                       >
1813 : 28              >            plp         ;restore status
                        
                                set_a $fe,0
                       >            load_flag 0
1814 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1816 : 48              >            pha         ;use stack to load status
1817 : a9fe            >            lda #$fe     ;precharge accu
1819 : 28              >            plp
                        
181a : 68                       pla
                                tst_a 1,0
181b : 08              >            php         ;save flags
181c : c901            >            cmp #1     ;test result
                       >            trap_ne
181e : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
1820 : 208553          >        jsr report_error
                       >
1823 :                 >skip0239
                       >
1823 : 68              >            pla         ;load status
1824 : 48              >            pha
                       >            cmp_flag 0
1825 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1827 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
1829 : 208553          >        jsr report_error
                       >
182c :                 >skip0242
                       >
182c : 28              >            plp         ;restore status
                        
182d : e055                     cpx #$55        ;x & y unchanged?
                                trap_ne
182f : f003            >        beq skip0244
                       >        trap            ;failed not equal (non zero)
1831 : 208553          >        jsr report_error
                       >
1834 :                 >skip0244
                        
1834 : c0aa                     cpy #$aa
                                trap_ne
1836 : f003            >        beq skip0246
                       >        trap            ;failed not equal (non zero)
1838 : 208553          >        jsr report_error
                       >
183b :                 >skip0246
                        
                                next_test
183b : ad0011          >            lda test_case   ;previous test
183e : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1840 : f003            >        beq skip0249
                       >        trap            ;failed not equal (non zero)
1842 : 208553          >        jsr report_error
                       >
1845 :                 >skip0249
                       >
0006 =                 >test_num = test_num + 1
1845 : a906            >            lda #test_num   ;*** next tests' number
1847 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
184a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
184c : 48              >            pha         ;use stack to load status
184d : a93c            >            lda #$3c     ;precharge accu
184f : 28              >            plp
                        
1850 : 49c3                     eor #$c3
                                tst_a $ff,fn
1852 : 08              >            php         ;save flags
1853 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1855 : f003            >        beq skip0254
                       >        trap            ;failed not equal (non zero)
1857 : 208553          >        jsr report_error
                       >
185a :                 >skip0254
                       >
185a : 68              >            pla         ;load status
185b : 48              >            pha
                       >            cmp_flag fn
185c : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
185e : f003            >        beq skip0257
                       >        trap            ;failed not equal (non zero)
1860 : 208553          >        jsr report_error
                       >
1863 :                 >skip0257
                       >
1863 : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
1864 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1866 : 48              >            pha         ;use stack to load status
1867 : a9c3            >            lda #$c3     ;precharge accu
1869 : 28              >            plp
                        
186a : 49c3                     eor #$c3
                                tst_a 0,fz
186c : 08              >            php         ;save flags
186d : c900            >            cmp #0     ;test result
                       >            trap_ne
186f : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
1871 : 208553          >        jsr report_error
                       >
1874 :                 >skip0262
                       >
1874 : 68              >            pla         ;load status
1875 : 48              >            pha
                       >            cmp_flag fz
1876 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1878 : f003            >        beq skip0265
                       >        trap            ;failed not equal (non zero)
187a : 208553          >        jsr report_error
                       >
187d :                 >skip0265
                       >
187d : 28              >            plp         ;restore status
                        
                                next_test
187e : ad0011          >            lda test_case   ;previous test
1881 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1883 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
1885 : 208553          >        jsr report_error
                       >
1888 :                 >skip0268
                       >
0007 =                 >test_num = test_num + 1
1888 : a907            >            lda #test_num   ;*** next tests' number
188a : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)
                        ; testing NOP
188d : a224                     ldx #$24
188f : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
1891 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1893 : 48              >            pha         ;use stack to load status
1894 : a918            >            lda #$18     ;precharge accu
1896 : 28              >            plp
                        
1897 : ea                       nop
                                tst_a $18,0
1898 : 08              >            php         ;save flags
1899 : c918            >            cmp #$18     ;test result
                       >            trap_ne
189b : f003            >        beq skip0273
                       >        trap            ;failed not equal (non zero)
189d : 208553          >        jsr report_error
                       >
18a0 :                 >skip0273
                       >
18a0 : 68              >            pla         ;load status
18a1 : 48              >            pha
                       >            cmp_flag 0
18a2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18a4 : f003            >        beq skip0276
                       >        trap            ;failed not equal (non zero)
18a6 : 208553          >        jsr report_error
                       >
18a9 :                 >skip0276
                       >
18a9 : 28              >            plp         ;restore status
                        
18aa : e024                     cpx #$24
                                trap_ne
18ac : f003            >        beq skip0278
                       >        trap            ;failed not equal (non zero)
18ae : 208553          >        jsr report_error
                       >
18b1 :                 >skip0278
                        
18b1 : c042                     cpy #$42
                                trap_ne
18b3 : f003            >        beq skip0280
                       >        trap            ;failed not equal (non zero)
18b5 : 208553          >        jsr report_error
                       >
18b8 :                 >skip0280
                        
18b8 : a2db                     ldx #$db
18ba : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
18bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
18be : 48              >            pha         ;use stack to load status
18bf : a9e7            >            lda #$e7     ;precharge accu
18c1 : 28              >            plp
                        
18c2 : ea                       nop
                                tst_a $e7,$ff
18c3 : 08              >            php         ;save flags
18c4 : c9e7            >            cmp #$e7     ;test result
                       >            trap_ne
18c6 : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
18c8 : 208553          >        jsr report_error
                       >
18cb :                 >skip0285
                       >
18cb : 68              >            pla         ;load status
18cc : 48              >            pha
                       >            cmp_flag $ff
18cd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18cf : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
18d1 : 208553          >        jsr report_error
                       >
18d4 :                 >skip0288
                       >
18d4 : 28              >            plp         ;restore status
                        
18d5 : e0db                     cpx #$db
                                trap_ne
18d7 : f003            >        beq skip0290
                       >        trap            ;failed not equal (non zero)
18d9 : 208553          >        jsr report_error
                       >
18dc :                 >skip0290
                        
18dc : c0bd                     cpy #$bd
                                trap_ne
18de : f003            >        beq skip0292
                       >        trap            ;failed not equal (non zero)
18e0 : 208553          >        jsr report_error
                       >
18e3 :                 >skip0292
                        
                                next_test
18e3 : ad0011          >            lda test_case   ;previous test
18e6 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
18e8 : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
18ea : 208553          >        jsr report_error
                       >
18ed :                 >skip0295
                       >
0008 =                 >test_num = test_num + 1
18ed : a908            >            lda #test_num   ;*** next tests' number
18ef : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
18f2 : a900            >            lda #$0             ;allow test to change I-flag (no mask)
                       >
18f4 : 48              >            pha         ;use stack to load status
18f5 : 28              >            plp
                        
18f6 : a946                     lda #'F'
18f8 : a241                     ldx #'A'
18fa : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
18fc : 4cb551                   jmp test_far
18ff : ea                       nop
1900 : ea                       nop
                                trap_ne         ;runover protection
1901 : f003            >        beq skip0299
                       >        trap            ;failed not equal (non zero)
1903 : 208553          >        jsr report_error
                       >
1906 :                 >skip0299
                        
1906 : e8                       inx
1907 : e8                       inx
1908 :                  far_ret
                                trap_eq         ;returned flags OK?
1908 : d003            >        bne skip0301
                       >        trap           ;failed equal (zero)
190a : 208553          >        jsr report_error
                       >
190d :                 >skip0301
                        
                                trap_pl
190d : 3003            >        bmi skip0303
                       >        trap            ;failed plus (bit 7 clear)
190f : 208553          >        jsr report_error
                       >
1912 :                 >skip0303
                        
                                trap_cc
1912 : b003            >        bcs skip0305
                       >        trap            ;failed carry clear
1914 : 208553          >        jsr report_error
                       >
1917 :                 >skip0305
                        
                                trap_vc
1917 : 7003            >        bvs skip0307
                       >        trap            ;failed overflow clear
1919 : 208553          >        jsr report_error
                       >
191c :                 >skip0307
                        
191c : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
                                trap_ne
191e : f003            >        beq skip0309
                       >        trap            ;failed not equal (non zero)
1920 : 208553          >        jsr report_error
                       >
1923 :                 >skip0309
                        
1923 : e042                     cpx #('A'+1)
                                trap_ne
1925 : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
1927 : 208553          >        jsr report_error
                       >
192a :                 >skip0311
                        
192a : c04f                     cpy #('R'-3)
                                trap_ne
192c : f003            >        beq skip0313
                       >        trap            ;failed not equal (non zero)
192e : 208553          >        jsr report_error
                       >
1931 :                 >skip0313
                        
1931 : ca                       dex
1932 : c8                       iny
1933 : c8                       iny
1934 : c8                       iny
1935 : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
1937 : 4c4319                   jmp test_near
193a : ea                       nop
193b : ea                       nop
                                trap_ne         ;runover protection
193c : f003            >        beq skip0315
                       >        trap            ;failed not equal (non zero)
193e : 208553          >        jsr report_error
                       >
1941 :                 >skip0315
                        
1941 : e8                       inx
1942 : e8                       inx
1943 :                  test_near
                                trap_eq         ;passed flags OK?
1943 : d003            >        bne skip0317
                       >        trap           ;failed equal (zero)
1945 : 208553          >        jsr report_error
                       >
1948 :                 >skip0317
                        
                                trap_mi
1948 : 1003            >        bpl skip0319
                       >        trap            ;failed minus (bit 7 set)
194a : 208553          >        jsr report_error
                       >
194d :                 >skip0319
                        
                                trap_cc
194d : b003            >        bcs skip0321
                       >        trap            ;failed carry clear
194f : 208553          >        jsr report_error
                       >
1952 :                 >skip0321
                        
                                trap_vc
1952 : 7003            >        bvs skip0323
                       >        trap            ;failed overflow clear
1954 : 208553          >        jsr report_error
                       >
1957 :                 >skip0323
                        
1957 : c946                     cmp #'F'        ;passed registers OK?
                                trap_ne
1959 : f003            >        beq skip0325
                       >        trap            ;failed not equal (non zero)
195b : 208553          >        jsr report_error
                       >
195e :                 >skip0325
                        
195e : e041                     cpx #'A'
                                trap_ne
1960 : f003            >        beq skip0327
                       >        trap            ;failed not equal (non zero)
1962 : 208553          >        jsr report_error
                       >
1965 :                 >skip0327
                        
1965 : c052                     cpy #'R'
                                trap_ne
1967 : f003            >        beq skip0329
                       >        trap            ;failed not equal (non zero)
1969 : 208553          >        jsr report_error
                       >
196c :                 >skip0329
                        
                                next_test
196c : ad0011          >            lda test_case   ;previous test
196f : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1971 : f003            >        beq skip0332
                       >        trap            ;failed not equal (non zero)
1973 : 208553          >        jsr report_error
                       >
1976 :                 >skip0332
                       >
0009 =                 >test_num = test_num + 1
1976 : a909            >            lda #test_num   ;*** next tests' number
1978 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
197b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
197d : 48              >            pha         ;use stack to load status
197e : 28              >            plp
                        
197f : a949                     lda #'I'
1981 : a24e                     ldx #'N'
1983 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
1985 : 6cfc51                   jmp (ptr_tst_ind)
1988 : ea                       nop
                                trap_ne         ;runover protection
1989 : f003            >        beq skip0336
                       >        trap            ;failed not equal (non zero)
198b : 208553          >        jsr report_error
                       >
198e :                 >skip0336
                        
198e : 88                       dey
198f : 88                       dey
1990 :                  ind_ret
1990 : 08                       php             ;either SP or Y count will fail, if we do not hit
1991 : 88                       dey
1992 : 88                       dey
1993 : 88                       dey
1994 : 28                       plp
                                trap_eq         ;returned flags OK?
1995 : d003            >        bne skip0338
                       >        trap           ;failed equal (zero)
1997 : 208553          >        jsr report_error
                       >
199a :                 >skip0338
                        
                                trap_pl
199a : 3003            >        bmi skip0340
                       >        trap            ;failed plus (bit 7 clear)
199c : 208553          >        jsr report_error
                       >
199f :                 >skip0340
                        
                                trap_cc
199f : b003            >        bcs skip0342
                       >        trap            ;failed carry clear
19a1 : 208553          >        jsr report_error
                       >
19a4 :                 >skip0342
                        
                                trap_vc
19a4 : 7003            >        bvs skip0344
                       >        trap            ;failed overflow clear
19a6 : 208553          >        jsr report_error
                       >
19a9 :                 >skip0344
                        
19a9 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
19ab : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
19ad : 208553          >        jsr report_error
                       >
19b0 :                 >skip0346
                        
19b0 : e04f                     cpx #('N'+1)
                                trap_ne
19b2 : f003            >        beq skip0348
                       >        trap            ;failed not equal (non zero)
19b4 : 208553          >        jsr report_error
                       >
19b7 :                 >skip0348
                        
19b7 : c03e                     cpy #('D'-6)
                                trap_ne
19b9 : f003            >        beq skip0350
                       >        trap            ;failed not equal (non zero)
19bb : 208553          >        jsr report_error
                       >
19be :                 >skip0350
                        
19be : ba                       tsx             ;SP check
19bf : e0ff                     cpx #$ff
                                trap_ne
19c1 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
19c3 : 208553          >        jsr report_error
                       >
19c6 :                 >skip0352
                        
                                next_test
19c6 : ad0011          >            lda test_case   ;previous test
19c9 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
19cb : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
19cd : 208553          >        jsr report_error
                       >
19d0 :                 >skip0355
                       >
000a =                 >test_num = test_num + 1
19d0 : a90a            >            lda #test_num   ;*** next tests' number
19d2 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
19d5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
19d7 : 48              >            pha         ;use stack to load status
19d8 : 28              >            plp
                        
19d9 : a94a                     lda #'J'
19db : a253                     ldx #'S'
19dd : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
19df : 205352                   jsr test_jsr
19e1 =                  jsr_ret = *-1           ;last address of jsr = return address
19e2 : 08                       php             ;either SP or Y count will fail, if we do not hit
19e3 : 88                       dey
19e4 : 88                       dey
19e5 : 88                       dey
19e6 : 28                       plp
                                trap_eq         ;returned flags OK?
19e7 : d003            >        bne skip0359
                       >        trap           ;failed equal (zero)
19e9 : 208553          >        jsr report_error
                       >
19ec :                 >skip0359
                        
                                trap_pl
19ec : 3003            >        bmi skip0361
                       >        trap            ;failed plus (bit 7 clear)
19ee : 208553          >        jsr report_error
                       >
19f1 :                 >skip0361
                        
                                trap_cc
19f1 : b003            >        bcs skip0363
                       >        trap            ;failed carry clear
19f3 : 208553          >        jsr report_error
                       >
19f6 :                 >skip0363
                        
                                trap_vc
19f6 : 7003            >        bvs skip0365
                       >        trap            ;failed overflow clear
19f8 : 208553          >        jsr report_error
                       >
19fb :                 >skip0365
                        
19fb : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
                                trap_ne
19fd : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
19ff : 208553          >        jsr report_error
                       >
1a02 :                 >skip0367
                        
1a02 : e054                     cpx #('S'+1)
                                trap_ne
1a04 : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
1a06 : 208553          >        jsr report_error
                       >
1a09 :                 >skip0369
                        
1a09 : c04c                     cpy #('R'-6)
                                trap_ne
1a0b : f003            >        beq skip0371
                       >        trap            ;failed not equal (non zero)
1a0d : 208553          >        jsr report_error
                       >
1a10 :                 >skip0371
                        
1a10 : ba                       tsx             ;sp?
1a11 : e0ff                     cpx #$ff
                                trap_ne
1a13 : f003            >        beq skip0373
                       >        trap            ;failed not equal (non zero)
1a15 : 208553          >        jsr report_error
                       >
1a18 :                 >skip0373
                        
                                next_test
1a18 : ad0011          >            lda test_case   ;previous test
1a1b : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1a1d : f003            >        beq skip0376
                       >        trap            ;failed not equal (non zero)
1a1f : 208553          >        jsr report_error
                       >
1a22 :                 >skip0376
                       >
000b =                 >test_num = test_num + 1
1a22 : a90b            >            lda #test_num   ;*** next tests' number
1a24 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                            else
1a27 : a91a                     lda #hi brk_ret0 ;emulated break
1a29 : 48                       pha
1a2a : a93e                     lda #lo brk_ret0
1a2c : 48                       pha
                                load_flag fao    ;set break & unused on stack
1a2d : a930            >            lda #fao                 ;allow test to change I-flag (no mask)
                        
1a2f : 48                       pha
                                load_flag intdis ;during interrupt
1a30 : a904            >            lda #intdis              ;allow test to change I-flag (no mask)
                        
1a32 : 48                       pha
1a33 : a942                     lda #'B'
1a35 : a252                     ldx #'R'
1a37 : a04b                     ldy #'K'
1a39 : 28                       plp             ;N=0, V=0, Z=0, C=0
1a3a : 4cbf52                   jmp irq_trap
                            endif
1a3d : 88                       dey             ;should not be executed
1a3e :                  brk_ret0                ;address of break return
1a3e : 08                       php             ;either SP or Y count will fail, if we do not hit
1a3f : 88                       dey
1a40 : 88                       dey
1a41 : 88                       dey
1a42 : c9e8                     cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
1a44 : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
1a46 : 208553          >        jsr report_error
                       >
1a49 :                 >skip0380
                        
1a49 : e053                     cpx #'R'+1
                                trap_ne
1a4b : f003            >        beq skip0382
                       >        trap            ;failed not equal (non zero)
1a4d : 208553          >        jsr report_error
                       >
1a50 :                 >skip0382
                        
1a50 : c045                     cpy #'K'-6
                                trap_ne
1a52 : f003            >        beq skip0384
                       >        trap            ;failed not equal (non zero)
1a54 : 208553          >        jsr report_error
                       >
1a57 :                 >skip0384
                        
1a57 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
1a58 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1a5a : f003            >        beq skip0387
                       >        trap            ;failed not equal (non zero)
1a5c : 208553          >        jsr report_error
                       >
1a5f :                 >skip0387
                        
1a5f : ba                       tsx             ;sp?
1a60 : e0ff                     cpx #$ff
                                trap_ne
1a62 : f003            >        beq skip0389
                       >        trap            ;failed not equal (non zero)
1a64 : 208553          >        jsr report_error
                       >
1a67 :                 >skip0389
                        
                            if ROM_vectors = 1
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                            else
1a67 : a91a                     lda #hi brk_ret1 ;emulated break
1a69 : 48                       pha
1a6a : a97c                     lda #lo brk_ret1
1a6c : 48                       pha
                                load_flag $ff
1a6d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1a6f : 48                       pha             ;set break & unused on stack
1a70 : 48                       pha             ;actual flags
1a71 : a9bd                     lda #$ff-'B'
1a73 : a2ad                     ldx #$ff-'R'
1a75 : a0b4                     ldy #$ff-'K'
1a77 : 28                       plp             ;N=1, V=1, Z=1, C=1
1a78 : 4cbf52                   jmp irq_trap
                            endif
1a7b : 88                       dey             ;should not be executed
1a7c :                  brk_ret1                ;address of break return
1a7c : 08                       php             ;either SP or Y count will fail, if we do not hit
1a7d : 88                       dey
1a7e : 88                       dey
1a7f : 88                       dey
1a80 : c917                     cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
1a82 : f003            >        beq skip0392
                       >        trap            ;failed not equal (non zero)
1a84 : 208553          >        jsr report_error
                       >
1a87 :                 >skip0392
                        
1a87 : e0ae                     cpx #$ff-'R'+1
                                trap_ne
1a89 : f003            >        beq skip0394
                       >        trap            ;failed not equal (non zero)
1a8b : 208553          >        jsr report_error
                       >
1a8e :                 >skip0394
                        
1a8e : c0ae                     cpy #$ff-'K'-6
                                trap_ne
1a90 : f003            >        beq skip0396
                       >        trap            ;failed not equal (non zero)
1a92 : 208553          >        jsr report_error
                       >
1a95 :                 >skip0396
                        
1a95 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
1a96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1a98 : f003            >        beq skip0399
                       >        trap            ;failed not equal (non zero)
1a9a : 208553          >        jsr report_error
                       >
1a9d :                 >skip0399
                        
1a9d : ba                       tsx             ;sp?
1a9e : e0ff                     cpx #$ff
                                trap_ne
1aa0 : f003            >        beq skip0401
                       >        trap            ;failed not equal (non zero)
1aa2 : 208553          >        jsr report_error
                       >
1aa5 :                 >skip0401
                        
                                next_test
1aa5 : ad0011          >            lda test_case   ;previous test
1aa8 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1aaa : f003            >        beq skip0404
                       >        trap            ;failed not equal (non zero)
1aac : 208553          >        jsr report_error
                       >
1aaf :                 >skip0404
                       >
000c =                 >test_num = test_num + 1
1aaf : a90c            >            lda #test_num   ;*** next tests' number
1ab1 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
1ab4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ab6 : 48              >            pha         ;use stack to load status
1ab7 : 28              >            plp
                        
1ab8 : 18                       clc
                                tst_stat $ff-carry
1ab9 : 08              >            php         ;save status
1aba : 68              >            pla         ;use stack to retrieve status
1abb : 48              >            pha
                       >            cmp_flag $ff-carry
1abc : c9fe            >            cmp #($ff-carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1abe : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
1ac0 : 208553          >        jsr report_error
                       >
1ac3 :                 >skip0410
                       >
1ac3 : 28              >            plp         ;restore status
                        
1ac4 : 38                       sec
                                tst_stat $ff
1ac5 : 08              >            php         ;save status
1ac6 : 68              >            pla         ;use stack to retrieve status
1ac7 : 48              >            pha
                       >            cmp_flag $ff
1ac8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aca : f003            >        beq skip0414
                       >        trap            ;failed not equal (non zero)
1acc : 208553          >        jsr report_error
                       >
1acf :                 >skip0414
                       >
1acf : 28              >            plp         ;restore status
                        
                            if I_flag = 3
1ad0 : 58                       cli
                                tst_stat $ff-intdis
1ad1 : 08              >            php         ;save status
1ad2 : 68              >            pla         ;use stack to retrieve status
1ad3 : 48              >            pha
                       >            cmp_flag $ff-intdis
1ad4 : c9fb            >            cmp #($ff-intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ad6 : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
1ad8 : 208553          >        jsr report_error
                       >
1adb :                 >skip0418
                       >
1adb : 28              >            plp         ;restore status
                        
1adc : 78                       sei
                                tst_stat $ff
1add : 08              >            php         ;save status
1ade : 68              >            pla         ;use stack to retrieve status
1adf : 48              >            pha
                       >            cmp_flag $ff
1ae0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ae2 : f003            >        beq skip0422
                       >        trap            ;failed not equal (non zero)
1ae4 : 208553          >        jsr report_error
                       >
1ae7 :                 >skip0422
                       >
1ae7 : 28              >            plp         ;restore status
                        
                            endif
1ae8 : d8                       cld
                                tst_stat $ff-decmode
1ae9 : 08              >            php         ;save status
1aea : 68              >            pla         ;use stack to retrieve status
1aeb : 48              >            pha
                       >            cmp_flag $ff-decmode
1aec : c9f7            >            cmp #($ff-decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aee : f003            >        beq skip0426
                       >        trap            ;failed not equal (non zero)
1af0 : 208553          >        jsr report_error
                       >
1af3 :                 >skip0426
                       >
1af3 : 28              >            plp         ;restore status
                        
1af4 : f8                       sed
                                tst_stat $ff
1af5 : 08              >            php         ;save status
1af6 : 68              >            pla         ;use stack to retrieve status
1af7 : 48              >            pha
                       >            cmp_flag $ff
1af8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1afa : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
1afc : 208553          >        jsr report_error
                       >
1aff :                 >skip0430
                       >
1aff : 28              >            plp         ;restore status
                        
1b00 : b8                       clv
                                tst_stat $ff-overfl
1b01 : 08              >            php         ;save status
1b02 : 68              >            pla         ;use stack to retrieve status
1b03 : 48              >            pha
                       >            cmp_flag $ff-overfl
1b04 : c9bf            >            cmp #($ff-overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b06 : f003            >        beq skip0434
                       >        trap            ;failed not equal (non zero)
1b08 : 208553          >        jsr report_error
                       >
1b0b :                 >skip0434
                       >
1b0b : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1b0c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b0e : 48              >            pha         ;use stack to load status
1b0f : 28              >            plp
                        
                                tst_stat 0
1b10 : 08              >            php         ;save status
1b11 : 68              >            pla         ;use stack to retrieve status
1b12 : 48              >            pha
                       >            cmp_flag 0
1b13 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b15 : f003            >        beq skip0440
                       >        trap            ;failed not equal (non zero)
1b17 : 208553          >        jsr report_error
                       >
1b1a :                 >skip0440
                       >
1b1a : 28              >            plp         ;restore status
                        
1b1b : 38                       sec
                                tst_stat carry
1b1c : 08              >            php         ;save status
1b1d : 68              >            pla         ;use stack to retrieve status
1b1e : 48              >            pha
                       >            cmp_flag carry
1b1f : c931            >            cmp #(carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b21 : f003            >        beq skip0444
                       >        trap            ;failed not equal (non zero)
1b23 : 208553          >        jsr report_error
                       >
1b26 :                 >skip0444
                       >
1b26 : 28              >            plp         ;restore status
                        
1b27 : 18                       clc
                                tst_stat 0
1b28 : 08              >            php         ;save status
1b29 : 68              >            pla         ;use stack to retrieve status
1b2a : 48              >            pha
                       >            cmp_flag 0
1b2b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b2d : f003            >        beq skip0448
                       >        trap            ;failed not equal (non zero)
1b2f : 208553          >        jsr report_error
                       >
1b32 :                 >skip0448
                       >
1b32 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
1b33 : 78                       sei
                                tst_stat intdis
1b34 : 08              >            php         ;save status
1b35 : 68              >            pla         ;use stack to retrieve status
1b36 : 48              >            pha
                       >            cmp_flag intdis
1b37 : c934            >            cmp #(intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b39 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
1b3b : 208553          >        jsr report_error
                       >
1b3e :                 >skip0452
                       >
1b3e : 28              >            plp         ;restore status
                        
1b3f : 58                       cli
                                tst_stat 0
1b40 : 08              >            php         ;save status
1b41 : 68              >            pla         ;use stack to retrieve status
1b42 : 48              >            pha
                       >            cmp_flag 0
1b43 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b45 : f003            >        beq skip0456
                       >        trap            ;failed not equal (non zero)
1b47 : 208553          >        jsr report_error
                       >
1b4a :                 >skip0456
                       >
1b4a : 28              >            plp         ;restore status
                        
                            endif
1b4b : f8                       sed
                                tst_stat decmode
1b4c : 08              >            php         ;save status
1b4d : 68              >            pla         ;use stack to retrieve status
1b4e : 48              >            pha
                       >            cmp_flag decmode
1b4f : c938            >            cmp #(decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b51 : f003            >        beq skip0460
                       >        trap            ;failed not equal (non zero)
1b53 : 208553          >        jsr report_error
                       >
1b56 :                 >skip0460
                       >
1b56 : 28              >            plp         ;restore status
                        
1b57 : d8                       cld
                                tst_stat 0
1b58 : 08              >            php         ;save status
1b59 : 68              >            pla         ;use stack to retrieve status
1b5a : 48              >            pha
                       >            cmp_flag 0
1b5b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b5d : f003            >        beq skip0464
                       >        trap            ;failed not equal (non zero)
1b5f : 208553          >        jsr report_error
                       >
1b62 :                 >skip0464
                       >
1b62 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
1b63 : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
1b65 : 48              >            pha         ;use stack to load status
1b66 : 28              >            plp
                        
                                tst_stat overfl
1b67 : 08              >            php         ;save status
1b68 : 68              >            pla         ;use stack to retrieve status
1b69 : 48              >            pha
                       >            cmp_flag overfl
1b6a : c970            >            cmp #(overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b6c : f003            >        beq skip0470
                       >        trap            ;failed not equal (non zero)
1b6e : 208553          >        jsr report_error
                       >
1b71 :                 >skip0470
                       >
1b71 : 28              >            plp         ;restore status
                        
1b72 : b8                       clv
                                tst_stat 0
1b73 : 08              >            php         ;save status
1b74 : 68              >            pla         ;use stack to retrieve status
1b75 : 48              >            pha
                       >            cmp_flag 0
1b76 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b78 : f003            >        beq skip0474
                       >        trap            ;failed not equal (non zero)
1b7a : 208553          >        jsr report_error
                       >
1b7d :                 >skip0474
                       >
1b7d : 28              >            plp         ;restore status
                        
                                next_test
1b7e : ad0011          >            lda test_case   ;previous test
1b81 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1b83 : f003            >        beq skip0477
                       >        trap            ;failed not equal (non zero)
1b85 : 208553          >        jsr report_error
                       >
1b88 :                 >skip0477
                       >
000d =                 >test_num = test_num + 1
1b88 : a90d            >            lda #test_num   ;*** next tests' number
1b8a : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ; testing index register increment/decrement and transfer
                        ; INX INY DEX DEY TAX TXA TAY TYA
1b8d : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
1b8f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b91 : 48              >            pha         ;use stack to load status
1b92 : 28              >            plp
                        
1b93 : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
1b94 : 08              >            php         ;save flags
1b95 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1b97 : f003            >        beq skip0482
                       >        trap            ;failed not equal (non zero)
1b99 : 208553          >        jsr report_error
                       >
1b9c :                 >skip0482
                       >
1b9c : 68              >            pla         ;load status
1b9d : 48              >            pha
                       >            cmp_flag $ff-zero
1b9e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ba0 : f003            >        beq skip0485
                       >        trap            ;failed not equal (non zero)
1ba2 : 208553          >        jsr report_error
                       >
1ba5 :                 >skip0485
                       >
1ba5 : 28              >            plp         ;restore status
                        
1ba6 : e8                       inx             ;00
                                tst_x 0,$ff-minus
1ba7 : 08              >            php         ;save flags
1ba8 : e000            >            cpx #0     ;test result
                       >            trap_ne
1baa : f003            >        beq skip0488
                       >        trap            ;failed not equal (non zero)
1bac : 208553          >        jsr report_error
                       >
1baf :                 >skip0488
                       >
1baf : 68              >            pla         ;load status
1bb0 : 48              >            pha
                       >            cmp_flag $ff-minus
1bb1 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bb3 : f003            >        beq skip0491
                       >        trap            ;failed not equal (non zero)
1bb5 : 208553          >        jsr report_error
                       >
1bb8 :                 >skip0491
                       >
1bb8 : 28              >            plp         ;restore status
                        
1bb9 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
1bba : 08              >            php         ;save flags
1bbb : e001            >            cpx #1     ;test result
                       >            trap_ne
1bbd : f003            >        beq skip0494
                       >        trap            ;failed not equal (non zero)
1bbf : 208553          >        jsr report_error
                       >
1bc2 :                 >skip0494
                       >
1bc2 : 68              >            pla         ;load status
1bc3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1bc4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bc6 : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
1bc8 : 208553          >        jsr report_error
                       >
1bcb :                 >skip0497
                       >
1bcb : 28              >            plp         ;restore status
                        
1bcc : ca                       dex             ;00
                                tst_x 0,$ff-minus
1bcd : 08              >            php         ;save flags
1bce : e000            >            cpx #0     ;test result
                       >            trap_ne
1bd0 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
1bd2 : 208553          >        jsr report_error
                       >
1bd5 :                 >skip0500
                       >
1bd5 : 68              >            pla         ;load status
1bd6 : 48              >            pha
                       >            cmp_flag $ff-minus
1bd7 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bd9 : f003            >        beq skip0503
                       >        trap            ;failed not equal (non zero)
1bdb : 208553          >        jsr report_error
                       >
1bde :                 >skip0503
                       >
1bde : 28              >            plp         ;restore status
                        
1bdf : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
1be0 : 08              >            php         ;save flags
1be1 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1be3 : f003            >        beq skip0506
                       >        trap            ;failed not equal (non zero)
1be5 : 208553          >        jsr report_error
                       >
1be8 :                 >skip0506
                       >
1be8 : 68              >            pla         ;load status
1be9 : 48              >            pha
                       >            cmp_flag $ff-zero
1bea : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bec : f003            >        beq skip0509
                       >        trap            ;failed not equal (non zero)
1bee : 208553          >        jsr report_error
                       >
1bf1 :                 >skip0509
                       >
1bf1 : 28              >            plp         ;restore status
                        
1bf2 : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
1bf3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bf5 : 48              >            pha         ;use stack to load status
1bf6 : 28              >            plp
                        
1bf7 : e8                       inx             ;ff
                                tst_x $ff,minus
1bf8 : 08              >            php         ;save flags
1bf9 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1bfb : f003            >        beq skip0514
                       >        trap            ;failed not equal (non zero)
1bfd : 208553          >        jsr report_error
                       >
1c00 :                 >skip0514
                       >
1c00 : 68              >            pla         ;load status
1c01 : 48              >            pha
                       >            cmp_flag minus
1c02 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c04 : f003            >        beq skip0517
                       >        trap            ;failed not equal (non zero)
1c06 : 208553          >        jsr report_error
                       >
1c09 :                 >skip0517
                       >
1c09 : 28              >            plp         ;restore status
                        
1c0a : e8                       inx             ;00
                                tst_x 0,zero
1c0b : 08              >            php         ;save flags
1c0c : e000            >            cpx #0     ;test result
                       >            trap_ne
1c0e : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
1c10 : 208553          >        jsr report_error
                       >
1c13 :                 >skip0520
                       >
1c13 : 68              >            pla         ;load status
1c14 : 48              >            pha
                       >            cmp_flag zero
1c15 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c17 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
1c19 : 208553          >        jsr report_error
                       >
1c1c :                 >skip0523
                       >
1c1c : 28              >            plp         ;restore status
                        
1c1d : e8                       inx             ;01
                                tst_x 1,0
1c1e : 08              >            php         ;save flags
1c1f : e001            >            cpx #1     ;test result
                       >            trap_ne
1c21 : f003            >        beq skip0526
                       >        trap            ;failed not equal (non zero)
1c23 : 208553          >        jsr report_error
                       >
1c26 :                 >skip0526
                       >
1c26 : 68              >            pla         ;load status
1c27 : 48              >            pha
                       >            cmp_flag 0
1c28 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c2a : f003            >        beq skip0529
                       >        trap            ;failed not equal (non zero)
1c2c : 208553          >        jsr report_error
                       >
1c2f :                 >skip0529
                       >
1c2f : 28              >            plp         ;restore status
                        
1c30 : ca                       dex             ;00
                                tst_x 0,zero
1c31 : 08              >            php         ;save flags
1c32 : e000            >            cpx #0     ;test result
                       >            trap_ne
1c34 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
1c36 : 208553          >        jsr report_error
                       >
1c39 :                 >skip0532
                       >
1c39 : 68              >            pla         ;load status
1c3a : 48              >            pha
                       >            cmp_flag zero
1c3b : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c3d : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
1c3f : 208553          >        jsr report_error
                       >
1c42 :                 >skip0535
                       >
1c42 : 28              >            plp         ;restore status
                        
1c43 : ca                       dex             ;ff
                                tst_x $ff,minus
1c44 : 08              >            php         ;save flags
1c45 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1c47 : f003            >        beq skip0538
                       >        trap            ;failed not equal (non zero)
1c49 : 208553          >        jsr report_error
                       >
1c4c :                 >skip0538
                       >
1c4c : 68              >            pla         ;load status
1c4d : 48              >            pha
                       >            cmp_flag minus
1c4e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c50 : f003            >        beq skip0541
                       >        trap            ;failed not equal (non zero)
1c52 : 208553          >        jsr report_error
                       >
1c55 :                 >skip0541
                       >
1c55 : 28              >            plp         ;restore status
                        
                        
1c56 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
1c58 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c5a : 48              >            pha         ;use stack to load status
1c5b : 28              >            plp
                        
1c5c : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
1c5d : 08              >            php         ;save flags
1c5e : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1c60 : f003            >        beq skip0546
                       >        trap            ;failed not equal (non zero)
1c62 : 208553          >        jsr report_error
                       >
1c65 :                 >skip0546
                       >
1c65 : 68              >            pla         ;load status
1c66 : 48              >            pha
                       >            cmp_flag $ff-zero
1c67 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c69 : f003            >        beq skip0549
                       >        trap            ;failed not equal (non zero)
1c6b : 208553          >        jsr report_error
                       >
1c6e :                 >skip0549
                       >
1c6e : 28              >            plp         ;restore status
                        
1c6f : c8                       iny             ;00
                                tst_y 0,$ff-minus
1c70 : 08              >            php         ;save flags
1c71 : c000            >            cpy #0     ;test result
                       >            trap_ne
1c73 : f003            >        beq skip0552
                       >        trap            ;failed not equal (non zero)
1c75 : 208553          >        jsr report_error
                       >
1c78 :                 >skip0552
                       >
1c78 : 68              >            pla         ;load status
1c79 : 48              >            pha
                       >            cmp_flag $ff-minus
1c7a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c7c : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
1c7e : 208553          >        jsr report_error
                       >
1c81 :                 >skip0555
                       >
1c81 : 28              >            plp         ;restore status
                        
1c82 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
1c83 : 08              >            php         ;save flags
1c84 : c001            >            cpy #1     ;test result
                       >            trap_ne
1c86 : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
1c88 : 208553          >        jsr report_error
                       >
1c8b :                 >skip0558
                       >
1c8b : 68              >            pla         ;load status
1c8c : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1c8d : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c8f : f003            >        beq skip0561
                       >        trap            ;failed not equal (non zero)
1c91 : 208553          >        jsr report_error
                       >
1c94 :                 >skip0561
                       >
1c94 : 28              >            plp         ;restore status
                        
1c95 : 88                       dey             ;00
                                tst_y 0,$ff-minus
1c96 : 08              >            php         ;save flags
1c97 : c000            >            cpy #0     ;test result
                       >            trap_ne
1c99 : f003            >        beq skip0564
                       >        trap            ;failed not equal (non zero)
1c9b : 208553          >        jsr report_error
                       >
1c9e :                 >skip0564
                       >
1c9e : 68              >            pla         ;load status
1c9f : 48              >            pha
                       >            cmp_flag $ff-minus
1ca0 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ca2 : f003            >        beq skip0567
                       >        trap            ;failed not equal (non zero)
1ca4 : 208553          >        jsr report_error
                       >
1ca7 :                 >skip0567
                       >
1ca7 : 28              >            plp         ;restore status
                        
1ca8 : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
1ca9 : 08              >            php         ;save flags
1caa : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1cac : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
1cae : 208553          >        jsr report_error
                       >
1cb1 :                 >skip0570
                       >
1cb1 : 68              >            pla         ;load status
1cb2 : 48              >            pha
                       >            cmp_flag $ff-zero
1cb3 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cb5 : f003            >        beq skip0573
                       >        trap            ;failed not equal (non zero)
1cb7 : 208553          >        jsr report_error
                       >
1cba :                 >skip0573
                       >
1cba : 28              >            plp         ;restore status
                        
1cbb : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
1cbc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cbe : 48              >            pha         ;use stack to load status
1cbf : 28              >            plp
                        
1cc0 : c8                       iny             ;ff
                                tst_y $ff,0+minus
1cc1 : 08              >            php         ;save flags
1cc2 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1cc4 : f003            >        beq skip0578
                       >        trap            ;failed not equal (non zero)
1cc6 : 208553          >        jsr report_error
                       >
1cc9 :                 >skip0578
                       >
1cc9 : 68              >            pla         ;load status
1cca : 48              >            pha
                       >            cmp_flag 0+minus
1ccb : c9b0            >            cmp #(0+minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ccd : f003            >        beq skip0581
                       >        trap            ;failed not equal (non zero)
1ccf : 208553          >        jsr report_error
                       >
1cd2 :                 >skip0581
                       >
1cd2 : 28              >            plp         ;restore status
                        
1cd3 : c8                       iny             ;00
                                tst_y 0,zero
1cd4 : 08              >            php         ;save flags
1cd5 : c000            >            cpy #0     ;test result
                       >            trap_ne
1cd7 : f003            >        beq skip0584
                       >        trap            ;failed not equal (non zero)
1cd9 : 208553          >        jsr report_error
                       >
1cdc :                 >skip0584
                       >
1cdc : 68              >            pla         ;load status
1cdd : 48              >            pha
                       >            cmp_flag zero
1cde : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ce0 : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
1ce2 : 208553          >        jsr report_error
                       >
1ce5 :                 >skip0587
                       >
1ce5 : 28              >            plp         ;restore status
                        
1ce6 : c8                       iny             ;01
                                tst_y 1,0
1ce7 : 08              >            php         ;save flags
1ce8 : c001            >            cpy #1     ;test result
                       >            trap_ne
1cea : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
1cec : 208553          >        jsr report_error
                       >
1cef :                 >skip0590
                       >
1cef : 68              >            pla         ;load status
1cf0 : 48              >            pha
                       >            cmp_flag 0
1cf1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cf3 : f003            >        beq skip0593
                       >        trap            ;failed not equal (non zero)
1cf5 : 208553          >        jsr report_error
                       >
1cf8 :                 >skip0593
                       >
1cf8 : 28              >            plp         ;restore status
                        
1cf9 : 88                       dey             ;00
                                tst_y 0,zero
1cfa : 08              >            php         ;save flags
1cfb : c000            >            cpy #0     ;test result
                       >            trap_ne
1cfd : f003            >        beq skip0596
                       >        trap            ;failed not equal (non zero)
1cff : 208553          >        jsr report_error
                       >
1d02 :                 >skip0596
                       >
1d02 : 68              >            pla         ;load status
1d03 : 48              >            pha
                       >            cmp_flag zero
1d04 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d06 : f003            >        beq skip0599
                       >        trap            ;failed not equal (non zero)
1d08 : 208553          >        jsr report_error
                       >
1d0b :                 >skip0599
                       >
1d0b : 28              >            plp         ;restore status
                        
1d0c : 88                       dey             ;ff
                                tst_y $ff,minus
1d0d : 08              >            php         ;save flags
1d0e : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1d10 : f003            >        beq skip0602
                       >        trap            ;failed not equal (non zero)
1d12 : 208553          >        jsr report_error
                       >
1d15 :                 >skip0602
                       >
1d15 : 68              >            pla         ;load status
1d16 : 48              >            pha
                       >            cmp_flag minus
1d17 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d19 : f003            >        beq skip0605
                       >        trap            ;failed not equal (non zero)
1d1b : 208553          >        jsr report_error
                       >
1d1e :                 >skip0605
                       >
1d1e : 28              >            plp         ;restore status
                        
                        
1d1f : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
1d21 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d23 : 48              >            pha         ;use stack to load status
1d24 : 28              >            plp
                        
1d25 : 8a                       txa
                                tst_a $ff,$ff-zero
1d26 : 08              >            php         ;save flags
1d27 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1d29 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
1d2b : 208553          >        jsr report_error
                       >
1d2e :                 >skip0610
                       >
1d2e : 68              >            pla         ;load status
1d2f : 48              >            pha
                       >            cmp_flag $ff-zero
1d30 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d32 : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
1d34 : 208553          >        jsr report_error
                       >
1d37 :                 >skip0613
                       >
1d37 : 28              >            plp         ;restore status
                        
1d38 : 08                       php
1d39 : e8                       inx             ;00
1d3a : 28                       plp
1d3b : 8a                       txa
                                tst_a 0,$ff-minus
1d3c : 08              >            php         ;save flags
1d3d : c900            >            cmp #0     ;test result
                       >            trap_ne
1d3f : f003            >        beq skip0616
                       >        trap            ;failed not equal (non zero)
1d41 : 208553          >        jsr report_error
                       >
1d44 :                 >skip0616
                       >
1d44 : 68              >            pla         ;load status
1d45 : 48              >            pha
                       >            cmp_flag $ff-minus
1d46 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d48 : f003            >        beq skip0619
                       >        trap            ;failed not equal (non zero)
1d4a : 208553          >        jsr report_error
                       >
1d4d :                 >skip0619
                       >
1d4d : 28              >            plp         ;restore status
                        
1d4e : 08                       php
1d4f : e8                       inx             ;01
1d50 : 28                       plp
1d51 : 8a                       txa
                                tst_a 1,$ff-minus-zero
1d52 : 08              >            php         ;save flags
1d53 : c901            >            cmp #1     ;test result
                       >            trap_ne
1d55 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
1d57 : 208553          >        jsr report_error
                       >
1d5a :                 >skip0622
                       >
1d5a : 68              >            pla         ;load status
1d5b : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1d5c : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d5e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
1d60 : 208553          >        jsr report_error
                       >
1d63 :                 >skip0625
                       >
1d63 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1d64 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d66 : 48              >            pha         ;use stack to load status
1d67 : 28              >            plp
                        
1d68 : 8a                       txa
                                tst_a 1,0
1d69 : 08              >            php         ;save flags
1d6a : c901            >            cmp #1     ;test result
                       >            trap_ne
1d6c : f003            >        beq skip0630
                       >        trap            ;failed not equal (non zero)
1d6e : 208553          >        jsr report_error
                       >
1d71 :                 >skip0630
                       >
1d71 : 68              >            pla         ;load status
1d72 : 48              >            pha
                       >            cmp_flag 0
1d73 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d75 : f003            >        beq skip0633
                       >        trap            ;failed not equal (non zero)
1d77 : 208553          >        jsr report_error
                       >
1d7a :                 >skip0633
                       >
1d7a : 28              >            plp         ;restore status
                        
1d7b : 08                       php
1d7c : ca                       dex             ;00
1d7d : 28                       plp
1d7e : 8a                       txa
                                tst_a 0,zero
1d7f : 08              >            php         ;save flags
1d80 : c900            >            cmp #0     ;test result
                       >            trap_ne
1d82 : f003            >        beq skip0636
                       >        trap            ;failed not equal (non zero)
1d84 : 208553          >        jsr report_error
                       >
1d87 :                 >skip0636
                       >
1d87 : 68              >            pla         ;load status
1d88 : 48              >            pha
                       >            cmp_flag zero
1d89 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d8b : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
1d8d : 208553          >        jsr report_error
                       >
1d90 :                 >skip0639
                       >
1d90 : 28              >            plp         ;restore status
                        
1d91 : 08                       php
1d92 : ca                       dex             ;ff
1d93 : 28                       plp
1d94 : 8a                       txa
                                tst_a $ff,minus
1d95 : 08              >            php         ;save flags
1d96 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1d98 : f003            >        beq skip0642
                       >        trap            ;failed not equal (non zero)
1d9a : 208553          >        jsr report_error
                       >
1d9d :                 >skip0642
                       >
1d9d : 68              >            pla         ;load status
1d9e : 48              >            pha
                       >            cmp_flag minus
1d9f : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1da1 : f003            >        beq skip0645
                       >        trap            ;failed not equal (non zero)
1da3 : 208553          >        jsr report_error
                       >
1da6 :                 >skip0645
                       >
1da6 : 28              >            plp         ;restore status
                        
                        
1da7 : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
1da9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1dab : 48              >            pha         ;use stack to load status
1dac : 28              >            plp
                        
1dad : 98                       tya
                                tst_a $ff,$ff-zero
1dae : 08              >            php         ;save flags
1daf : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1db1 : f003            >        beq skip0650
                       >        trap            ;failed not equal (non zero)
1db3 : 208553          >        jsr report_error
                       >
1db6 :                 >skip0650
                       >
1db6 : 68              >            pla         ;load status
1db7 : 48              >            pha
                       >            cmp_flag $ff-zero
1db8 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dba : f003            >        beq skip0653
                       >        trap            ;failed not equal (non zero)
1dbc : 208553          >        jsr report_error
                       >
1dbf :                 >skip0653
                       >
1dbf : 28              >            plp         ;restore status
                        
1dc0 : 08                       php
1dc1 : c8                       iny             ;00
1dc2 : 28                       plp
1dc3 : 98                       tya
                                tst_a 0,$ff-minus
1dc4 : 08              >            php         ;save flags
1dc5 : c900            >            cmp #0     ;test result
                       >            trap_ne
1dc7 : f003            >        beq skip0656
                       >        trap            ;failed not equal (non zero)
1dc9 : 208553          >        jsr report_error
                       >
1dcc :                 >skip0656
                       >
1dcc : 68              >            pla         ;load status
1dcd : 48              >            pha
                       >            cmp_flag $ff-minus
1dce : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dd0 : f003            >        beq skip0659
                       >        trap            ;failed not equal (non zero)
1dd2 : 208553          >        jsr report_error
                       >
1dd5 :                 >skip0659
                       >
1dd5 : 28              >            plp         ;restore status
                        
1dd6 : 08                       php
1dd7 : c8                       iny             ;01
1dd8 : 28                       plp
1dd9 : 98                       tya
                                tst_a 1,$ff-minus-zero
1dda : 08              >            php         ;save flags
1ddb : c901            >            cmp #1     ;test result
                       >            trap_ne
1ddd : f003            >        beq skip0662
                       >        trap            ;failed not equal (non zero)
1ddf : 208553          >        jsr report_error
                       >
1de2 :                 >skip0662
                       >
1de2 : 68              >            pla         ;load status
1de3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1de4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1de6 : f003            >        beq skip0665
                       >        trap            ;failed not equal (non zero)
1de8 : 208553          >        jsr report_error
                       >
1deb :                 >skip0665
                       >
1deb : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1dec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1dee : 48              >            pha         ;use stack to load status
1def : 28              >            plp
                        
1df0 : 98                       tya
                                tst_a 1,0
1df1 : 08              >            php         ;save flags
1df2 : c901            >            cmp #1     ;test result
                       >            trap_ne
1df4 : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
1df6 : 208553          >        jsr report_error
                       >
1df9 :                 >skip0670
                       >
1df9 : 68              >            pla         ;load status
1dfa : 48              >            pha
                       >            cmp_flag 0
1dfb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dfd : f003            >        beq skip0673
                       >        trap            ;failed not equal (non zero)
1dff : 208553          >        jsr report_error
                       >
1e02 :                 >skip0673
                       >
1e02 : 28              >            plp         ;restore status
                        
1e03 : 08                       php
1e04 : 88                       dey             ;00
1e05 : 28                       plp
1e06 : 98                       tya
                                tst_a 0,zero
1e07 : 08              >            php         ;save flags
1e08 : c900            >            cmp #0     ;test result
                       >            trap_ne
1e0a : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
1e0c : 208553          >        jsr report_error
                       >
1e0f :                 >skip0676
                       >
1e0f : 68              >            pla         ;load status
1e10 : 48              >            pha
                       >            cmp_flag zero
1e11 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e13 : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
1e15 : 208553          >        jsr report_error
                       >
1e18 :                 >skip0679
                       >
1e18 : 28              >            plp         ;restore status
                        
1e19 : 08                       php
1e1a : 88                       dey             ;ff
1e1b : 28                       plp
1e1c : 98                       tya
                                tst_a $ff,minus
1e1d : 08              >            php         ;save flags
1e1e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1e20 : f003            >        beq skip0682
                       >        trap            ;failed not equal (non zero)
1e22 : 208553          >        jsr report_error
                       >
1e25 :                 >skip0682
                       >
1e25 : 68              >            pla         ;load status
1e26 : 48              >            pha
                       >            cmp_flag minus
1e27 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e29 : f003            >        beq skip0685
                       >        trap            ;failed not equal (non zero)
1e2b : 208553          >        jsr report_error
                       >
1e2e :                 >skip0685
                       >
1e2e : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
1e2f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1e31 : 48                       pha
1e32 : a2ff                     ldx #$ff        ;ff
1e34 : 8a                       txa
1e35 : 28                       plp
1e36 : a8                       tay
                                tst_y $ff,$ff-zero
1e37 : 08              >            php         ;save flags
1e38 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1e3a : f003            >        beq skip0689
                       >        trap            ;failed not equal (non zero)
1e3c : 208553          >        jsr report_error
                       >
1e3f :                 >skip0689
                       >
1e3f : 68              >            pla         ;load status
1e40 : 48              >            pha
                       >            cmp_flag $ff-zero
1e41 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e43 : f003            >        beq skip0692
                       >        trap            ;failed not equal (non zero)
1e45 : 208553          >        jsr report_error
                       >
1e48 :                 >skip0692
                       >
1e48 : 28              >            plp         ;restore status
                        
1e49 : 08                       php
1e4a : e8                       inx             ;00
1e4b : 8a                       txa
1e4c : 28                       plp
1e4d : a8                       tay
                                tst_y 0,$ff-minus
1e4e : 08              >            php         ;save flags
1e4f : c000            >            cpy #0     ;test result
                       >            trap_ne
1e51 : f003            >        beq skip0695
                       >        trap            ;failed not equal (non zero)
1e53 : 208553          >        jsr report_error
                       >
1e56 :                 >skip0695
                       >
1e56 : 68              >            pla         ;load status
1e57 : 48              >            pha
                       >            cmp_flag $ff-minus
1e58 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e5a : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
1e5c : 208553          >        jsr report_error
                       >
1e5f :                 >skip0698
                       >
1e5f : 28              >            plp         ;restore status
                        
1e60 : 08                       php
1e61 : e8                       inx             ;01
1e62 : 8a                       txa
1e63 : 28                       plp
1e64 : a8                       tay
                                tst_y 1,$ff-minus-zero
1e65 : 08              >            php         ;save flags
1e66 : c001            >            cpy #1     ;test result
                       >            trap_ne
1e68 : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
1e6a : 208553          >        jsr report_error
                       >
1e6d :                 >skip0701
                       >
1e6d : 68              >            pla         ;load status
1e6e : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1e6f : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e71 : f003            >        beq skip0704
                       >        trap            ;failed not equal (non zero)
1e73 : 208553          >        jsr report_error
                       >
1e76 :                 >skip0704
                       >
1e76 : 28              >            plp         ;restore status
                        
                                load_flag 0
1e77 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
1e79 : 48                       pha
1e7a : a900                     lda #0
1e7c : 8a                       txa
1e7d : 28                       plp
1e7e : a8                       tay
                                tst_y 1,0
1e7f : 08              >            php         ;save flags
1e80 : c001            >            cpy #1     ;test result
                       >            trap_ne
1e82 : f003            >        beq skip0708
                       >        trap            ;failed not equal (non zero)
1e84 : 208553          >        jsr report_error
                       >
1e87 :                 >skip0708
                       >
1e87 : 68              >            pla         ;load status
1e88 : 48              >            pha
                       >            cmp_flag 0
1e89 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e8b : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
1e8d : 208553          >        jsr report_error
                       >
1e90 :                 >skip0711
                       >
1e90 : 28              >            plp         ;restore status
                        
1e91 : 08                       php
1e92 : ca                       dex             ;00
1e93 : 8a                       txa
1e94 : 28                       plp
1e95 : a8                       tay
                                tst_y 0,zero
1e96 : 08              >            php         ;save flags
1e97 : c000            >            cpy #0     ;test result
                       >            trap_ne
1e99 : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
1e9b : 208553          >        jsr report_error
                       >
1e9e :                 >skip0714
                       >
1e9e : 68              >            pla         ;load status
1e9f : 48              >            pha
                       >            cmp_flag zero
1ea0 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ea2 : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
1ea4 : 208553          >        jsr report_error
                       >
1ea7 :                 >skip0717
                       >
1ea7 : 28              >            plp         ;restore status
                        
1ea8 : 08                       php
1ea9 : ca                       dex             ;ff
1eaa : 8a                       txa
1eab : 28                       plp
1eac : a8                       tay
                                tst_y $ff,minus
1ead : 08              >            php         ;save flags
1eae : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1eb0 : f003            >        beq skip0720
                       >        trap            ;failed not equal (non zero)
1eb2 : 208553          >        jsr report_error
                       >
1eb5 :                 >skip0720
                       >
1eb5 : 68              >            pla         ;load status
1eb6 : 48              >            pha
                       >            cmp_flag minus
1eb7 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1eb9 : f003            >        beq skip0723
                       >        trap            ;failed not equal (non zero)
1ebb : 208553          >        jsr report_error
                       >
1ebe :                 >skip0723
                       >
1ebe : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
1ebf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1ec1 : 48                       pha
1ec2 : a0ff                     ldy #$ff        ;ff
1ec4 : 98                       tya
1ec5 : 28                       plp
1ec6 : aa                       tax
                                tst_x $ff,$ff-zero
1ec7 : 08              >            php         ;save flags
1ec8 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1eca : f003            >        beq skip0727
                       >        trap            ;failed not equal (non zero)
1ecc : 208553          >        jsr report_error
                       >
1ecf :                 >skip0727
                       >
1ecf : 68              >            pla         ;load status
1ed0 : 48              >            pha
                       >            cmp_flag $ff-zero
1ed1 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ed3 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
1ed5 : 208553          >        jsr report_error
                       >
1ed8 :                 >skip0730
                       >
1ed8 : 28              >            plp         ;restore status
                        
1ed9 : 08                       php
1eda : c8                       iny             ;00
1edb : 98                       tya
1edc : 28                       plp
1edd : aa                       tax
                                tst_x 0,$ff-minus
1ede : 08              >            php         ;save flags
1edf : e000            >            cpx #0     ;test result
                       >            trap_ne
1ee1 : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
1ee3 : 208553          >        jsr report_error
                       >
1ee6 :                 >skip0733
                       >
1ee6 : 68              >            pla         ;load status
1ee7 : 48              >            pha
                       >            cmp_flag $ff-minus
1ee8 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1eea : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
1eec : 208553          >        jsr report_error
                       >
1eef :                 >skip0736
                       >
1eef : 28              >            plp         ;restore status
                        
1ef0 : 08                       php
1ef1 : c8                       iny             ;01
1ef2 : 98                       tya
1ef3 : 28                       plp
1ef4 : aa                       tax
                                tst_x 1,$ff-minus-zero
1ef5 : 08              >            php         ;save flags
1ef6 : e001            >            cpx #1     ;test result
                       >            trap_ne
1ef8 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
1efa : 208553          >        jsr report_error
                       >
1efd :                 >skip0739
                       >
1efd : 68              >            pla         ;load status
1efe : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1eff : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f01 : f003            >        beq skip0742
                       >        trap            ;failed not equal (non zero)
1f03 : 208553          >        jsr report_error
                       >
1f06 :                 >skip0742
                       >
1f06 : 28              >            plp         ;restore status
                        
                                load_flag 0
1f07 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
1f09 : 48                       pha
1f0a : a900                     lda #0          ;preset status
1f0c : 98                       tya
1f0d : 28                       plp
1f0e : aa                       tax
                                tst_x 1,0
1f0f : 08              >            php         ;save flags
1f10 : e001            >            cpx #1     ;test result
                       >            trap_ne
1f12 : f003            >        beq skip0746
                       >        trap            ;failed not equal (non zero)
1f14 : 208553          >        jsr report_error
                       >
1f17 :                 >skip0746
                       >
1f17 : 68              >            pla         ;load status
1f18 : 48              >            pha
                       >            cmp_flag 0
1f19 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f1b : f003            >        beq skip0749
                       >        trap            ;failed not equal (non zero)
1f1d : 208553          >        jsr report_error
                       >
1f20 :                 >skip0749
                       >
1f20 : 28              >            plp         ;restore status
                        
1f21 : 08                       php
1f22 : 88                       dey             ;00
1f23 : 98                       tya
1f24 : 28                       plp
1f25 : aa                       tax
                                tst_x 0,zero
1f26 : 08              >            php         ;save flags
1f27 : e000            >            cpx #0     ;test result
                       >            trap_ne
1f29 : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
1f2b : 208553          >        jsr report_error
                       >
1f2e :                 >skip0752
                       >
1f2e : 68              >            pla         ;load status
1f2f : 48              >            pha
                       >            cmp_flag zero
1f30 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f32 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
1f34 : 208553          >        jsr report_error
                       >
1f37 :                 >skip0755
                       >
1f37 : 28              >            plp         ;restore status
                        
1f38 : 08                       php
1f39 : 88                       dey             ;ff
1f3a : 98                       tya
1f3b : 28                       plp
1f3c : aa                       tax
                                tst_x $ff,minus
1f3d : 08              >            php         ;save flags
1f3e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1f40 : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
1f42 : 208553          >        jsr report_error
                       >
1f45 :                 >skip0758
                       >
1f45 : 68              >            pla         ;load status
1f46 : 48              >            pha
                       >            cmp_flag minus
1f47 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f49 : f003            >        beq skip0761
                       >        trap            ;failed not equal (non zero)
1f4b : 208553          >        jsr report_error
                       >
1f4e :                 >skip0761
                       >
1f4e : 28              >            plp         ;restore status
                        
                                next_test
1f4f : ad0011          >            lda test_case   ;previous test
1f52 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1f54 : f003            >        beq skip0764
                       >        trap            ;failed not equal (non zero)
1f56 : 208553          >        jsr report_error
                       >
1f59 :                 >skip0764
                       >
000e =                 >test_num = test_num + 1
1f59 : a90e            >            lda #test_num   ;*** next tests' number
1f5b : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;TSX sets NZ - TXS does not
                        ;  This section also tests for proper stack wrap around.
1f5e : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
1f60 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f62 : 48              >            pha         ;use stack to load status
1f63 : 28              >            plp
                        
1f64 : 9a                       txs
1f65 : 08                       php
1f66 : ad0101                   lda $101
                                cmp_flag $ff
1f69 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f6b : f003            >        beq skip0769
                       >        trap            ;failed not equal (non zero)
1f6d : 208553          >        jsr report_error
                       >
1f70 :                 >skip0769
                        
                                set_stat 0
                       >            load_flag 0
1f70 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f72 : 48              >            pha         ;use stack to load status
1f73 : 28              >            plp
                        
1f74 : 9a                       txs
1f75 : 08                       php
1f76 : ad0101                   lda $101
                                cmp_flag 0
1f79 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f7b : f003            >        beq skip0774
                       >        trap            ;failed not equal (non zero)
1f7d : 208553          >        jsr report_error
                       >
1f80 :                 >skip0774
                        
1f80 : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
1f81 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f83 : 48              >            pha         ;use stack to load status
1f84 : 28              >            plp
                        
1f85 : 9a                       txs
1f86 : 08                       php
1f87 : ad0001                   lda $100
                                cmp_flag $ff
1f8a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f8c : f003            >        beq skip0779
                       >        trap            ;failed not equal (non zero)
1f8e : 208553          >        jsr report_error
                       >
1f91 :                 >skip0779
                        
                                set_stat 0
                       >            load_flag 0
1f91 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f93 : 48              >            pha         ;use stack to load status
1f94 : 28              >            plp
                        
1f95 : 9a                       txs
1f96 : 08                       php
1f97 : ad0001                   lda $100
                                cmp_flag 0
1f9a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f9c : f003            >        beq skip0784
                       >        trap            ;failed not equal (non zero)
1f9e : 208553          >        jsr report_error
                       >
1fa1 :                 >skip0784
                        
1fa1 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
1fa2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fa4 : 48              >            pha         ;use stack to load status
1fa5 : 28              >            plp
                        
1fa6 : 9a                       txs
1fa7 : 08                       php
1fa8 : adff01                   lda $1ff
                                cmp_flag $ff
1fab : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1fad : f003            >        beq skip0789
                       >        trap            ;failed not equal (non zero)
1faf : 208553          >        jsr report_error
                       >
1fb2 :                 >skip0789
                        
                                set_stat 0
                       >            load_flag 0
1fb2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fb4 : 48              >            pha         ;use stack to load status
1fb5 : 28              >            plp
                        
1fb6 : 9a                       txs
1fb7 : 08                       php
1fb8 : adff01                   lda $1ff
                                cmp_flag 0
1fbb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                        
1fbd : a201                     ldx #1
1fbf : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
1fc0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fc2 : 48              >            pha         ;use stack to load status
1fc3 : 28              >            plp
                        
1fc4 : ba                       tsx             ;clears Z, N
1fc5 : 08                       php             ;sp=00
1fc6 : e001                     cpx #1
                                trap_ne
1fc8 : f003            >        beq skip0796
                       >        trap            ;failed not equal (non zero)
1fca : 208553          >        jsr report_error
                       >
1fcd :                 >skip0796
                        
1fcd : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
1fd0 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1fd2 : f003            >        beq skip0799
                       >        trap            ;failed not equal (non zero)
1fd4 : 208553          >        jsr report_error
                       >
1fd7 :                 >skip0799
                        
                                set_stat $ff
                       >            load_flag $ff
1fd7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fd9 : 48              >            pha         ;use stack to load status
1fda : 28              >            plp
                        
1fdb : ba                       tsx             ;clears N, sets Z
1fdc : 08                       php             ;sp=ff
1fdd : e000                     cpx #0
                                trap_ne
1fdf : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
1fe1 : 208553          >        jsr report_error
                       >
1fe4 :                 >skip0803
                        
1fe4 : ad0001                   lda $100
                                cmp_flag $ff-minus
1fe7 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1fe9 : f003            >        beq skip0806
                       >        trap            ;failed not equal (non zero)
1feb : 208553          >        jsr report_error
                       >
1fee :                 >skip0806
                        
                                set_stat $ff
                       >            load_flag $ff
1fee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ff0 : 48              >            pha         ;use stack to load status
1ff1 : 28              >            plp
                        
1ff2 : ba                       tsx             ;clears N, sets Z
1ff3 : 08                       php             ;sp=fe
1ff4 : e0ff                     cpx #$ff
                                trap_ne
1ff6 : f003            >        beq skip0810
                       >        trap            ;failed not equal (non zero)
1ff8 : 208553          >        jsr report_error
                       >
1ffb :                 >skip0810
                        
1ffb : adff01                   lda $1ff
                                cmp_flag $ff-zero
1ffe : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
2000 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
2002 : 208553          >        jsr report_error
                       >
2005 :                 >skip0813
                        
                        
2005 : a201                     ldx #1
2007 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
2008 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
200a : 48              >            pha         ;use stack to load status
200b : 28              >            plp
                        
200c : ba                       tsx             ;clears Z, N
200d : 08                       php             ;sp=00
200e : e001                     cpx #1
                                trap_ne
2010 : f003            >        beq skip0817
                       >        trap            ;failed not equal (non zero)
2012 : 208553          >        jsr report_error
                       >
2015 :                 >skip0817
                        
2015 : ad0101                   lda $101
                                cmp_flag 0
2018 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
201a : f003            >        beq skip0820
                       >        trap            ;failed not equal (non zero)
201c : 208553          >        jsr report_error
                       >
201f :                 >skip0820
                        
                                set_stat 0
                       >            load_flag 0
201f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2021 : 48              >            pha         ;use stack to load status
2022 : 28              >            plp
                        
2023 : ba                       tsx             ;clears N, sets Z
2024 : 08                       php             ;sp=ff
2025 : e000                     cpx #0
                                trap_ne
2027 : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
2029 : 208553          >        jsr report_error
                       >
202c :                 >skip0824
                        
202c : ad0001                   lda $100
                                cmp_flag zero
202f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
2031 : f003            >        beq skip0827
                       >        trap            ;failed not equal (non zero)
2033 : 208553          >        jsr report_error
                       >
2036 :                 >skip0827
                        
                                set_stat 0
                       >            load_flag 0
2036 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2038 : 48              >            pha         ;use stack to load status
2039 : 28              >            plp
                        
203a : ba                       tsx             ;clears N, sets Z
203b : 08                       php             ;sp=fe
203c : e0ff                     cpx #$ff
                                trap_ne
203e : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
2040 : 208553          >        jsr report_error
                       >
2043 :                 >skip0831
                        
2043 : adff01                   lda $1ff
                                cmp_flag minus
2046 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
2048 : f003            >        beq skip0834
                       >        trap            ;failed not equal (non zero)
204a : 208553          >        jsr report_error
                       >
204d :                 >skip0834
                        
204d : 68                       pla             ;sp=ff
                                next_test
204e : ad0011          >            lda test_case   ;previous test
2051 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2053 : f003            >        beq skip0837
                       >        trap            ;failed not equal (non zero)
2055 : 208553          >        jsr report_error
                       >
2058 :                 >skip0837
                       >
000f =                 >test_num = test_num + 1
2058 : a90f            >            lda #test_num   ;*** next tests' number
205a : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing index register load & store LDY LDX STY STX all addressing modes
                        ; LDX / STX - zp,y / abs,y
205d : a003                     ldy #3
205f :                  tldx
                                set_stat 0
                       >            load_flag 0
205f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2061 : 48              >            pha         ;use stack to load status
2062 : 28              >            plp
                        
2063 : b65b                     ldx zp1,y
2065 : 08                       php         ;test stores do not alter flags
2066 : 8a                       txa
2067 : 49c3                     eor #$c3
2069 : 28                       plp
206a : 990311                   sta abst,y
206d : 08                       php         ;flags after load/store sequence
206e : 49c3                     eor #$c3
2070 : d91811                   cmp abs1,y  ;test result
                                trap_ne
2073 : f003            >        beq skip0841
                       >        trap            ;failed not equal (non zero)
2075 : 208553          >        jsr report_error
                       >
2078 :                 >skip0841
                        
2078 : 68                       pla         ;load status
                                eor_flag 0
2079 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
207b : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
207e : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
2080 : 208553          >        jsr report_error
                       >
2083 :                 >skip0844
                        
2083 : 88                       dey
2084 : 10d9                     bpl tldx
                        
2086 : a003                     ldy #3
2088 :                  tldx1
                                set_stat $ff
                       >            load_flag $ff
2088 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
208a : 48              >            pha         ;use stack to load status
208b : 28              >            plp
                        
208c : b65b                     ldx zp1,y
208e : 08                       php         ;test stores do not alter flags
208f : 8a                       txa
2090 : 49c3                     eor #$c3
2092 : 28                       plp
2093 : 990311                   sta abst,y
2096 : 08                       php         ;flags after load/store sequence
2097 : 49c3                     eor #$c3
2099 : d91811                   cmp abs1,y  ;test result
                                trap_ne
209c : f003            >        beq skip0848
                       >        trap            ;failed not equal (non zero)
209e : 208553          >        jsr report_error
                       >
20a1 :                 >skip0848
                        
20a1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
20a2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
20a4 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
20a7 : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
20a9 : 208553          >        jsr report_error
                       >
20ac :                 >skip0851
                        
20ac : 88                       dey
20ad : 10d9                     bpl tldx1
                        
20af : a003                     ldy #3
20b1 :                  tldx2
                                set_stat 0
                       >            load_flag 0
20b1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20b3 : 48              >            pha         ;use stack to load status
20b4 : 28              >            plp
                        
20b5 : be1811                   ldx abs1,y
20b8 : 08                       php         ;test stores do not alter flags
20b9 : 8a                       txa
20ba : 49c3                     eor #$c3
20bc : aa                       tax
20bd : 28                       plp
20be : 9652                     stx zpt,y
20c0 : 08                       php         ;flags after load/store sequence
20c1 : 49c3                     eor #$c3
20c3 : d95b00                   cmp zp1,y   ;test result
                                trap_ne
20c6 : f003            >        beq skip0855
                       >        trap            ;failed not equal (non zero)
20c8 : 208553          >        jsr report_error
                       >
20cb :                 >skip0855
                        
20cb : 68                       pla         ;load status
                                eor_flag 0
20cc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
20ce : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
20d1 : f003            >        beq skip0858
                       >        trap            ;failed not equal (non zero)
20d3 : 208553          >        jsr report_error
                       >
20d6 :                 >skip0858
                        
20d6 : 88                       dey
20d7 : 10d8                     bpl tldx2
                        
20d9 : a003                     ldy #3
20db :                  tldx3
                                set_stat $ff
                       >            load_flag $ff
20db : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20dd : 48              >            pha         ;use stack to load status
20de : 28              >            plp
                        
20df : be1811                   ldx abs1,y
20e2 : 08                       php         ;test stores do not alter flags
20e3 : 8a                       txa
20e4 : 49c3                     eor #$c3
20e6 : aa                       tax
20e7 : 28                       plp
20e8 : 9652                     stx zpt,y
20ea : 08                       php         ;flags after load/store sequence
20eb : 49c3                     eor #$c3
20ed : d95b00                   cmp zp1,y   ;test result
                                trap_ne
20f0 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
20f2 : 208553          >        jsr report_error
                       >
20f5 :                 >skip0862
                        
20f5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
20f6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
20f8 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
20fb : f003            >        beq skip0865
                       >        trap            ;failed not equal (non zero)
20fd : 208553          >        jsr report_error
                       >
2100 :                 >skip0865
                        
2100 : 88                       dey
2101 : 10d8                     bpl tldx3
                        
2103 : a003                     ldy #3      ;testing store result
2105 : a200                     ldx #0
2107 : b95200           tstx    lda zpt,y
210a : 49c3                     eor #$c3
210c : d95b00                   cmp zp1,y
                                trap_ne     ;store to zp data
210f : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
2111 : 208553          >        jsr report_error
                       >
2114 :                 >skip0867
                        
2114 : 9652                     stx zpt,y   ;clear
2116 : b90311                   lda abst,y
2119 : 49c3                     eor #$c3
211b : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
211e : f003            >        beq skip0869
                       >        trap            ;failed not equal (non zero)
2120 : 208553          >        jsr report_error
                       >
2123 :                 >skip0869
                        
2123 : 8a                       txa
2124 : 990311                   sta abst,y  ;clear
2127 : 88                       dey
2128 : 10dd                     bpl tstx
                                next_test
212a : ad0011          >            lda test_case   ;previous test
212d : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
212f : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
2131 : 208553          >        jsr report_error
                       >
2134 :                 >skip0872
                       >
0010 =                 >test_num = test_num + 1
2134 : a910            >            lda #test_num   ;*** next tests' number
2136 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
2139 : a0fd                     ldy #3+$fa
213b : b661             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
213d : 8a                       txa
213e : 990910                   sta abst-$fa,y      ;no STX abs,y!
2141 : 88                       dey
2142 : c0fa                     cpy #$fa
2144 : b0f5                     bcs tldx4
2146 : a0fd                     ldy #3+$fa
2148 : be1e10           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
214b : 9658                     stx zpt-$fa&$ff,y
214d : 88                       dey
214e : c0fa                     cpy #$fa
2150 : b0f6                     bcs tldx5
2152 : a003                     ldy #3      ;testing wraparound result
2154 : a200                     ldx #0
2156 : b95200           tstx1   lda zpt,y
2159 : d95b00                   cmp zp1,y
                                trap_ne     ;store to zp data
215c : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
215e : 208553          >        jsr report_error
                       >
2161 :                 >skip0874
                        
2161 : 9652                     stx zpt,y   ;clear
2163 : b90311                   lda abst,y
2166 : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2169 : f003            >        beq skip0876
                       >        trap            ;failed not equal (non zero)
216b : 208553          >        jsr report_error
                       >
216e :                 >skip0876
                        
216e : 8a                       txa
216f : 990311                   sta abst,y  ;clear
2172 : 88                       dey
2173 : 10e1                     bpl tstx1
                                next_test
2175 : ad0011          >            lda test_case   ;previous test
2178 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
217a : f003            >        beq skip0879
                       >        trap            ;failed not equal (non zero)
217c : 208553          >        jsr report_error
                       >
217f :                 >skip0879
                       >
0011 =                 >test_num = test_num + 1
217f : a911            >            lda #test_num   ;*** next tests' number
2181 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDY / STY - zp,x / abs,x
2184 : a203                     ldx #3
2186 :                  tldy
                                set_stat 0
                       >            load_flag 0
2186 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2188 : 48              >            pha         ;use stack to load status
2189 : 28              >            plp
                        
218a : b45b                     ldy zp1,x
218c : 08                       php         ;test stores do not alter flags
218d : 98                       tya
218e : 49c3                     eor #$c3
2190 : 28                       plp
2191 : 9d0311                   sta abst,x
2194 : 08                       php         ;flags after load/store sequence
2195 : 49c3                     eor #$c3
2197 : dd1811                   cmp abs1,x  ;test result
                                trap_ne
219a : f003            >        beq skip0883
                       >        trap            ;failed not equal (non zero)
219c : 208553          >        jsr report_error
                       >
219f :                 >skip0883
                        
219f : 68                       pla         ;load status
                                eor_flag 0
21a0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
21a2 : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
21a5 : f003            >        beq skip0886
                       >        trap            ;failed not equal (non zero)
21a7 : 208553          >        jsr report_error
                       >
21aa :                 >skip0886
                        
21aa : ca                       dex
21ab : 10d9                     bpl tldy
                        
21ad : a203                     ldx #3
21af :                  tldy1
                                set_stat $ff
                       >            load_flag $ff
21af : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21b1 : 48              >            pha         ;use stack to load status
21b2 : 28              >            plp
                        
21b3 : b45b                     ldy zp1,x
21b5 : 08                       php         ;test stores do not alter flags
21b6 : 98                       tya
21b7 : 49c3                     eor #$c3
21b9 : 28                       plp
21ba : 9d0311                   sta abst,x
21bd : 08                       php         ;flags after load/store sequence
21be : 49c3                     eor #$c3
21c0 : dd1811                   cmp abs1,x  ;test result
                                trap_ne
21c3 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
21c5 : 208553          >        jsr report_error
                       >
21c8 :                 >skip0890
                        
21c8 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21c9 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
21cb : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
21ce : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
21d0 : 208553          >        jsr report_error
                       >
21d3 :                 >skip0893
                        
21d3 : ca                       dex
21d4 : 10d9                     bpl tldy1
                        
21d6 : a203                     ldx #3
21d8 :                  tldy2
                                set_stat 0
                       >            load_flag 0
21d8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21da : 48              >            pha         ;use stack to load status
21db : 28              >            plp
                        
21dc : bc1811                   ldy abs1,x
21df : 08                       php         ;test stores do not alter flags
21e0 : 98                       tya
21e1 : 49c3                     eor #$c3
21e3 : a8                       tay
21e4 : 28                       plp
21e5 : 9452                     sty zpt,x
21e7 : 08                       php         ;flags after load/store sequence
21e8 : 49c3                     eor #$c3
21ea : d55b                     cmp zp1,x   ;test result
                                trap_ne
21ec : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
21ee : 208553          >        jsr report_error
                       >
21f1 :                 >skip0897
                        
21f1 : 68                       pla         ;load status
                                eor_flag 0
21f2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
21f4 : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
21f7 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
21f9 : 208553          >        jsr report_error
                       >
21fc :                 >skip0900
                        
21fc : ca                       dex
21fd : 10d9                     bpl tldy2
                        
21ff : a203                     ldx #3
2201 :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
2201 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2203 : 48              >            pha         ;use stack to load status
2204 : 28              >            plp
                        
2205 : bc1811                   ldy abs1,x
2208 : 08                       php         ;test stores do not alter flags
2209 : 98                       tya
220a : 49c3                     eor #$c3
220c : a8                       tay
220d : 28                       plp
220e : 9452                     sty zpt,x
2210 : 08                       php         ;flags after load/store sequence
2211 : 49c3                     eor #$c3
2213 : d55b                     cmp zp1,x   ;test result
                                trap_ne
2215 : f003            >        beq skip0904
                       >        trap            ;failed not equal (non zero)
2217 : 208553          >        jsr report_error
                       >
221a :                 >skip0904
                        
221a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
221b : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
221d : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
2220 : f003            >        beq skip0907
                       >        trap            ;failed not equal (non zero)
2222 : 208553          >        jsr report_error
                       >
2225 :                 >skip0907
                        
2225 : ca                       dex
2226 : 10d9                     bpl tldy3
                        
2228 : a203                     ldx #3      ;testing store result
222a : a000                     ldy #0
222c : b552             tsty    lda zpt,x
222e : 49c3                     eor #$c3
2230 : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2232 : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
2234 : 208553          >        jsr report_error
                       >
2237 :                 >skip0909
                        
2237 : 9452                     sty zpt,x   ;clear
2239 : bd0311                   lda abst,x
223c : 49c3                     eor #$c3
223e : dd1811                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2241 : f003            >        beq skip0911
                       >        trap            ;failed not equal (non zero)
2243 : 208553          >        jsr report_error
                       >
2246 :                 >skip0911
                        
2246 : 8a                       txa
2247 : 9d0311                   sta abst,x  ;clear
224a : ca                       dex
224b : 10df                     bpl tsty
                                next_test
224d : ad0011          >            lda test_case   ;previous test
2250 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2252 : f003            >        beq skip0914
                       >        trap            ;failed not equal (non zero)
2254 : 208553          >        jsr report_error
                       >
2257 :                 >skip0914
                       >
0012 =                 >test_num = test_num + 1
2257 : a912            >            lda #test_num   ;*** next tests' number
2259 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
225c : a2fd                     ldx #3+$fa
225e : b461             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
2260 : 98                       tya
2261 : 9d0910                   sta abst-$fa,x      ;no STX abs,x!
2264 : ca                       dex
2265 : e0fa                     cpx #$fa
2267 : b0f5                     bcs tldy4
2269 : a2fd                     ldx #3+$fa
226b : bc1e10           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
226e : 9458                     sty zpt-$fa&$ff,x
2270 : ca                       dex
2271 : e0fa                     cpx #$fa
2273 : b0f6                     bcs tldy5
2275 : a203                     ldx #3      ;testing wraparound result
2277 : a000                     ldy #0
2279 : b552             tsty1   lda zpt,x
227b : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
227d : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
227f : 208553          >        jsr report_error
                       >
2282 :                 >skip0916
                        
2282 : 9452                     sty zpt,x   ;clear
2284 : bd0311                   lda abst,x
2287 : dd1811                   cmp abs1,x
                                trap_ne     ;store to abs,x data
228a : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
228c : 208553          >        jsr report_error
                       >
228f :                 >skip0918
                        
228f : 8a                       txa
2290 : 9d0311                   sta abst,x  ;clear
2293 : ca                       dex
2294 : 10e3                     bpl tsty1
                                next_test
2296 : ad0011          >            lda test_case   ;previous test
2299 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
229b : f003            >        beq skip0921
                       >        trap            ;failed not equal (non zero)
229d : 208553          >        jsr report_error
                       >
22a0 :                 >skip0921
                       >
0013 =                 >test_num = test_num + 1
22a0 : a913            >            lda #test_num   ;*** next tests' number
22a2 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0
                       >            load_flag 0
22a5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22a7 : 48              >            pha         ;use stack to load status
22a8 : 28              >            plp
                        
22a9 : a65b                     ldx zp1
22ab : 08                       php         ;test stores do not alter flags
22ac : 8a                       txa
22ad : 49c3                     eor #$c3
22af : aa                       tax
22b0 : 28                       plp
22b1 : 8e0311                   stx abst
22b4 : 08                       php         ;flags after load/store sequence
22b5 : 49c3                     eor #$c3
22b7 : aa                       tax
22b8 : e0c3                     cpx #$c3    ;test result
                                trap_ne
22ba : f003            >        beq skip0925
                       >        trap            ;failed not equal (non zero)
22bc : 208553          >        jsr report_error
                       >
22bf :                 >skip0925
                        
22bf : 68                       pla         ;load status
                                eor_flag 0
22c0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
22c2 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
22c5 : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
22c7 : 208553          >        jsr report_error
                       >
22ca :                 >skip0928
                        
                                set_stat 0
                       >            load_flag 0
22ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22cc : 48              >            pha         ;use stack to load status
22cd : 28              >            plp
                        
22ce : a65c                     ldx zp1+1
22d0 : 08                       php         ;test stores do not alter flags
22d1 : 8a                       txa
22d2 : 49c3                     eor #$c3
22d4 : aa                       tax
22d5 : 28                       plp
22d6 : 8e0411                   stx abst+1
22d9 : 08                       php         ;flags after load/store sequence
22da : 49c3                     eor #$c3
22dc : aa                       tax
22dd : e082                     cpx #$82    ;test result
                                trap_ne
22df : f003            >        beq skip0932
                       >        trap            ;failed not equal (non zero)
22e1 : 208553          >        jsr report_error
                       >
22e4 :                 >skip0932
                        
22e4 : 68                       pla         ;load status
                                eor_flag 0
22e5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
22e7 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
22ea : f003            >        beq skip0935
                       >        trap            ;failed not equal (non zero)
22ec : 208553          >        jsr report_error
                       >
22ef :                 >skip0935
                        
                                set_stat 0
                       >            load_flag 0
22ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22f1 : 48              >            pha         ;use stack to load status
22f2 : 28              >            plp
                        
22f3 : a65d                     ldx zp1+2
22f5 : 08                       php         ;test stores do not alter flags
22f6 : 8a                       txa
22f7 : 49c3                     eor #$c3
22f9 : aa                       tax
22fa : 28                       plp
22fb : 8e0511                   stx abst+2
22fe : 08                       php         ;flags after load/store sequence
22ff : 49c3                     eor #$c3
2301 : aa                       tax
2302 : e041                     cpx #$41    ;test result
                                trap_ne
2304 : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
2306 : 208553          >        jsr report_error
                       >
2309 :                 >skip0939
                        
2309 : 68                       pla         ;load status
                                eor_flag 0
230a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
230c : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
230f : f003            >        beq skip0942
                       >        trap            ;failed not equal (non zero)
2311 : 208553          >        jsr report_error
                       >
2314 :                 >skip0942
                        
                                set_stat 0
                       >            load_flag 0
2314 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2316 : 48              >            pha         ;use stack to load status
2317 : 28              >            plp
                        
2318 : a65e                     ldx zp1+3
231a : 08                       php         ;test stores do not alter flags
231b : 8a                       txa
231c : 49c3                     eor #$c3
231e : aa                       tax
231f : 28                       plp
2320 : 8e0611                   stx abst+3
2323 : 08                       php         ;flags after load/store sequence
2324 : 49c3                     eor #$c3
2326 : aa                       tax
2327 : e000                     cpx #0      ;test result
                                trap_ne
2329 : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
232b : 208553          >        jsr report_error
                       >
232e :                 >skip0946
                        
232e : 68                       pla         ;load status
                                eor_flag 0
232f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2331 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2334 : f003            >        beq skip0949
                       >        trap            ;failed not equal (non zero)
2336 : 208553          >        jsr report_error
                       >
2339 :                 >skip0949
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2339 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
233b : 48              >            pha         ;use stack to load status
233c : 28              >            plp
                        
233d : a65b                     ldx zp1
233f : 08                       php         ;test stores do not alter flags
2340 : 8a                       txa
2341 : 49c3                     eor #$c3
2343 : aa                       tax
2344 : 28                       plp
2345 : 8e0311                   stx abst
2348 : 08                       php         ;flags after load/store sequence
2349 : 49c3                     eor #$c3
234b : aa                       tax
234c : e0c3                     cpx #$c3    ;test result
                                trap_ne     ;
234e : f003            >        beq skip0953
                       >        trap            ;failed not equal (non zero)
2350 : 208553          >        jsr report_error
                       >
2353 :                 >skip0953
                        
2353 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2354 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2356 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2359 : f003            >        beq skip0956
                       >        trap            ;failed not equal (non zero)
235b : 208553          >        jsr report_error
                       >
235e :                 >skip0956
                        
                                set_stat $ff
                       >            load_flag $ff
235e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2360 : 48              >            pha         ;use stack to load status
2361 : 28              >            plp
                        
2362 : a65c                     ldx zp1+1
2364 : 08                       php         ;test stores do not alter flags
2365 : 8a                       txa
2366 : 49c3                     eor #$c3
2368 : aa                       tax
2369 : 28                       plp
236a : 8e0411                   stx abst+1
236d : 08                       php         ;flags after load/store sequence
236e : 49c3                     eor #$c3
2370 : aa                       tax
2371 : e082                     cpx #$82    ;test result
                                trap_ne
2373 : f003            >        beq skip0960
                       >        trap            ;failed not equal (non zero)
2375 : 208553          >        jsr report_error
                       >
2378 :                 >skip0960
                        
2378 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2379 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
237b : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
237e : f003            >        beq skip0963
                       >        trap            ;failed not equal (non zero)
2380 : 208553          >        jsr report_error
                       >
2383 :                 >skip0963
                        
                                set_stat $ff
                       >            load_flag $ff
2383 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2385 : 48              >            pha         ;use stack to load status
2386 : 28              >            plp
                        
2387 : a65d                     ldx zp1+2
2389 : 08                       php         ;test stores do not alter flags
238a : 8a                       txa
238b : 49c3                     eor #$c3
238d : aa                       tax
238e : 28                       plp
238f : 8e0511                   stx abst+2
2392 : 08                       php         ;flags after load/store sequence
2393 : 49c3                     eor #$c3
2395 : aa                       tax
2396 : e041                     cpx #$41    ;test result
                                trap_ne     ;
2398 : f003            >        beq skip0967
                       >        trap            ;failed not equal (non zero)
239a : 208553          >        jsr report_error
                       >
239d :                 >skip0967
                        
239d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
239e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
23a0 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
23a3 : f003            >        beq skip0970
                       >        trap            ;failed not equal (non zero)
23a5 : 208553          >        jsr report_error
                       >
23a8 :                 >skip0970
                        
                                set_stat $ff
                       >            load_flag $ff
23a8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23aa : 48              >            pha         ;use stack to load status
23ab : 28              >            plp
                        
23ac : a65e                     ldx zp1+3
23ae : 08                       php         ;test stores do not alter flags
23af : 8a                       txa
23b0 : 49c3                     eor #$c3
23b2 : aa                       tax
23b3 : 28                       plp
23b4 : 8e0611                   stx abst+3
23b7 : 08                       php         ;flags after load/store sequence
23b8 : 49c3                     eor #$c3
23ba : aa                       tax
23bb : e000                     cpx #0      ;test result
                                trap_ne
23bd : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
23bf : 208553          >        jsr report_error
                       >
23c2 :                 >skip0974
                        
23c2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
23c3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
23c5 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
23c8 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
23ca : 208553          >        jsr report_error
                       >
23cd :                 >skip0977
                        
                        
                                set_stat 0
                       >            load_flag 0
23cd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23cf : 48              >            pha         ;use stack to load status
23d0 : 28              >            plp
                        
23d1 : ae1811                   ldx abs1
23d4 : 08                       php         ;test stores do not alter flags
23d5 : 8a                       txa
23d6 : 49c3                     eor #$c3
23d8 : aa                       tax
23d9 : 28                       plp
23da : 8652                     stx zpt
23dc : 08                       php         ;flags after load/store sequence
23dd : 49c3                     eor #$c3
23df : c55b                     cmp zp1     ;test result
                                trap_ne
23e1 : f003            >        beq skip0981
                       >        trap            ;failed not equal (non zero)
23e3 : 208553          >        jsr report_error
                       >
23e6 :                 >skip0981
                        
23e6 : 68                       pla         ;load status
                                eor_flag 0
23e7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
23e9 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
23ec : f003            >        beq skip0984
                       >        trap            ;failed not equal (non zero)
23ee : 208553          >        jsr report_error
                       >
23f1 :                 >skip0984
                        
                                set_stat 0
                       >            load_flag 0
23f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23f3 : 48              >            pha         ;use stack to load status
23f4 : 28              >            plp
                        
23f5 : ae1911                   ldx abs1+1
23f8 : 08                       php         ;test stores do not alter flags
23f9 : 8a                       txa
23fa : 49c3                     eor #$c3
23fc : aa                       tax
23fd : 28                       plp
23fe : 8653                     stx zpt+1
2400 : 08                       php         ;flags after load/store sequence
2401 : 49c3                     eor #$c3
2403 : c55c                     cmp zp1+1   ;test result
                                trap_ne
2405 : f003            >        beq skip0988
                       >        trap            ;failed not equal (non zero)
2407 : 208553          >        jsr report_error
                       >
240a :                 >skip0988
                        
240a : 68                       pla         ;load status
                                eor_flag 0
240b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
240d : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2410 : f003            >        beq skip0991
                       >        trap            ;failed not equal (non zero)
2412 : 208553          >        jsr report_error
                       >
2415 :                 >skip0991
                        
                                set_stat 0
                       >            load_flag 0
2415 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2417 : 48              >            pha         ;use stack to load status
2418 : 28              >            plp
                        
2419 : ae1a11                   ldx abs1+2
241c : 08                       php         ;test stores do not alter flags
241d : 8a                       txa
241e : 49c3                     eor #$c3
2420 : aa                       tax
2421 : 28                       plp
2422 : 8654                     stx zpt+2
2424 : 08                       php         ;flags after load/store sequence
2425 : 49c3                     eor #$c3
2427 : c55d                     cmp zp1+2   ;test result
                                trap_ne
2429 : f003            >        beq skip0995
                       >        trap            ;failed not equal (non zero)
242b : 208553          >        jsr report_error
                       >
242e :                 >skip0995
                        
242e : 68                       pla         ;load status
                                eor_flag 0
242f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2431 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2434 : f003            >        beq skip0998
                       >        trap            ;failed not equal (non zero)
2436 : 208553          >        jsr report_error
                       >
2439 :                 >skip0998
                        
                                set_stat 0
                       >            load_flag 0
2439 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
243b : 48              >            pha         ;use stack to load status
243c : 28              >            plp
                        
243d : ae1b11                   ldx abs1+3
2440 : 08                       php         ;test stores do not alter flags
2441 : 8a                       txa
2442 : 49c3                     eor #$c3
2444 : aa                       tax
2445 : 28                       plp
2446 : 8655                     stx zpt+3
2448 : 08                       php         ;flags after load/store sequence
2449 : 49c3                     eor #$c3
244b : c55e                     cmp zp1+3   ;test result
                                trap_ne
244d : f003            >        beq skip1002
                       >        trap            ;failed not equal (non zero)
244f : 208553          >        jsr report_error
                       >
2452 :                 >skip1002
                        
2452 : 68                       pla         ;load status
                                eor_flag 0
2453 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2455 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2458 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
245a : 208553          >        jsr report_error
                       >
245d :                 >skip1005
                        
                        
                                set_stat $ff
                       >            load_flag $ff
245d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
245f : 48              >            pha         ;use stack to load status
2460 : 28              >            plp
                        
2461 : ae1811                   ldx abs1
2464 : 08                       php         ;test stores do not alter flags
2465 : 8a                       txa
2466 : 49c3                     eor #$c3
2468 : aa                       tax
2469 : 28                       plp
246a : 8652                     stx zpt
246c : 08                       php         ;flags after load/store sequence
246d : 49c3                     eor #$c3
246f : aa                       tax
2470 : e45b                     cpx zp1     ;test result
                                trap_ne
2472 : f003            >        beq skip1009
                       >        trap            ;failed not equal (non zero)
2474 : 208553          >        jsr report_error
                       >
2477 :                 >skip1009
                        
2477 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2478 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
247a : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
247d : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
247f : 208553          >        jsr report_error
                       >
2482 :                 >skip1012
                        
                                set_stat $ff
                       >            load_flag $ff
2482 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2484 : 48              >            pha         ;use stack to load status
2485 : 28              >            plp
                        
2486 : ae1911                   ldx abs1+1
2489 : 08                       php         ;test stores do not alter flags
248a : 8a                       txa
248b : 49c3                     eor #$c3
248d : aa                       tax
248e : 28                       plp
248f : 8653                     stx zpt+1
2491 : 08                       php         ;flags after load/store sequence
2492 : 49c3                     eor #$c3
2494 : aa                       tax
2495 : e45c                     cpx zp1+1   ;test result
                                trap_ne
2497 : f003            >        beq skip1016
                       >        trap            ;failed not equal (non zero)
2499 : 208553          >        jsr report_error
                       >
249c :                 >skip1016
                        
249c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
249d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
249f : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
24a2 : f003            >        beq skip1019
                       >        trap            ;failed not equal (non zero)
24a4 : 208553          >        jsr report_error
                       >
24a7 :                 >skip1019
                        
                                set_stat $ff
                       >            load_flag $ff
24a7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24a9 : 48              >            pha         ;use stack to load status
24aa : 28              >            plp
                        
24ab : ae1a11                   ldx abs1+2
24ae : 08                       php         ;test stores do not alter flags
24af : 8a                       txa
24b0 : 49c3                     eor #$c3
24b2 : aa                       tax
24b3 : 28                       plp
24b4 : 8654                     stx zpt+2
24b6 : 08                       php         ;flags after load/store sequence
24b7 : 49c3                     eor #$c3
24b9 : aa                       tax
24ba : e45d                     cpx zp1+2   ;test result
                                trap_ne
24bc : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
24be : 208553          >        jsr report_error
                       >
24c1 :                 >skip1023
                        
24c1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
24c2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
24c4 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
24c7 : f003            >        beq skip1026
                       >        trap            ;failed not equal (non zero)
24c9 : 208553          >        jsr report_error
                       >
24cc :                 >skip1026
                        
                                set_stat $ff
                       >            load_flag $ff
24cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24ce : 48              >            pha         ;use stack to load status
24cf : 28              >            plp
                        
24d0 : ae1b11                   ldx abs1+3
24d3 : 08                       php         ;test stores do not alter flags
24d4 : 8a                       txa
24d5 : 49c3                     eor #$c3
24d7 : aa                       tax
24d8 : 28                       plp
24d9 : 8655                     stx zpt+3
24db : 08                       php         ;flags after load/store sequence
24dc : 49c3                     eor #$c3
24de : aa                       tax
24df : e45e                     cpx zp1+3   ;test result
                                trap_ne
24e1 : f003            >        beq skip1030
                       >        trap            ;failed not equal (non zero)
24e3 : 208553          >        jsr report_error
                       >
24e6 :                 >skip1030
                        
24e6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
24e7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
24e9 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
24ec : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
24ee : 208553          >        jsr report_error
                       >
24f1 :                 >skip1033
                        
                        
                                set_stat 0
                       >            load_flag 0
24f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24f3 : 48              >            pha         ;use stack to load status
24f4 : 28              >            plp
                        
24f5 : a2c3                     ldx #$c3
24f7 : 08                       php
24f8 : ec1811                   cpx abs1    ;test result
                                trap_ne
24fb : f003            >        beq skip1037
                       >        trap            ;failed not equal (non zero)
24fd : 208553          >        jsr report_error
                       >
2500 :                 >skip1037
                        
2500 : 68                       pla         ;load status
                                eor_flag 0
2501 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2503 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2506 : f003            >        beq skip1040
                       >        trap            ;failed not equal (non zero)
2508 : 208553          >        jsr report_error
                       >
250b :                 >skip1040
                        
                                set_stat 0
                       >            load_flag 0
250b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
250d : 48              >            pha         ;use stack to load status
250e : 28              >            plp
                        
250f : a282                     ldx #$82
2511 : 08                       php
2512 : ec1911                   cpx abs1+1  ;test result
                                trap_ne
2515 : f003            >        beq skip1044
                       >        trap            ;failed not equal (non zero)
2517 : 208553          >        jsr report_error
                       >
251a :                 >skip1044
                        
251a : 68                       pla         ;load status
                                eor_flag 0
251b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
251d : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2520 : f003            >        beq skip1047
                       >        trap            ;failed not equal (non zero)
2522 : 208553          >        jsr report_error
                       >
2525 :                 >skip1047
                        
                                set_stat 0
                       >            load_flag 0
2525 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2527 : 48              >            pha         ;use stack to load status
2528 : 28              >            plp
                        
2529 : a241                     ldx #$41
252b : 08                       php
252c : ec1a11                   cpx abs1+2  ;test result
                                trap_ne
252f : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
2531 : 208553          >        jsr report_error
                       >
2534 :                 >skip1051
                        
2534 : 68                       pla         ;load status
                                eor_flag 0
2535 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2537 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
253a : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
253c : 208553          >        jsr report_error
                       >
253f :                 >skip1054
                        
                                set_stat 0
                       >            load_flag 0
253f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2541 : 48              >            pha         ;use stack to load status
2542 : 28              >            plp
                        
2543 : a200                     ldx #0
2545 : 08                       php
2546 : ec1b11                   cpx abs1+3  ;test result
                                trap_ne
2549 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
254b : 208553          >        jsr report_error
                       >
254e :                 >skip1058
                        
254e : 68                       pla         ;load status
                                eor_flag 0
254f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2551 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2554 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
2556 : 208553          >        jsr report_error
                       >
2559 :                 >skip1061
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2559 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
255b : 48              >            pha         ;use stack to load status
255c : 28              >            plp
                        
255d : a2c3                     ldx #$c3
255f : 08                       php
2560 : ec1811                   cpx abs1    ;test result
                                trap_ne
2563 : f003            >        beq skip1065
                       >        trap            ;failed not equal (non zero)
2565 : 208553          >        jsr report_error
                       >
2568 :                 >skip1065
                        
2568 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2569 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
256b : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
256e : f003            >        beq skip1068
                       >        trap            ;failed not equal (non zero)
2570 : 208553          >        jsr report_error
                       >
2573 :                 >skip1068
                        
                                set_stat $ff
                       >            load_flag $ff
2573 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2575 : 48              >            pha         ;use stack to load status
2576 : 28              >            plp
                        
2577 : a282                     ldx #$82
2579 : 08                       php
257a : ec1911                   cpx abs1+1  ;test result
                                trap_ne
257d : f003            >        beq skip1072
                       >        trap            ;failed not equal (non zero)
257f : 208553          >        jsr report_error
                       >
2582 :                 >skip1072
                        
2582 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2583 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2585 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2588 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
258a : 208553          >        jsr report_error
                       >
258d :                 >skip1075
                        
                                set_stat $ff
                       >            load_flag $ff
258d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
258f : 48              >            pha         ;use stack to load status
2590 : 28              >            plp
                        
2591 : a241                     ldx #$41
2593 : 08                       php
2594 : ec1a11                   cpx abs1+2  ;test result
                                trap_ne
2597 : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
2599 : 208553          >        jsr report_error
                       >
259c :                 >skip1079
                        
259c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
259d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
259f : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
25a2 : f003            >        beq skip1082
                       >        trap            ;failed not equal (non zero)
25a4 : 208553          >        jsr report_error
                       >
25a7 :                 >skip1082
                        
                                set_stat $ff
                       >            load_flag $ff
25a7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25a9 : 48              >            pha         ;use stack to load status
25aa : 28              >            plp
                        
25ab : a200                     ldx #0
25ad : 08                       php
25ae : ec1b11                   cpx abs1+3  ;test result
                                trap_ne
25b1 : f003            >        beq skip1086
                       >        trap            ;failed not equal (non zero)
25b3 : 208553          >        jsr report_error
                       >
25b6 :                 >skip1086
                        
25b6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25b7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25b9 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
25bc : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
25be : 208553          >        jsr report_error
                       >
25c1 :                 >skip1089
                        
                        
25c1 : a200                     ldx #0
25c3 : a552                     lda zpt
25c5 : 49c3                     eor #$c3
25c7 : c55b                     cmp zp1
                                trap_ne     ;store to zp data
25c9 : f003            >        beq skip1091
                       >        trap            ;failed not equal (non zero)
25cb : 208553          >        jsr report_error
                       >
25ce :                 >skip1091
                        
25ce : 8652                     stx zpt     ;clear
25d0 : ad0311                   lda abst
25d3 : 49c3                     eor #$c3
25d5 : cd1811                   cmp abs1
                                trap_ne     ;store to abs data
25d8 : f003            >        beq skip1093
                       >        trap            ;failed not equal (non zero)
25da : 208553          >        jsr report_error
                       >
25dd :                 >skip1093
                        
25dd : 8e0311                   stx abst    ;clear
25e0 : a553                     lda zpt+1
25e2 : 49c3                     eor #$c3
25e4 : c55c                     cmp zp1+1
                                trap_ne     ;store to zp data
25e6 : f003            >        beq skip1095
                       >        trap            ;failed not equal (non zero)
25e8 : 208553          >        jsr report_error
                       >
25eb :                 >skip1095
                        
25eb : 8653                     stx zpt+1   ;clear
25ed : ad0411                   lda abst+1
25f0 : 49c3                     eor #$c3
25f2 : cd1911                   cmp abs1+1
                                trap_ne     ;store to abs data
25f5 : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
25f7 : 208553          >        jsr report_error
                       >
25fa :                 >skip1097
                        
25fa : 8e0411                   stx abst+1  ;clear
25fd : a554                     lda zpt+2
25ff : 49c3                     eor #$c3
2601 : c55d                     cmp zp1+2
                                trap_ne     ;store to zp data
2603 : f003            >        beq skip1099
                       >        trap            ;failed not equal (non zero)
2605 : 208553          >        jsr report_error
                       >
2608 :                 >skip1099
                        
2608 : 8654                     stx zpt+2   ;clear
260a : ad0511                   lda abst+2
260d : 49c3                     eor #$c3
260f : cd1a11                   cmp abs1+2
                                trap_ne     ;store to abs data
2612 : f003            >        beq skip1101
                       >        trap            ;failed not equal (non zero)
2614 : 208553          >        jsr report_error
                       >
2617 :                 >skip1101
                        
2617 : 8e0511                   stx abst+2  ;clear
261a : a555                     lda zpt+3
261c : 49c3                     eor #$c3
261e : c55e                     cmp zp1+3
                                trap_ne     ;store to zp data
2620 : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
2622 : 208553          >        jsr report_error
                       >
2625 :                 >skip1103
                        
2625 : 8655                     stx zpt+3   ;clear
2627 : ad0611                   lda abst+3
262a : 49c3                     eor #$c3
262c : cd1b11                   cmp abs1+3
                                trap_ne     ;store to abs data
262f : f003            >        beq skip1105
                       >        trap            ;failed not equal (non zero)
2631 : 208553          >        jsr report_error
                       >
2634 :                 >skip1105
                        
2634 : 8e0611                   stx abst+3  ;clear
                                next_test
2637 : ad0011          >            lda test_case   ;previous test
263a : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
263c : f003            >        beq skip1108
                       >        trap            ;failed not equal (non zero)
263e : 208553          >        jsr report_error
                       >
2641 :                 >skip1108
                       >
0014 =                 >test_num = test_num + 1
2641 : a914            >            lda #test_num   ;*** next tests' number
2643 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
2646 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2648 : 48              >            pha         ;use stack to load status
2649 : 28              >            plp
                        
264a : a45b                     ldy zp1
264c : 08                       php         ;test stores do not alter flags
264d : 98                       tya
264e : 49c3                     eor #$c3
2650 : a8                       tay
2651 : 28                       plp
2652 : 8c0311                   sty abst
2655 : 08                       php         ;flags after load/store sequence
2656 : 49c3                     eor #$c3
2658 : a8                       tay
2659 : c0c3                     cpy #$c3    ;test result
                                trap_ne
265b : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
265d : 208553          >        jsr report_error
                       >
2660 :                 >skip1112
                        
2660 : 68                       pla         ;load status
                                eor_flag 0
2661 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2663 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2666 : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
2668 : 208553          >        jsr report_error
                       >
266b :                 >skip1115
                        
                                set_stat 0
                       >            load_flag 0
266b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
266d : 48              >            pha         ;use stack to load status
266e : 28              >            plp
                        
266f : a45c                     ldy zp1+1
2671 : 08                       php         ;test stores do not alter flags
2672 : 98                       tya
2673 : 49c3                     eor #$c3
2675 : a8                       tay
2676 : 28                       plp
2677 : 8c0411                   sty abst+1
267a : 08                       php         ;flags after load/store sequence
267b : 49c3                     eor #$c3
267d : a8                       tay
267e : c082                     cpy #$82    ;test result
                                trap_ne
2680 : f003            >        beq skip1119
                       >        trap            ;failed not equal (non zero)
2682 : 208553          >        jsr report_error
                       >
2685 :                 >skip1119
                        
2685 : 68                       pla         ;load status
                                eor_flag 0
2686 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2688 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
268b : f003            >        beq skip1122
                       >        trap            ;failed not equal (non zero)
268d : 208553          >        jsr report_error
                       >
2690 :                 >skip1122
                        
                                set_stat 0
                       >            load_flag 0
2690 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2692 : 48              >            pha         ;use stack to load status
2693 : 28              >            plp
                        
2694 : a45d                     ldy zp1+2
2696 : 08                       php         ;test stores do not alter flags
2697 : 98                       tya
2698 : 49c3                     eor #$c3
269a : a8                       tay
269b : 28                       plp
269c : 8c0511                   sty abst+2
269f : 08                       php         ;flags after load/store sequence
26a0 : 49c3                     eor #$c3
26a2 : a8                       tay
26a3 : c041                     cpy #$41    ;test result
                                trap_ne
26a5 : f003            >        beq skip1126
                       >        trap            ;failed not equal (non zero)
26a7 : 208553          >        jsr report_error
                       >
26aa :                 >skip1126
                        
26aa : 68                       pla         ;load status
                                eor_flag 0
26ab : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
26ad : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
26b0 : f003            >        beq skip1129
                       >        trap            ;failed not equal (non zero)
26b2 : 208553          >        jsr report_error
                       >
26b5 :                 >skip1129
                        
                                set_stat 0
                       >            load_flag 0
26b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26b7 : 48              >            pha         ;use stack to load status
26b8 : 28              >            plp
                        
26b9 : a45e                     ldy zp1+3
26bb : 08                       php         ;test stores do not alter flags
26bc : 98                       tya
26bd : 49c3                     eor #$c3
26bf : a8                       tay
26c0 : 28                       plp
26c1 : 8c0611                   sty abst+3
26c4 : 08                       php         ;flags after load/store sequence
26c5 : 49c3                     eor #$c3
26c7 : a8                       tay
26c8 : c000                     cpy #0      ;test result
                                trap_ne
26ca : f003            >        beq skip1133
                       >        trap            ;failed not equal (non zero)
26cc : 208553          >        jsr report_error
                       >
26cf :                 >skip1133
                        
26cf : 68                       pla         ;load status
                                eor_flag 0
26d0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
26d2 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
26d5 : f003            >        beq skip1136
                       >        trap            ;failed not equal (non zero)
26d7 : 208553          >        jsr report_error
                       >
26da :                 >skip1136
                        
                        
                                set_stat $ff
                       >            load_flag $ff
26da : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26dc : 48              >            pha         ;use stack to load status
26dd : 28              >            plp
                        
26de : a45b                     ldy zp1
26e0 : 08                       php         ;test stores do not alter flags
26e1 : 98                       tya
26e2 : 49c3                     eor #$c3
26e4 : a8                       tay
26e5 : 28                       plp
26e6 : 8c0311                   sty abst
26e9 : 08                       php         ;flags after load/store sequence
26ea : 49c3                     eor #$c3
26ec : a8                       tay
26ed : c0c3                     cpy #$c3    ;test result
                                trap_ne
26ef : f003            >        beq skip1140
                       >        trap            ;failed not equal (non zero)
26f1 : 208553          >        jsr report_error
                       >
26f4 :                 >skip1140
                        
26f4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
26f5 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
26f7 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
26fa : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
26fc : 208553          >        jsr report_error
                       >
26ff :                 >skip1143
                        
                                set_stat $ff
                       >            load_flag $ff
26ff : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2701 : 48              >            pha         ;use stack to load status
2702 : 28              >            plp
                        
2703 : a45c                     ldy zp1+1
2705 : 08                       php         ;test stores do not alter flags
2706 : 98                       tya
2707 : 49c3                     eor #$c3
2709 : a8                       tay
270a : 28                       plp
270b : 8c0411                   sty abst+1
270e : 08                       php         ;flags after load/store sequence
270f : 49c3                     eor #$c3
2711 : a8                       tay
2712 : c082                     cpy #$82   ;test result
                                trap_ne
2714 : f003            >        beq skip1147
                       >        trap            ;failed not equal (non zero)
2716 : 208553          >        jsr report_error
                       >
2719 :                 >skip1147
                        
2719 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
271a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
271c : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
271f : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
2721 : 208553          >        jsr report_error
                       >
2724 :                 >skip1150
                        
                                set_stat $ff
                       >            load_flag $ff
2724 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2726 : 48              >            pha         ;use stack to load status
2727 : 28              >            plp
                        
2728 : a45d                     ldy zp1+2
272a : 08                       php         ;test stores do not alter flags
272b : 98                       tya
272c : 49c3                     eor #$c3
272e : a8                       tay
272f : 28                       plp
2730 : 8c0511                   sty abst+2
2733 : 08                       php         ;flags after load/store sequence
2734 : 49c3                     eor #$c3
2736 : a8                       tay
2737 : c041                     cpy #$41    ;test result
                                trap_ne
2739 : f003            >        beq skip1154
                       >        trap            ;failed not equal (non zero)
273b : 208553          >        jsr report_error
                       >
273e :                 >skip1154
                        
273e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
273f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2741 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2744 : f003            >        beq skip1157
                       >        trap            ;failed not equal (non zero)
2746 : 208553          >        jsr report_error
                       >
2749 :                 >skip1157
                        
                                set_stat $ff
                       >            load_flag $ff
2749 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
274b : 48              >            pha         ;use stack to load status
274c : 28              >            plp
                        
274d : a45e                     ldy zp1+3
274f : 08                       php         ;test stores do not alter flags
2750 : 98                       tya
2751 : 49c3                     eor #$c3
2753 : a8                       tay
2754 : 28                       plp
2755 : 8c0611                   sty abst+3
2758 : 08                       php         ;flags after load/store sequence
2759 : 49c3                     eor #$c3
275b : a8                       tay
275c : c000                     cpy #0      ;test result
                                trap_ne
275e : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
2760 : 208553          >        jsr report_error
                       >
2763 :                 >skip1161
                        
2763 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2764 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2766 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2769 : f003            >        beq skip1164
                       >        trap            ;failed not equal (non zero)
276b : 208553          >        jsr report_error
                       >
276e :                 >skip1164
                        
                        
                                set_stat 0
                       >            load_flag 0
276e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2770 : 48              >            pha         ;use stack to load status
2771 : 28              >            plp
                        
2772 : ac1811                   ldy abs1
2775 : 08                       php         ;test stores do not alter flags
2776 : 98                       tya
2777 : 49c3                     eor #$c3
2779 : a8                       tay
277a : 28                       plp
277b : 8452                     sty zpt
277d : 08                       php         ;flags after load/store sequence
277e : 49c3                     eor #$c3
2780 : a8                       tay
2781 : c45b                     cpy zp1     ;test result
                                trap_ne
2783 : f003            >        beq skip1168
                       >        trap            ;failed not equal (non zero)
2785 : 208553          >        jsr report_error
                       >
2788 :                 >skip1168
                        
2788 : 68                       pla         ;load status
                                eor_flag 0
2789 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
278b : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
278e : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
2790 : 208553          >        jsr report_error
                       >
2793 :                 >skip1171
                        
                                set_stat 0
                       >            load_flag 0
2793 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2795 : 48              >            pha         ;use stack to load status
2796 : 28              >            plp
                        
2797 : ac1911                   ldy abs1+1
279a : 08                       php         ;test stores do not alter flags
279b : 98                       tya
279c : 49c3                     eor #$c3
279e : a8                       tay
279f : 28                       plp
27a0 : 8453                     sty zpt+1
27a2 : 08                       php         ;flags after load/store sequence
27a3 : 49c3                     eor #$c3
27a5 : a8                       tay
27a6 : c45c                     cpy zp1+1   ;test result
                                trap_ne
27a8 : f003            >        beq skip1175
                       >        trap            ;failed not equal (non zero)
27aa : 208553          >        jsr report_error
                       >
27ad :                 >skip1175
                        
27ad : 68                       pla         ;load status
                                eor_flag 0
27ae : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
27b0 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
27b3 : f003            >        beq skip1178
                       >        trap            ;failed not equal (non zero)
27b5 : 208553          >        jsr report_error
                       >
27b8 :                 >skip1178
                        
                                set_stat 0
                       >            load_flag 0
27b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27ba : 48              >            pha         ;use stack to load status
27bb : 28              >            plp
                        
27bc : ac1a11                   ldy abs1+2
27bf : 08                       php         ;test stores do not alter flags
27c0 : 98                       tya
27c1 : 49c3                     eor #$c3
27c3 : a8                       tay
27c4 : 28                       plp
27c5 : 8454                     sty zpt+2
27c7 : 08                       php         ;flags after load/store sequence
27c8 : 49c3                     eor #$c3
27ca : a8                       tay
27cb : c45d                     cpy zp1+2   ;test result
                                trap_ne
27cd : f003            >        beq skip1182
                       >        trap            ;failed not equal (non zero)
27cf : 208553          >        jsr report_error
                       >
27d2 :                 >skip1182
                        
27d2 : 68                       pla         ;load status
                                eor_flag 0
27d3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
27d5 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
27d8 : f003            >        beq skip1185
                       >        trap            ;failed not equal (non zero)
27da : 208553          >        jsr report_error
                       >
27dd :                 >skip1185
                        
                                set_stat 0
                       >            load_flag 0
27dd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27df : 48              >            pha         ;use stack to load status
27e0 : 28              >            plp
                        
27e1 : ac1b11                   ldy abs1+3
27e4 : 08                       php         ;test stores do not alter flags
27e5 : 98                       tya
27e6 : 49c3                     eor #$c3
27e8 : a8                       tay
27e9 : 28                       plp
27ea : 8455                     sty zpt+3
27ec : 08                       php         ;flags after load/store sequence
27ed : 49c3                     eor #$c3
27ef : a8                       tay
27f0 : c45e                     cpy zp1+3   ;test result
                                trap_ne
27f2 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
27f4 : 208553          >        jsr report_error
                       >
27f7 :                 >skip1189
                        
27f7 : 68                       pla         ;load status
                                eor_flag 0
27f8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
27fa : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
27fd : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
27ff : 208553          >        jsr report_error
                       >
2802 :                 >skip1192
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2802 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2804 : 48              >            pha         ;use stack to load status
2805 : 28              >            plp
                        
2806 : ac1811                   ldy abs1
2809 : 08                       php         ;test stores do not alter flags
280a : 98                       tya
280b : 49c3                     eor #$c3
280d : a8                       tay
280e : 28                       plp
280f : 8452                     sty zpt
2811 : 08                       php         ;flags after load/store sequence
2812 : 49c3                     eor #$c3
2814 : a8                       tay
2815 : c55b                     cmp zp1     ;test result
                                trap_ne
2817 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
2819 : 208553          >        jsr report_error
                       >
281c :                 >skip1196
                        
281c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
281d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
281f : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2822 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
2824 : 208553          >        jsr report_error
                       >
2827 :                 >skip1199
                        
                                set_stat $ff
                       >            load_flag $ff
2827 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2829 : 48              >            pha         ;use stack to load status
282a : 28              >            plp
                        
282b : ac1911                   ldy abs1+1
282e : 08                       php         ;test stores do not alter flags
282f : 98                       tya
2830 : 49c3                     eor #$c3
2832 : a8                       tay
2833 : 28                       plp
2834 : 8453                     sty zpt+1
2836 : 08                       php         ;flags after load/store sequence
2837 : 49c3                     eor #$c3
2839 : a8                       tay
283a : c55c                     cmp zp1+1   ;test result
                                trap_ne
283c : f003            >        beq skip1203
                       >        trap            ;failed not equal (non zero)
283e : 208553          >        jsr report_error
                       >
2841 :                 >skip1203
                        
2841 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2842 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2844 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2847 : f003            >        beq skip1206
                       >        trap            ;failed not equal (non zero)
2849 : 208553          >        jsr report_error
                       >
284c :                 >skip1206
                        
                                set_stat $ff
                       >            load_flag $ff
284c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
284e : 48              >            pha         ;use stack to load status
284f : 28              >            plp
                        
2850 : ac1a11                   ldy abs1+2
2853 : 08                       php         ;test stores do not alter flags
2854 : 98                       tya
2855 : 49c3                     eor #$c3
2857 : a8                       tay
2858 : 28                       plp
2859 : 8454                     sty zpt+2
285b : 08                       php         ;flags after load/store sequence
285c : 49c3                     eor #$c3
285e : a8                       tay
285f : c55d                     cmp zp1+2   ;test result
                                trap_ne
2861 : f003            >        beq skip1210
                       >        trap            ;failed not equal (non zero)
2863 : 208553          >        jsr report_error
                       >
2866 :                 >skip1210
                        
2866 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2867 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2869 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
286c : f003            >        beq skip1213
                       >        trap            ;failed not equal (non zero)
286e : 208553          >        jsr report_error
                       >
2871 :                 >skip1213
                        
                                set_stat $ff
                       >            load_flag $ff
2871 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2873 : 48              >            pha         ;use stack to load status
2874 : 28              >            plp
                        
2875 : ac1b11                   ldy abs1+3
2878 : 08                       php         ;test stores do not alter flags
2879 : 98                       tya
287a : 49c3                     eor #$c3
287c : a8                       tay
287d : 28                       plp
287e : 8455                     sty zpt+3
2880 : 08                       php         ;flags after load/store sequence
2881 : 49c3                     eor #$c3
2883 : a8                       tay
2884 : c55e                     cmp zp1+3   ;test result
                                trap_ne
2886 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
2888 : 208553          >        jsr report_error
                       >
288b :                 >skip1217
                        
288b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
288c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
288e : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2891 : f003            >        beq skip1220
                       >        trap            ;failed not equal (non zero)
2893 : 208553          >        jsr report_error
                       >
2896 :                 >skip1220
                        
                        
                        
                                set_stat 0
                       >            load_flag 0
2896 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2898 : 48              >            pha         ;use stack to load status
2899 : 28              >            plp
                        
289a : a0c3                     ldy #$c3
289c : 08                       php
289d : cc1811                   cpy abs1    ;test result
                                trap_ne
28a0 : f003            >        beq skip1224
                       >        trap            ;failed not equal (non zero)
28a2 : 208553          >        jsr report_error
                       >
28a5 :                 >skip1224
                        
28a5 : 68                       pla         ;load status
                                eor_flag 0
28a6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
28a8 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
28ab : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
28ad : 208553          >        jsr report_error
                       >
28b0 :                 >skip1227
                        
                                set_stat 0
                       >            load_flag 0
28b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28b2 : 48              >            pha         ;use stack to load status
28b3 : 28              >            plp
                        
28b4 : a082                     ldy #$82
28b6 : 08                       php
28b7 : cc1911                   cpy abs1+1  ;test result
                                trap_ne
28ba : f003            >        beq skip1231
                       >        trap            ;failed not equal (non zero)
28bc : 208553          >        jsr report_error
                       >
28bf :                 >skip1231
                        
28bf : 68                       pla         ;load status
                                eor_flag 0
28c0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
28c2 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
28c5 : f003            >        beq skip1234
                       >        trap            ;failed not equal (non zero)
28c7 : 208553          >        jsr report_error
                       >
28ca :                 >skip1234
                        
                                set_stat 0
                       >            load_flag 0
28ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28cc : 48              >            pha         ;use stack to load status
28cd : 28              >            plp
                        
28ce : a041                     ldy #$41
28d0 : 08                       php
28d1 : cc1a11                   cpy abs1+2  ;test result
                                trap_ne
28d4 : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
28d6 : 208553          >        jsr report_error
                       >
28d9 :                 >skip1238
                        
28d9 : 68                       pla         ;load status
                                eor_flag 0
28da : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
28dc : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
28df : f003            >        beq skip1241
                       >        trap            ;failed not equal (non zero)
28e1 : 208553          >        jsr report_error
                       >
28e4 :                 >skip1241
                        
                                set_stat 0
                       >            load_flag 0
28e4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28e6 : 48              >            pha         ;use stack to load status
28e7 : 28              >            plp
                        
28e8 : a000                     ldy #0
28ea : 08                       php
28eb : cc1b11                   cpy abs1+3  ;test result
                                trap_ne
28ee : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
28f0 : 208553          >        jsr report_error
                       >
28f3 :                 >skip1245
                        
28f3 : 68                       pla         ;load status
                                eor_flag 0
28f4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
28f6 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
28f9 : f003            >        beq skip1248
                       >        trap            ;failed not equal (non zero)
28fb : 208553          >        jsr report_error
                       >
28fe :                 >skip1248
                        
                        
                                set_stat $ff
                       >            load_flag $ff
28fe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2900 : 48              >            pha         ;use stack to load status
2901 : 28              >            plp
                        
2902 : a0c3                     ldy #$c3
2904 : 08                       php
2905 : cc1811                   cpy abs1    ;test result
                                trap_ne
2908 : f003            >        beq skip1252
                       >        trap            ;failed not equal (non zero)
290a : 208553          >        jsr report_error
                       >
290d :                 >skip1252
                        
290d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
290e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2910 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2913 : f003            >        beq skip1255
                       >        trap            ;failed not equal (non zero)
2915 : 208553          >        jsr report_error
                       >
2918 :                 >skip1255
                        
                                set_stat $ff
                       >            load_flag $ff
2918 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
291a : 48              >            pha         ;use stack to load status
291b : 28              >            plp
                        
291c : a082                     ldy #$82
291e : 08                       php
291f : cc1911                   cpy abs1+1  ;test result
                                trap_ne
2922 : f003            >        beq skip1259
                       >        trap            ;failed not equal (non zero)
2924 : 208553          >        jsr report_error
                       >
2927 :                 >skip1259
                        
2927 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2928 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
292a : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
292d : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
292f : 208553          >        jsr report_error
                       >
2932 :                 >skip1262
                        
                                set_stat $ff
                       >            load_flag $ff
2932 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2934 : 48              >            pha         ;use stack to load status
2935 : 28              >            plp
                        
2936 : a041                     ldy #$41
2938 : 08                       php
2939 : cc1a11                   cpy abs1+2   ;test result
                                trap_ne
293c : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
293e : 208553          >        jsr report_error
                       >
2941 :                 >skip1266
                        
2941 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2942 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2944 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2947 : f003            >        beq skip1269
                       >        trap            ;failed not equal (non zero)
2949 : 208553          >        jsr report_error
                       >
294c :                 >skip1269
                        
                                set_stat $ff
                       >            load_flag $ff
294c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
294e : 48              >            pha         ;use stack to load status
294f : 28              >            plp
                        
2950 : a000                     ldy #0
2952 : 08                       php
2953 : cc1b11                   cpy abs1+3  ;test result
                                trap_ne
2956 : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
2958 : 208553          >        jsr report_error
                       >
295b :                 >skip1273
                        
295b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
295c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
295e : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2961 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
2963 : 208553          >        jsr report_error
                       >
2966 :                 >skip1276
                        
                        
2966 : a000                     ldy #0
2968 : a552                     lda zpt
296a : 49c3                     eor #$c3
296c : c55b                     cmp zp1
                                trap_ne     ;store to zp   data
296e : f003            >        beq skip1278
                       >        trap            ;failed not equal (non zero)
2970 : 208553          >        jsr report_error
                       >
2973 :                 >skip1278
                        
2973 : 8452                     sty zpt     ;clear
2975 : ad0311                   lda abst
2978 : 49c3                     eor #$c3
297a : cd1811                   cmp abs1
                                trap_ne     ;store to abs   data
297d : f003            >        beq skip1280
                       >        trap            ;failed not equal (non zero)
297f : 208553          >        jsr report_error
                       >
2982 :                 >skip1280
                        
2982 : 8c0311                   sty abst    ;clear
2985 : a553                     lda zpt+1
2987 : 49c3                     eor #$c3
2989 : c55c                     cmp zp1+1
                                trap_ne     ;store to zp+1 data
298b : f003            >        beq skip1282
                       >        trap            ;failed not equal (non zero)
298d : 208553          >        jsr report_error
                       >
2990 :                 >skip1282
                        
2990 : 8453                     sty zpt+1   ;clear
2992 : ad0411                   lda abst+1
2995 : 49c3                     eor #$c3
2997 : cd1911                   cmp abs1+1
                                trap_ne     ;store to abs+1 data
299a : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
299c : 208553          >        jsr report_error
                       >
299f :                 >skip1284
                        
299f : 8c0411                   sty abst+1  ;clear
29a2 : a554                     lda zpt+2
29a4 : 49c3                     eor #$c3
29a6 : c55d                     cmp zp1+2
                                trap_ne     ;store to zp+2 data
29a8 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
29aa : 208553          >        jsr report_error
                       >
29ad :                 >skip1286
                        
29ad : 8454                     sty zpt+2   ;clear
29af : ad0511                   lda abst+2
29b2 : 49c3                     eor #$c3
29b4 : cd1a11                   cmp abs1+2
                                trap_ne     ;store to abs+2 data
29b7 : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
29b9 : 208553          >        jsr report_error
                       >
29bc :                 >skip1288
                        
29bc : 8c0511                   sty abst+2  ;clear
29bf : a555                     lda zpt+3
29c1 : 49c3                     eor #$c3
29c3 : c55e                     cmp zp1+3
                                trap_ne     ;store to zp+3 data
29c5 : f003            >        beq skip1290
                       >        trap            ;failed not equal (non zero)
29c7 : 208553          >        jsr report_error
                       >
29ca :                 >skip1290
                        
29ca : 8455                     sty zpt+3   ;clear
29cc : ad0611                   lda abst+3
29cf : 49c3                     eor #$c3
29d1 : cd1b11                   cmp abs1+3
                                trap_ne     ;store to abs+3 data
29d4 : f003            >        beq skip1292
                       >        trap            ;failed not equal (non zero)
29d6 : 208553          >        jsr report_error
                       >
29d9 :                 >skip1292
                        
29d9 : 8c0611                   sty abst+3  ;clear
                                next_test
29dc : ad0011          >            lda test_case   ;previous test
29df : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
29e1 : f003            >        beq skip1295
                       >        trap            ;failed not equal (non zero)
29e3 : 208553          >        jsr report_error
                       >
29e6 :                 >skip1295
                       >
0015 =                 >test_num = test_num + 1
29e6 : a915            >            lda #test_num   ;*** next tests' number
29e8 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA all addressing modes
                        ; LDA / STA - zp,x / abs,x
29eb : a203                     ldx #3
29ed :                  tldax
                                set_stat 0
                       >            load_flag 0
29ed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29ef : 48              >            pha         ;use stack to load status
29f0 : 28              >            plp
                        
29f1 : b55b                     lda zp1,x
29f3 : 08                       php         ;test stores do not alter flags
29f4 : 49c3                     eor #$c3
29f6 : 28                       plp
29f7 : 9d0311                   sta abst,x
29fa : 08                       php         ;flags after load/store sequence
29fb : 49c3                     eor #$c3
29fd : dd1811                   cmp abs1,x  ;test result
                                trap_ne
2a00 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
2a02 : 208553          >        jsr report_error
                       >
2a05 :                 >skip1299
                        
2a05 : 68                       pla         ;load status
                                eor_flag 0
2a06 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2a08 : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
2a0b : f003            >        beq skip1302
                       >        trap            ;failed not equal (non zero)
2a0d : 208553          >        jsr report_error
                       >
2a10 :                 >skip1302
                        
2a10 : ca                       dex
2a11 : 10da                     bpl tldax
                        
2a13 : a203                     ldx #3
2a15 :                  tldax1
                                set_stat $ff
                       >            load_flag $ff
2a15 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a17 : 48              >            pha         ;use stack to load status
2a18 : 28              >            plp
                        
2a19 : b55b                     lda zp1,x
2a1b : 08                       php         ;test stores do not alter flags
2a1c : 49c3                     eor #$c3
2a1e : 28                       plp
2a1f : 9d0311                   sta abst,x
2a22 : 08                       php         ;flags after load/store sequence
2a23 : 49c3                     eor #$c3
2a25 : dd1811                   cmp abs1,x   ;test result
                                trap_ne
2a28 : f003            >        beq skip1306
                       >        trap            ;failed not equal (non zero)
2a2a : 208553          >        jsr report_error
                       >
2a2d :                 >skip1306
                        
2a2d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2a2e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2a30 : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
2a33 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
2a35 : 208553          >        jsr report_error
                       >
2a38 :                 >skip1309
                        
2a38 : ca                       dex
2a39 : 10da                     bpl tldax1
                        
2a3b : a203                     ldx #3
2a3d :                  tldax2
                                set_stat 0
                       >            load_flag 0
2a3d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a3f : 48              >            pha         ;use stack to load status
2a40 : 28              >            plp
                        
2a41 : bd1811                   lda abs1,x
2a44 : 08                       php         ;test stores do not alter flags
2a45 : 49c3                     eor #$c3
2a47 : 28                       plp
2a48 : 9552                     sta zpt,x
2a4a : 08                       php         ;flags after load/store sequence
2a4b : 49c3                     eor #$c3
2a4d : d55b                     cmp zp1,x   ;test result
                                trap_ne
2a4f : f003            >        beq skip1313
                       >        trap            ;failed not equal (non zero)
2a51 : 208553          >        jsr report_error
                       >
2a54 :                 >skip1313
                        
2a54 : 68                       pla         ;load status
                                eor_flag 0
2a55 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2a57 : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
2a5a : f003            >        beq skip1316
                       >        trap            ;failed not equal (non zero)
2a5c : 208553          >        jsr report_error
                       >
2a5f :                 >skip1316
                        
2a5f : ca                       dex
2a60 : 10db                     bpl tldax2
                        
2a62 : a203                     ldx #3
2a64 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
2a64 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a66 : 48              >            pha         ;use stack to load status
2a67 : 28              >            plp
                        
2a68 : bd1811                   lda abs1,x
2a6b : 08                       php         ;test stores do not alter flags
2a6c : 49c3                     eor #$c3
2a6e : 28                       plp
2a6f : 9552                     sta zpt,x
2a71 : 08                       php         ;flags after load/store sequence
2a72 : 49c3                     eor #$c3
2a74 : d55b                     cmp zp1,x   ;test result
                                trap_ne
2a76 : f003            >        beq skip1320
                       >        trap            ;failed not equal (non zero)
2a78 : 208553          >        jsr report_error
                       >
2a7b :                 >skip1320
                        
2a7b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2a7c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2a7e : dd1d11                   cmp fLDx,x  ;test flags
                                trap_ne
2a81 : f003            >        beq skip1323
                       >        trap            ;failed not equal (non zero)
2a83 : 208553          >        jsr report_error
                       >
2a86 :                 >skip1323
                        
2a86 : ca                       dex
2a87 : 10db                     bpl tldax3
                        
2a89 : a203                     ldx #3      ;testing store result
2a8b : a000                     ldy #0
2a8d : b552             tstax   lda zpt,x
2a8f : 49c3                     eor #$c3
2a91 : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2a93 : f003            >        beq skip1325
                       >        trap            ;failed not equal (non zero)
2a95 : 208553          >        jsr report_error
                       >
2a98 :                 >skip1325
                        
2a98 : 9452                     sty zpt,x   ;clear
2a9a : bd0311                   lda abst,x
2a9d : 49c3                     eor #$c3
2a9f : dd1811                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2aa2 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
2aa4 : 208553          >        jsr report_error
                       >
2aa7 :                 >skip1327
                        
2aa7 : 8a                       txa
2aa8 : 9d0311                   sta abst,x  ;clear
2aab : ca                       dex
2aac : 10df                     bpl tstax
                                next_test
2aae : ad0011          >            lda test_case   ;previous test
2ab1 : c915            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2ab3 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
2ab5 : 208553          >        jsr report_error
                       >
2ab8 :                 >skip1330
                       >
0016 =                 >test_num = test_num + 1
2ab8 : a916            >            lda #test_num   ;*** next tests' number
2aba : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
2abd : a003                     ldy #3
2abf :                  tlday
                                set_stat 0
                       >            load_flag 0
2abf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ac1 : 48              >            pha         ;use stack to load status
2ac2 : 28              >            plp
                        
2ac3 : b16c                     lda (ind1),y
2ac5 : 08                       php         ;test stores do not alter flags
2ac6 : 49c3                     eor #$c3
2ac8 : 28                       plp
2ac9 : 990311                   sta abst,y
2acc : 08                       php         ;flags after load/store sequence
2acd : 49c3                     eor #$c3
2acf : d91811                   cmp abs1,y  ;test result
                                trap_ne
2ad2 : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
2ad4 : 208553          >        jsr report_error
                       >
2ad7 :                 >skip1334
                        
2ad7 : 68                       pla         ;load status
                                eor_flag 0
2ad8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2ada : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
2add : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
2adf : 208553          >        jsr report_error
                       >
2ae2 :                 >skip1337
                        
2ae2 : 88                       dey
2ae3 : 10da                     bpl tlday
                        
2ae5 : a003                     ldy #3
2ae7 :                  tlday1
                                set_stat $ff
                       >            load_flag $ff
2ae7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ae9 : 48              >            pha         ;use stack to load status
2aea : 28              >            plp
                        
2aeb : b16c                     lda (ind1),y
2aed : 08                       php         ;test stores do not alter flags
2aee : 49c3                     eor #$c3
2af0 : 28                       plp
2af1 : 990311                   sta abst,y
2af4 : 08                       php         ;flags after load/store sequence
2af5 : 49c3                     eor #$c3
2af7 : d91811                   cmp abs1,y  ;test result
                                trap_ne
2afa : f003            >        beq skip1341
                       >        trap            ;failed not equal (non zero)
2afc : 208553          >        jsr report_error
                       >
2aff :                 >skip1341
                        
2aff : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b00 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b02 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
2b05 : f003            >        beq skip1344
                       >        trap            ;failed not equal (non zero)
2b07 : 208553          >        jsr report_error
                       >
2b0a :                 >skip1344
                        
2b0a : 88                       dey
2b0b : 10da                     bpl tlday1
                        
2b0d : a003                     ldy #3      ;testing store result
2b0f : a200                     ldx #0
2b11 : b90311           tstay   lda abst,y
2b14 : 49c3                     eor #$c3
2b16 : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2b19 : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
2b1b : 208553          >        jsr report_error
                       >
2b1e :                 >skip1346
                        
2b1e : 8a                       txa
2b1f : 990311                   sta abst,y  ;clear
2b22 : 88                       dey
2b23 : 10ec                     bpl tstay
                        
2b25 : a003                     ldy #3
2b27 :                  tlday2
                                set_stat 0
                       >            load_flag 0
2b27 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b29 : 48              >            pha         ;use stack to load status
2b2a : 28              >            plp
                        
2b2b : b91811                   lda abs1,y
2b2e : 08                       php         ;test stores do not alter flags
2b2f : 49c3                     eor #$c3
2b31 : 28                       plp
2b32 : 9178                     sta (indt),y
2b34 : 08                       php         ;flags after load/store sequence
2b35 : 49c3                     eor #$c3
2b37 : d16c                     cmp (ind1),y    ;test result
                                trap_ne
2b39 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
2b3b : 208553          >        jsr report_error
                       >
2b3e :                 >skip1350
                        
2b3e : 68                       pla         ;load status
                                eor_flag 0
2b3f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b41 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
2b44 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
2b46 : 208553          >        jsr report_error
                       >
2b49 :                 >skip1353
                        
2b49 : 88                       dey
2b4a : 10db                     bpl tlday2
                        
2b4c : a003                     ldy #3
2b4e :                  tlday3
                                set_stat $ff
                       >            load_flag $ff
2b4e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b50 : 48              >            pha         ;use stack to load status
2b51 : 28              >            plp
                        
2b52 : b91811                   lda abs1,y
2b55 : 08                       php         ;test stores do not alter flags
2b56 : 49c3                     eor #$c3
2b58 : 28                       plp
2b59 : 9178                     sta (indt),y
2b5b : 08                       php         ;flags after load/store sequence
2b5c : 49c3                     eor #$c3
2b5e : d16c                     cmp (ind1),y   ;test result
                                trap_ne
2b60 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
2b62 : 208553          >        jsr report_error
                       >
2b65 :                 >skip1357
                        
2b65 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b66 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b68 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
2b6b : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
2b6d : 208553          >        jsr report_error
                       >
2b70 :                 >skip1360
                        
2b70 : 88                       dey
2b71 : 10db                     bpl tlday3
                        
2b73 : a003                     ldy #3      ;testing store result
2b75 : a200                     ldx #0
2b77 : b90311           tstay1  lda abst,y
2b7a : 49c3                     eor #$c3
2b7c : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2b7f : f003            >        beq skip1362
                       >        trap            ;failed not equal (non zero)
2b81 : 208553          >        jsr report_error
                       >
2b84 :                 >skip1362
                        
2b84 : 8a                       txa
2b85 : 990311                   sta abst,y  ;clear
2b88 : 88                       dey
2b89 : 10ec                     bpl tstay1
                        
2b8b : a206                     ldx #6
2b8d : a003                     ldy #3
2b8f :                  tldax4
                                set_stat 0
                       >            load_flag 0
2b8f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b91 : 48              >            pha         ;use stack to load status
2b92 : 28              >            plp
                        
2b93 : a16c                     lda (ind1,x)
2b95 : 08                       php         ;test stores do not alter flags
2b96 : 49c3                     eor #$c3
2b98 : 28                       plp
2b99 : 8178                     sta (indt,x)
2b9b : 08                       php         ;flags after load/store sequence
2b9c : 49c3                     eor #$c3
2b9e : d91811                   cmp abs1,y  ;test result
                                trap_ne
2ba1 : f003            >        beq skip1366
                       >        trap            ;failed not equal (non zero)
2ba3 : 208553          >        jsr report_error
                       >
2ba6 :                 >skip1366
                        
2ba6 : 68                       pla         ;load status
                                eor_flag 0
2ba7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2ba9 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
2bac : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
2bae : 208553          >        jsr report_error
                       >
2bb1 :                 >skip1369
                        
2bb1 : ca                       dex
2bb2 : ca                       dex
2bb3 : 88                       dey
2bb4 : 10d9                     bpl tldax4
                        
2bb6 : a206                     ldx #6
2bb8 : a003                     ldy #3
2bba :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
2bba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bbc : 48              >            pha         ;use stack to load status
2bbd : 28              >            plp
                        
2bbe : a16c                     lda (ind1,x)
2bc0 : 08                       php         ;test stores do not alter flags
2bc1 : 49c3                     eor #$c3
2bc3 : 28                       plp
2bc4 : 8178                     sta (indt,x)
2bc6 : 08                       php         ;flags after load/store sequence
2bc7 : 49c3                     eor #$c3
2bc9 : d91811                   cmp abs1,y  ;test result
                                trap_ne
2bcc : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
2bce : 208553          >        jsr report_error
                       >
2bd1 :                 >skip1373
                        
2bd1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2bd2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2bd4 : d91d11                   cmp fLDx,y  ;test flags
                                trap_ne
2bd7 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
2bd9 : 208553          >        jsr report_error
                       >
2bdc :                 >skip1376
                        
2bdc : ca                       dex
2bdd : ca                       dex
2bde : 88                       dey
2bdf : 10d9                     bpl tldax5
                        
2be1 : a003                     ldy #3      ;testing store result
2be3 : a200                     ldx #0
2be5 : b90311           tstay2  lda abst,y
2be8 : 49c3                     eor #$c3
2bea : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2bed : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
2bef : 208553          >        jsr report_error
                       >
2bf2 :                 >skip1378
                        
2bf2 : 8a                       txa
2bf3 : 990311                   sta abst,y  ;clear
2bf6 : 88                       dey
2bf7 : 10ec                     bpl tstay2
                                next_test
2bf9 : ad0011          >            lda test_case   ;previous test
2bfc : c916            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2bfe : f003            >        beq skip1381
                       >        trap            ;failed not equal (non zero)
2c00 : 208553          >        jsr report_error
                       >
2c03 :                 >skip1381
                       >
0017 =                 >test_num = test_num + 1
2c03 : a917            >            lda #test_num   ;*** next tests' number
2c05 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
2c08 : a2fd                     ldx #3+$fa
2c0a : b561             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
2c0c : 9d0910                   sta abst-$fa,x      ;no STX abs,x!
2c0f : ca                       dex
2c10 : e0fa                     cpx #$fa
2c12 : b0f6                     bcs tldax6
2c14 : a2fd                     ldx #3+$fa
2c16 : bd1e10           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
2c19 : 9558                     sta zpt-$fa&$ff,x
2c1b : ca                       dex
2c1c : e0fa                     cpx #$fa
2c1e : b0f6                     bcs tldax7
                        
2c20 : a203                     ldx #3      ;testing wraparound result
2c22 : a000                     ldy #0
2c24 : b552             tstax1  lda zpt,x
2c26 : d55b                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2c28 : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
2c2a : 208553          >        jsr report_error
                       >
2c2d :                 >skip1383
                        
2c2d : 9452                     sty zpt,x   ;clear
2c2f : bd0311                   lda abst,x
2c32 : dd1811                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2c35 : f003            >        beq skip1385
                       >        trap            ;failed not equal (non zero)
2c37 : 208553          >        jsr report_error
                       >
2c3a :                 >skip1385
                        
2c3a : 8a                       txa
2c3b : 9d0311                   sta abst,x  ;clear
2c3e : ca                       dex
2c3f : 10e3                     bpl tstax1
                        
2c41 : a0fb                     ldy #3+$f8
2c43 : a2fe                     ldx #6+$f8
2c45 : a174             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
2c47 : 990b10                   sta abst-$f8,y
2c4a : ca                       dex
2c4b : ca                       dex
2c4c : 88                       dey
2c4d : c0f8                     cpy #$f8
2c4f : b0f4                     bcs tlday4
2c51 : a003                     ldy #3      ;testing wraparound result
2c53 : a200                     ldx #0
2c55 : b90311           tstay4  lda abst,y
2c58 : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2c5b : f003            >        beq skip1387
                       >        trap            ;failed not equal (non zero)
2c5d : 208553          >        jsr report_error
                       >
2c60 :                 >skip1387
                        
2c60 : 8a                       txa
2c61 : 990311                   sta abst,y  ;clear
2c64 : 88                       dey
2c65 : 10ee                     bpl tstay4
                        
2c67 : a0fb                     ldy #3+$f8
2c69 : b92010           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
2c6c : 9180                     sta (inwt),y
2c6e : 88                       dey
2c6f : c0f8                     cpy #$f8
2c71 : b0f6                     bcs tlday5
2c73 : a003                     ldy #3      ;testing wraparound result
2c75 : a200                     ldx #0
2c77 : b90311           tstay5  lda abst,y
2c7a : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2c7d : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
2c7f : 208553          >        jsr report_error
                       >
2c82 :                 >skip1389
                        
2c82 : 8a                       txa
2c83 : 990311                   sta abst,y  ;clear
2c86 : 88                       dey
2c87 : 10ee                     bpl tstay5
                        
2c89 : a0fb                     ldy #3+$f8
2c8b : a2fe                     ldx #6+$f8
2c8d : b176             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed
2c8f : 8180                     sta (indt-$f8&$ff,x)
2c91 : ca                       dex
2c92 : ca                       dex
2c93 : 88                       dey
2c94 : c0f8                     cpy #$f8
2c96 : b0f5                     bcs tlday6
2c98 : a003                     ldy #3      ;testing wraparound result
2c9a : a200                     ldx #0
2c9c : b90311           tstay6  lda abst,y
2c9f : d91811                   cmp abs1,y
                                trap_ne     ;store to abs data
2ca2 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
2ca4 : 208553          >        jsr report_error
                       >
2ca7 :                 >skip1391
                        
2ca7 : 8a                       txa
2ca8 : 990311                   sta abst,y  ;clear
2cab : 88                       dey
2cac : 10ee                     bpl tstay6
                                next_test
2cae : ad0011          >            lda test_case   ;previous test
2cb1 : c917            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2cb3 : f003            >        beq skip1394
                       >        trap            ;failed not equal (non zero)
2cb5 : 208553          >        jsr report_error
                       >
2cb8 :                 >skip1394
                       >
0018 =                 >test_num = test_num + 1
2cb8 : a918            >            lda #test_num   ;*** next tests' number
2cba : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0
                       >            load_flag 0
2cbd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2cbf : 48              >            pha         ;use stack to load status
2cc0 : 28              >            plp
                        
2cc1 : a55b                     lda zp1
2cc3 : 08                       php         ;test stores do not alter flags
2cc4 : 49c3                     eor #$c3
2cc6 : 28                       plp
2cc7 : 8d0311                   sta abst
2cca : 08                       php         ;flags after load/store sequence
2ccb : 49c3                     eor #$c3
2ccd : c9c3                     cmp #$c3    ;test result
                                trap_ne
2ccf : f003            >        beq skip1398
                       >        trap            ;failed not equal (non zero)
2cd1 : 208553          >        jsr report_error
                       >
2cd4 :                 >skip1398
                        
2cd4 : 68                       pla         ;load status
                                eor_flag 0
2cd5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2cd7 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2cda : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
2cdc : 208553          >        jsr report_error
                       >
2cdf :                 >skip1401
                        
                                set_stat 0
                       >            load_flag 0
2cdf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ce1 : 48              >            pha         ;use stack to load status
2ce2 : 28              >            plp
                        
2ce3 : a55c                     lda zp1+1
2ce5 : 08                       php         ;test stores do not alter flags
2ce6 : 49c3                     eor #$c3
2ce8 : 28                       plp
2ce9 : 8d0411                   sta abst+1
2cec : 08                       php         ;flags after load/store sequence
2ced : 49c3                     eor #$c3
2cef : c982                     cmp #$82    ;test result
                                trap_ne
2cf1 : f003            >        beq skip1405
                       >        trap            ;failed not equal (non zero)
2cf3 : 208553          >        jsr report_error
                       >
2cf6 :                 >skip1405
                        
2cf6 : 68                       pla         ;load status
                                eor_flag 0
2cf7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2cf9 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2cfc : f003            >        beq skip1408
                       >        trap            ;failed not equal (non zero)
2cfe : 208553          >        jsr report_error
                       >
2d01 :                 >skip1408
                        
                                set_stat 0
                       >            load_flag 0
2d01 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d03 : 48              >            pha         ;use stack to load status
2d04 : 28              >            plp
                        
2d05 : a55d                     lda zp1+2
2d07 : 08                       php         ;test stores do not alter flags
2d08 : 49c3                     eor #$c3
2d0a : 28                       plp
2d0b : 8d0511                   sta abst+2
2d0e : 08                       php         ;flags after load/store sequence
2d0f : 49c3                     eor #$c3
2d11 : c941                     cmp #$41    ;test result
                                trap_ne
2d13 : f003            >        beq skip1412
                       >        trap            ;failed not equal (non zero)
2d15 : 208553          >        jsr report_error
                       >
2d18 :                 >skip1412
                        
2d18 : 68                       pla         ;load status
                                eor_flag 0
2d19 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2d1b : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2d1e : f003            >        beq skip1415
                       >        trap            ;failed not equal (non zero)
2d20 : 208553          >        jsr report_error
                       >
2d23 :                 >skip1415
                        
                                set_stat 0
                       >            load_flag 0
2d23 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d25 : 48              >            pha         ;use stack to load status
2d26 : 28              >            plp
                        
2d27 : a55e                     lda zp1+3
2d29 : 08                       php         ;test stores do not alter flags
2d2a : 49c3                     eor #$c3
2d2c : 28                       plp
2d2d : 8d0611                   sta abst+3
2d30 : 08                       php         ;flags after load/store sequence
2d31 : 49c3                     eor #$c3
2d33 : c900                     cmp #0      ;test result
                                trap_ne
2d35 : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
2d37 : 208553          >        jsr report_error
                       >
2d3a :                 >skip1419
                        
2d3a : 68                       pla         ;load status
                                eor_flag 0
2d3b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2d3d : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2d40 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
2d42 : 208553          >        jsr report_error
                       >
2d45 :                 >skip1422
                        
                                set_stat $ff
                       >            load_flag $ff
2d45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d47 : 48              >            pha         ;use stack to load status
2d48 : 28              >            plp
                        
2d49 : a55b                     lda zp1
2d4b : 08                       php         ;test stores do not alter flags
2d4c : 49c3                     eor #$c3
2d4e : 28                       plp
2d4f : 8d0311                   sta abst
2d52 : 08                       php         ;flags after load/store sequence
2d53 : 49c3                     eor #$c3
2d55 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2d57 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
2d59 : 208553          >        jsr report_error
                       >
2d5c :                 >skip1426
                        
2d5c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2d5d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2d5f : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2d62 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
2d64 : 208553          >        jsr report_error
                       >
2d67 :                 >skip1429
                        
                                set_stat $ff
                       >            load_flag $ff
2d67 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d69 : 48              >            pha         ;use stack to load status
2d6a : 28              >            plp
                        
2d6b : a55c                     lda zp1+1
2d6d : 08                       php         ;test stores do not alter flags
2d6e : 49c3                     eor #$c3
2d70 : 28                       plp
2d71 : 8d0411                   sta abst+1
2d74 : 08                       php         ;flags after load/store sequence
2d75 : 49c3                     eor #$c3
2d77 : c982                     cmp #$82    ;test result
                                trap_ne
2d79 : f003            >        beq skip1433
                       >        trap            ;failed not equal (non zero)
2d7b : 208553          >        jsr report_error
                       >
2d7e :                 >skip1433
                        
2d7e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2d7f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2d81 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2d84 : f003            >        beq skip1436
                       >        trap            ;failed not equal (non zero)
2d86 : 208553          >        jsr report_error
                       >
2d89 :                 >skip1436
                        
                                set_stat $ff
                       >            load_flag $ff
2d89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d8b : 48              >            pha         ;use stack to load status
2d8c : 28              >            plp
                        
2d8d : a55d                     lda zp1+2
2d8f : 08                       php         ;test stores do not alter flags
2d90 : 49c3                     eor #$c3
2d92 : 28                       plp
2d93 : 8d0511                   sta abst+2
2d96 : 08                       php         ;flags after load/store sequence
2d97 : 49c3                     eor #$c3
2d99 : c941                     cmp #$41    ;test result
                                trap_ne
2d9b : f003            >        beq skip1440
                       >        trap            ;failed not equal (non zero)
2d9d : 208553          >        jsr report_error
                       >
2da0 :                 >skip1440
                        
2da0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2da1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2da3 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2da6 : f003            >        beq skip1443
                       >        trap            ;failed not equal (non zero)
2da8 : 208553          >        jsr report_error
                       >
2dab :                 >skip1443
                        
                                set_stat $ff
                       >            load_flag $ff
2dab : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2dad : 48              >            pha         ;use stack to load status
2dae : 28              >            plp
                        
2daf : a55e                     lda zp1+3
2db1 : 08                       php         ;test stores do not alter flags
2db2 : 49c3                     eor #$c3
2db4 : 28                       plp
2db5 : 8d0611                   sta abst+3
2db8 : 08                       php         ;flags after load/store sequence
2db9 : 49c3                     eor #$c3
2dbb : c900                     cmp #0      ;test result
                                trap_ne
2dbd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
2dbf : 208553          >        jsr report_error
                       >
2dc2 :                 >skip1447
                        
2dc2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2dc3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2dc5 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2dc8 : f003            >        beq skip1450
                       >        trap            ;failed not equal (non zero)
2dca : 208553          >        jsr report_error
                       >
2dcd :                 >skip1450
                        
                                set_stat 0
                       >            load_flag 0
2dcd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2dcf : 48              >            pha         ;use stack to load status
2dd0 : 28              >            plp
                        
2dd1 : ad1811                   lda abs1
2dd4 : 08                       php         ;test stores do not alter flags
2dd5 : 49c3                     eor #$c3
2dd7 : 28                       plp
2dd8 : 8552                     sta zpt
2dda : 08                       php         ;flags after load/store sequence
2ddb : 49c3                     eor #$c3
2ddd : c55b                     cmp zp1     ;test result
                                trap_ne
2ddf : f003            >        beq skip1454
                       >        trap            ;failed not equal (non zero)
2de1 : 208553          >        jsr report_error
                       >
2de4 :                 >skip1454
                        
2de4 : 68                       pla         ;load status
                                eor_flag 0
2de5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2de7 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2dea : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
2dec : 208553          >        jsr report_error
                       >
2def :                 >skip1457
                        
                                set_stat 0
                       >            load_flag 0
2def : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2df1 : 48              >            pha         ;use stack to load status
2df2 : 28              >            plp
                        
2df3 : ad1911                   lda abs1+1
2df6 : 08                       php         ;test stores do not alter flags
2df7 : 49c3                     eor #$c3
2df9 : 28                       plp
2dfa : 8553                     sta zpt+1
2dfc : 08                       php         ;flags after load/store sequence
2dfd : 49c3                     eor #$c3
2dff : c55c                     cmp zp1+1   ;test result
                                trap_ne
2e01 : f003            >        beq skip1461
                       >        trap            ;failed not equal (non zero)
2e03 : 208553          >        jsr report_error
                       >
2e06 :                 >skip1461
                        
2e06 : 68                       pla         ;load status
                                eor_flag 0
2e07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e09 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2e0c : f003            >        beq skip1464
                       >        trap            ;failed not equal (non zero)
2e0e : 208553          >        jsr report_error
                       >
2e11 :                 >skip1464
                        
                                set_stat 0
                       >            load_flag 0
2e11 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e13 : 48              >            pha         ;use stack to load status
2e14 : 28              >            plp
                        
2e15 : ad1a11                   lda abs1+2
2e18 : 08                       php         ;test stores do not alter flags
2e19 : 49c3                     eor #$c3
2e1b : 28                       plp
2e1c : 8554                     sta zpt+2
2e1e : 08                       php         ;flags after load/store sequence
2e1f : 49c3                     eor #$c3
2e21 : c55d                     cmp zp1+2   ;test result
                                trap_ne
2e23 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
2e25 : 208553          >        jsr report_error
                       >
2e28 :                 >skip1468
                        
2e28 : 68                       pla         ;load status
                                eor_flag 0
2e29 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e2b : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2e2e : f003            >        beq skip1471
                       >        trap            ;failed not equal (non zero)
2e30 : 208553          >        jsr report_error
                       >
2e33 :                 >skip1471
                        
                                set_stat 0
                       >            load_flag 0
2e33 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e35 : 48              >            pha         ;use stack to load status
2e36 : 28              >            plp
                        
2e37 : ad1b11                   lda abs1+3
2e3a : 08                       php         ;test stores do not alter flags
2e3b : 49c3                     eor #$c3
2e3d : 28                       plp
2e3e : 8555                     sta zpt+3
2e40 : 08                       php         ;flags after load/store sequence
2e41 : 49c3                     eor #$c3
2e43 : c55e                     cmp zp1+3   ;test result
                                trap_ne
2e45 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
2e47 : 208553          >        jsr report_error
                       >
2e4a :                 >skip1475
                        
2e4a : 68                       pla         ;load status
                                eor_flag 0
2e4b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e4d : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2e50 : f003            >        beq skip1478
                       >        trap            ;failed not equal (non zero)
2e52 : 208553          >        jsr report_error
                       >
2e55 :                 >skip1478
                        
                                set_stat $ff
                       >            load_flag $ff
2e55 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e57 : 48              >            pha         ;use stack to load status
2e58 : 28              >            plp
                        
2e59 : ad1811                   lda abs1
2e5c : 08                       php         ;test stores do not alter flags
2e5d : 49c3                     eor #$c3
2e5f : 28                       plp
2e60 : 8552                     sta zpt
2e62 : 08                       php         ;flags after load/store sequence
2e63 : 49c3                     eor #$c3
2e65 : c55b                     cmp zp1     ;test result
                                trap_ne
2e67 : f003            >        beq skip1482
                       >        trap            ;failed not equal (non zero)
2e69 : 208553          >        jsr report_error
                       >
2e6c :                 >skip1482
                        
2e6c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2e6d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2e6f : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2e72 : f003            >        beq skip1485
                       >        trap            ;failed not equal (non zero)
2e74 : 208553          >        jsr report_error
                       >
2e77 :                 >skip1485
                        
                                set_stat $ff
                       >            load_flag $ff
2e77 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e79 : 48              >            pha         ;use stack to load status
2e7a : 28              >            plp
                        
2e7b : ad1911                   lda abs1+1
2e7e : 08                       php         ;test stores do not alter flags
2e7f : 49c3                     eor #$c3
2e81 : 28                       plp
2e82 : 8553                     sta zpt+1
2e84 : 08                       php         ;flags after load/store sequence
2e85 : 49c3                     eor #$c3
2e87 : c55c                     cmp zp1+1   ;test result
                                trap_ne
2e89 : f003            >        beq skip1489
                       >        trap            ;failed not equal (non zero)
2e8b : 208553          >        jsr report_error
                       >
2e8e :                 >skip1489
                        
2e8e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2e8f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2e91 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2e94 : f003            >        beq skip1492
                       >        trap            ;failed not equal (non zero)
2e96 : 208553          >        jsr report_error
                       >
2e99 :                 >skip1492
                        
                                set_stat $ff
                       >            load_flag $ff
2e99 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e9b : 48              >            pha         ;use stack to load status
2e9c : 28              >            plp
                        
2e9d : ad1a11                   lda abs1+2
2ea0 : 08                       php         ;test stores do not alter flags
2ea1 : 49c3                     eor #$c3
2ea3 : 28                       plp
2ea4 : 8554                     sta zpt+2
2ea6 : 08                       php         ;flags after load/store sequence
2ea7 : 49c3                     eor #$c3
2ea9 : c55d                     cmp zp1+2   ;test result
                                trap_ne
2eab : f003            >        beq skip1496
                       >        trap            ;failed not equal (non zero)
2ead : 208553          >        jsr report_error
                       >
2eb0 :                 >skip1496
                        
2eb0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2eb1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2eb3 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2eb6 : f003            >        beq skip1499
                       >        trap            ;failed not equal (non zero)
2eb8 : 208553          >        jsr report_error
                       >
2ebb :                 >skip1499
                        
                                set_stat $ff
                       >            load_flag $ff
2ebb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ebd : 48              >            pha         ;use stack to load status
2ebe : 28              >            plp
                        
2ebf : ad1b11                   lda abs1+3
2ec2 : 08                       php         ;test stores do not alter flags
2ec3 : 49c3                     eor #$c3
2ec5 : 28                       plp
2ec6 : 8555                     sta zpt+3
2ec8 : 08                       php         ;flags after load/store sequence
2ec9 : 49c3                     eor #$c3
2ecb : c55e                     cmp zp1+3   ;test result
                                trap_ne
2ecd : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
2ecf : 208553          >        jsr report_error
                       >
2ed2 :                 >skip1503
                        
2ed2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2ed3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2ed5 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2ed8 : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
2eda : 208553          >        jsr report_error
                       >
2edd :                 >skip1506
                        
                                set_stat 0
                       >            load_flag 0
2edd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2edf : 48              >            pha         ;use stack to load status
2ee0 : 28              >            plp
                        
2ee1 : a9c3                     lda #$c3
2ee3 : 08                       php
2ee4 : cd1811                   cmp abs1    ;test result
                                trap_ne
2ee7 : f003            >        beq skip1510
                       >        trap            ;failed not equal (non zero)
2ee9 : 208553          >        jsr report_error
                       >
2eec :                 >skip1510
                        
2eec : 68                       pla         ;load status
                                eor_flag 0
2eed : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2eef : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2ef2 : f003            >        beq skip1513
                       >        trap            ;failed not equal (non zero)
2ef4 : 208553          >        jsr report_error
                       >
2ef7 :                 >skip1513
                        
                                set_stat 0
                       >            load_flag 0
2ef7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ef9 : 48              >            pha         ;use stack to load status
2efa : 28              >            plp
                        
2efb : a982                     lda #$82
2efd : 08                       php
2efe : cd1911                   cmp abs1+1  ;test result
                                trap_ne
2f01 : f003            >        beq skip1517
                       >        trap            ;failed not equal (non zero)
2f03 : 208553          >        jsr report_error
                       >
2f06 :                 >skip1517
                        
2f06 : 68                       pla         ;load status
                                eor_flag 0
2f07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f09 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2f0c : f003            >        beq skip1520
                       >        trap            ;failed not equal (non zero)
2f0e : 208553          >        jsr report_error
                       >
2f11 :                 >skip1520
                        
                                set_stat 0
                       >            load_flag 0
2f11 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f13 : 48              >            pha         ;use stack to load status
2f14 : 28              >            plp
                        
2f15 : a941                     lda #$41
2f17 : 08                       php
2f18 : cd1a11                   cmp abs1+2  ;test result
                                trap_ne
2f1b : f003            >        beq skip1524
                       >        trap            ;failed not equal (non zero)
2f1d : 208553          >        jsr report_error
                       >
2f20 :                 >skip1524
                        
2f20 : 68                       pla         ;load status
                                eor_flag 0
2f21 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f23 : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2f26 : f003            >        beq skip1527
                       >        trap            ;failed not equal (non zero)
2f28 : 208553          >        jsr report_error
                       >
2f2b :                 >skip1527
                        
                                set_stat 0
                       >            load_flag 0
2f2b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f2d : 48              >            pha         ;use stack to load status
2f2e : 28              >            plp
                        
2f2f : a900                     lda #0
2f31 : 08                       php
2f32 : cd1b11                   cmp abs1+3  ;test result
                                trap_ne
2f35 : f003            >        beq skip1531
                       >        trap            ;failed not equal (non zero)
2f37 : 208553          >        jsr report_error
                       >
2f3a :                 >skip1531
                        
2f3a : 68                       pla         ;load status
                                eor_flag 0
2f3b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f3d : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2f40 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
2f42 : 208553          >        jsr report_error
                       >
2f45 :                 >skip1534
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2f45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f47 : 48              >            pha         ;use stack to load status
2f48 : 28              >            plp
                        
2f49 : a9c3                     lda #$c3
2f4b : 08                       php
2f4c : cd1811                   cmp abs1    ;test result
                                trap_ne
2f4f : f003            >        beq skip1538
                       >        trap            ;failed not equal (non zero)
2f51 : 208553          >        jsr report_error
                       >
2f54 :                 >skip1538
                        
2f54 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2f55 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2f57 : cd1d11                   cmp fLDx    ;test flags
                                trap_ne
2f5a : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
2f5c : 208553          >        jsr report_error
                       >
2f5f :                 >skip1541
                        
                                set_stat $ff
                       >            load_flag $ff
2f5f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f61 : 48              >            pha         ;use stack to load status
2f62 : 28              >            plp
                        
2f63 : a982                     lda #$82
2f65 : 08                       php
2f66 : cd1911                   cmp abs1+1  ;test result
                                trap_ne
2f69 : f003            >        beq skip1545
                       >        trap            ;failed not equal (non zero)
2f6b : 208553          >        jsr report_error
                       >
2f6e :                 >skip1545
                        
2f6e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2f6f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2f71 : cd1e11                   cmp fLDx+1  ;test flags
                                trap_ne
2f74 : f003            >        beq skip1548
                       >        trap            ;failed not equal (non zero)
2f76 : 208553          >        jsr report_error
                       >
2f79 :                 >skip1548
                        
                                set_stat $ff
                       >            load_flag $ff
2f79 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f7b : 48              >            pha         ;use stack to load status
2f7c : 28              >            plp
                        
2f7d : a941                     lda #$41
2f7f : 08                       php
2f80 : cd1a11                   cmp abs1+2  ;test result
                                trap_ne
2f83 : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
2f85 : 208553          >        jsr report_error
                       >
2f88 :                 >skip1552
                        
2f88 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2f89 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2f8b : cd1f11                   cmp fLDx+2  ;test flags
                                trap_ne
2f8e : f003            >        beq skip1555
                       >        trap            ;failed not equal (non zero)
2f90 : 208553          >        jsr report_error
                       >
2f93 :                 >skip1555
                        
                                set_stat $ff
                       >            load_flag $ff
2f93 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f95 : 48              >            pha         ;use stack to load status
2f96 : 28              >            plp
                        
2f97 : a900                     lda #0
2f99 : 08                       php
2f9a : cd1b11                   cmp abs1+3  ;test result
                                trap_ne
2f9d : f003            >        beq skip1559
                       >        trap            ;failed not equal (non zero)
2f9f : 208553          >        jsr report_error
                       >
2fa2 :                 >skip1559
                        
2fa2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2fa3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2fa5 : cd2011                   cmp fLDx+3  ;test flags
                                trap_ne
2fa8 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
2faa : 208553          >        jsr report_error
                       >
2fad :                 >skip1562
                        
                        
2fad : a200                     ldx #0
2faf : a552                     lda zpt
2fb1 : 49c3                     eor #$c3
2fb3 : c55b                     cmp zp1
                                trap_ne     ;store to zp data
2fb5 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
2fb7 : 208553          >        jsr report_error
                       >
2fba :                 >skip1564
                        
2fba : 8652                     stx zpt     ;clear
2fbc : ad0311                   lda abst
2fbf : 49c3                     eor #$c3
2fc1 : cd1811                   cmp abs1
                                trap_ne     ;store to abs data
2fc4 : f003            >        beq skip1566
                       >        trap            ;failed not equal (non zero)
2fc6 : 208553          >        jsr report_error
                       >
2fc9 :                 >skip1566
                        
2fc9 : 8e0311                   stx abst    ;clear
2fcc : a553                     lda zpt+1
2fce : 49c3                     eor #$c3
2fd0 : c55c                     cmp zp1+1
                                trap_ne     ;store to zp data
2fd2 : f003            >        beq skip1568
                       >        trap            ;failed not equal (non zero)
2fd4 : 208553          >        jsr report_error
                       >
2fd7 :                 >skip1568
                        
2fd7 : 8653                     stx zpt+1   ;clear
2fd9 : ad0411                   lda abst+1
2fdc : 49c3                     eor #$c3
2fde : cd1911                   cmp abs1+1
                                trap_ne     ;store to abs data
2fe1 : f003            >        beq skip1570
                       >        trap            ;failed not equal (non zero)
2fe3 : 208553          >        jsr report_error
                       >
2fe6 :                 >skip1570
                        
2fe6 : 8e0411                   stx abst+1  ;clear
2fe9 : a554                     lda zpt+2
2feb : 49c3                     eor #$c3
2fed : c55d                     cmp zp1+2
                                trap_ne     ;store to zp data
2fef : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
2ff1 : 208553          >        jsr report_error
                       >
2ff4 :                 >skip1572
                        
2ff4 : 8654                     stx zpt+2   ;clear
2ff6 : ad0511                   lda abst+2
2ff9 : 49c3                     eor #$c3
2ffb : cd1a11                   cmp abs1+2
                                trap_ne     ;store to abs data
2ffe : f003            >        beq skip1574
                       >        trap            ;failed not equal (non zero)
3000 : 208553          >        jsr report_error
                       >
3003 :                 >skip1574
                        
3003 : 8e0511                   stx abst+2  ;clear
3006 : a555                     lda zpt+3
3008 : 49c3                     eor #$c3
300a : c55e                     cmp zp1+3
                                trap_ne     ;store to zp data
300c : f003            >        beq skip1576
                       >        trap            ;failed not equal (non zero)
300e : 208553          >        jsr report_error
                       >
3011 :                 >skip1576
                        
3011 : 8655                     stx zpt+3   ;clear
3013 : ad0611                   lda abst+3
3016 : 49c3                     eor #$c3
3018 : cd1b11                   cmp abs1+3
                                trap_ne     ;store to abs data
301b : f003            >        beq skip1578
                       >        trap            ;failed not equal (non zero)
301d : 208553          >        jsr report_error
                       >
3020 :                 >skip1578
                        
3020 : 8e0611                   stx abst+3  ;clear
                                next_test
3023 : ad0011          >            lda test_case   ;previous test
3026 : c918            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3028 : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
302a : 208553          >        jsr report_error
                       >
302d :                 >skip1581
                       >
0019 =                 >test_num = test_num + 1
302d : a919            >            lda #test_num   ;*** next tests' number
302f : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addressing modes
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
3032 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3034 : 48              >            pha         ;use stack to load status
3035 : a9ff            >            lda #$ff     ;precharge accu
3037 : 28              >            plp
                        
3038 : 245e                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz
303a : 08              >            php         ;save flags
303b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
303d : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
303f : 208553          >        jsr report_error
                       >
3042 :                 >skip1586
                       >
3042 : 68              >            pla         ;load status
3043 : 48              >            pha
                       >            cmp_flag fz
3044 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3046 : f003            >        beq skip1589
                       >        trap            ;failed not equal (non zero)
3048 : 208553          >        jsr report_error
                       >
304b :                 >skip1589
                       >
304b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
304c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
304e : 48              >            pha         ;use stack to load status
304f : a901            >            lda #1     ;precharge accu
3051 : 28              >            plp
                        
3052 : 245d                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
3054 : 08              >            php         ;save flags
3055 : c901            >            cmp #1     ;test result
                       >            trap_ne
3057 : f003            >        beq skip1594
                       >        trap            ;failed not equal (non zero)
3059 : 208553          >        jsr report_error
                       >
305c :                 >skip1594
                       >
305c : 68              >            pla         ;load status
305d : 48              >            pha
                       >            cmp_flag fv
305e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3060 : f003            >        beq skip1597
                       >        trap            ;failed not equal (non zero)
3062 : 208553          >        jsr report_error
                       >
3065 :                 >skip1597
                       >
3065 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
3066 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3068 : 48              >            pha         ;use stack to load status
3069 : a901            >            lda #1     ;precharge accu
306b : 28              >            plp
                        
306c : 245c                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
306e : 08              >            php         ;save flags
306f : c901            >            cmp #1     ;test result
                       >            trap_ne
3071 : f003            >        beq skip1602
                       >        trap            ;failed not equal (non zero)
3073 : 208553          >        jsr report_error
                       >
3076 :                 >skip1602
                       >
3076 : 68              >            pla         ;load status
3077 : 48              >            pha
                       >            cmp_flag fnz
3078 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
307a : f003            >        beq skip1605
                       >        trap            ;failed not equal (non zero)
307c : 208553          >        jsr report_error
                       >
307f :                 >skip1605
                       >
307f : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
3080 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3082 : 48              >            pha         ;use stack to load status
3083 : a901            >            lda #1     ;precharge accu
3085 : 28              >            plp
                        
3086 : 245b                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
3088 : 08              >            php         ;save flags
3089 : c901            >            cmp #1     ;test result
                       >            trap_ne
308b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
308d : 208553          >        jsr report_error
                       >
3090 :                 >skip1610
                       >
3090 : 68              >            pla         ;load status
3091 : 48              >            pha
                       >            cmp_flag fnv
3092 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3094 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
3096 : 208553          >        jsr report_error
                       >
3099 :                 >skip1613
                       >
3099 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
309a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
309c : 48              >            pha         ;use stack to load status
309d : a9ff            >            lda #$ff     ;precharge accu
309f : 28              >            plp
                        
30a0 : 245e                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
30a2 : 08              >            php         ;save flags
30a3 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
30a5 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
30a7 : 208553          >        jsr report_error
                       >
30aa :                 >skip1618
                       >
30aa : 68              >            pla         ;load status
30ab : 48              >            pha
                       >            cmp_flag ~fnv
30ac : c93f            >            cmp #(~fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30ae : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
30b0 : 208553          >        jsr report_error
                       >
30b3 :                 >skip1621
                       >
30b3 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
30b4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30b6 : 48              >            pha         ;use stack to load status
30b7 : a901            >            lda #1     ;precharge accu
30b9 : 28              >            plp
                        
30ba : 245d                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
30bc : 08              >            php         ;save flags
30bd : c901            >            cmp #1     ;test result
                       >            trap_ne
30bf : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
30c1 : 208553          >        jsr report_error
                       >
30c4 :                 >skip1626
                       >
30c4 : 68              >            pla         ;load status
30c5 : 48              >            pha
                       >            cmp_flag ~fnz
30c6 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30c8 : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
30ca : 208553          >        jsr report_error
                       >
30cd :                 >skip1629
                       >
30cd : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
30ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30d0 : 48              >            pha         ;use stack to load status
30d1 : a901            >            lda #1     ;precharge accu
30d3 : 28              >            plp
                        
30d4 : 245c                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
30d6 : 08              >            php         ;save flags
30d7 : c901            >            cmp #1     ;test result
                       >            trap_ne
30d9 : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
30db : 208553          >        jsr report_error
                       >
30de :                 >skip1634
                       >
30de : 68              >            pla         ;load status
30df : 48              >            pha
                       >            cmp_flag ~fv
30e0 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30e2 : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
30e4 : 208553          >        jsr report_error
                       >
30e7 :                 >skip1637
                       >
30e7 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
30e8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30ea : 48              >            pha         ;use stack to load status
30eb : a901            >            lda #1     ;precharge accu
30ed : 28              >            plp
                        
30ee : 245b                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
30f0 : 08              >            php         ;save flags
30f1 : c901            >            cmp #1     ;test result
                       >            trap_ne
30f3 : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
30f5 : 208553          >        jsr report_error
                       >
30f8 :                 >skip1642
                       >
30f8 : 68              >            pla         ;load status
30f9 : 48              >            pha
                       >            cmp_flag ~fz
30fa : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30fc : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
30fe : 208553          >        jsr report_error
                       >
3101 :                 >skip1645
                       >
3101 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
3102 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3104 : 48              >            pha         ;use stack to load status
3105 : a9ff            >            lda #$ff     ;precharge accu
3107 : 28              >            plp
                        
3108 : 2c1b11                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz
310b : 08              >            php         ;save flags
310c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
310e : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
3110 : 208553          >        jsr report_error
                       >
3113 :                 >skip1650
                       >
3113 : 68              >            pla         ;load status
3114 : 48              >            pha
                       >            cmp_flag fz
3115 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3117 : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
3119 : 208553          >        jsr report_error
                       >
311c :                 >skip1653
                       >
311c : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
311d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
311f : 48              >            pha         ;use stack to load status
3120 : a901            >            lda #1     ;precharge accu
3122 : 28              >            plp
                        
3123 : 2c1a11                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
3126 : 08              >            php         ;save flags
3127 : c901            >            cmp #1     ;test result
                       >            trap_ne
3129 : f003            >        beq skip1658
                       >        trap            ;failed not equal (non zero)
312b : 208553          >        jsr report_error
                       >
312e :                 >skip1658
                       >
312e : 68              >            pla         ;load status
312f : 48              >            pha
                       >            cmp_flag fv
3130 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3132 : f003            >        beq skip1661
                       >        trap            ;failed not equal (non zero)
3134 : 208553          >        jsr report_error
                       >
3137 :                 >skip1661
                       >
3137 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
3138 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
313a : 48              >            pha         ;use stack to load status
313b : a901            >            lda #1     ;precharge accu
313d : 28              >            plp
                        
313e : 2c1911                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
3141 : 08              >            php         ;save flags
3142 : c901            >            cmp #1     ;test result
                       >            trap_ne
3144 : f003            >        beq skip1666
                       >        trap            ;failed not equal (non zero)
3146 : 208553          >        jsr report_error
                       >
3149 :                 >skip1666
                       >
3149 : 68              >            pla         ;load status
314a : 48              >            pha
                       >            cmp_flag fnz
314b : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
314d : f003            >        beq skip1669
                       >        trap            ;failed not equal (non zero)
314f : 208553          >        jsr report_error
                       >
3152 :                 >skip1669
                       >
3152 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
3153 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3155 : 48              >            pha         ;use stack to load status
3156 : a901            >            lda #1     ;precharge accu
3158 : 28              >            plp
                        
3159 : 2c1811                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
315c : 08              >            php         ;save flags
315d : c901            >            cmp #1     ;test result
                       >            trap_ne
315f : f003            >        beq skip1674
                       >        trap            ;failed not equal (non zero)
3161 : 208553          >        jsr report_error
                       >
3164 :                 >skip1674
                       >
3164 : 68              >            pla         ;load status
3165 : 48              >            pha
                       >            cmp_flag fnv
3166 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3168 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
316a : 208553          >        jsr report_error
                       >
316d :                 >skip1677
                       >
316d : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
316e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3170 : 48              >            pha         ;use stack to load status
3171 : a9ff            >            lda #$ff     ;precharge accu
3173 : 28              >            plp
                        
3174 : 2c1b11                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
3177 : 08              >            php         ;save flags
3178 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
317a : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
317c : 208553          >        jsr report_error
                       >
317f :                 >skip1682
                       >
317f : 68              >            pla         ;load status
3180 : 48              >            pha
                       >            cmp_flag ~fnv
3181 : c93f            >            cmp #(~fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3183 : f003            >        beq skip1685
                       >        trap            ;failed not equal (non zero)
3185 : 208553          >        jsr report_error
                       >
3188 :                 >skip1685
                       >
3188 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
3189 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
318b : 48              >            pha         ;use stack to load status
318c : a901            >            lda #1     ;precharge accu
318e : 28              >            plp
                        
318f : 2c1a11                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3192 : 08              >            php         ;save flags
3193 : c901            >            cmp #1     ;test result
                       >            trap_ne
3195 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
3197 : 208553          >        jsr report_error
                       >
319a :                 >skip1690
                       >
319a : 68              >            pla         ;load status
319b : 48              >            pha
                       >            cmp_flag ~fnz
319c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
319e : f003            >        beq skip1693
                       >        trap            ;failed not equal (non zero)
31a0 : 208553          >        jsr report_error
                       >
31a3 :                 >skip1693
                       >
31a3 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
31a4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31a6 : 48              >            pha         ;use stack to load status
31a7 : a901            >            lda #1     ;precharge accu
31a9 : 28              >            plp
                        
31aa : 2c1911                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
31ad : 08              >            php         ;save flags
31ae : c901            >            cmp #1     ;test result
                       >            trap_ne
31b0 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
31b2 : 208553          >        jsr report_error
                       >
31b5 :                 >skip1698
                       >
31b5 : 68              >            pla         ;load status
31b6 : 48              >            pha
                       >            cmp_flag ~fv
31b7 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31b9 : f003            >        beq skip1701
                       >        trap            ;failed not equal (non zero)
31bb : 208553          >        jsr report_error
                       >
31be :                 >skip1701
                       >
31be : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
31bf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31c1 : 48              >            pha         ;use stack to load status
31c2 : a901            >            lda #1     ;precharge accu
31c4 : 28              >            plp
                        
31c5 : 2c1811                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
31c8 : 08              >            php         ;save flags
31c9 : c901            >            cmp #1     ;test result
                       >            trap_ne
31cb : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
31cd : 208553          >        jsr report_error
                       >
31d0 :                 >skip1706
                       >
31d0 : 68              >            pla         ;load status
31d1 : 48              >            pha
                       >            cmp_flag ~fz
31d2 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31d4 : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
31d6 : 208553          >        jsr report_error
                       >
31d9 :                 >skip1709
                       >
31d9 : 28              >            plp         ;restore status
                        
                                next_test
31da : ad0011          >            lda test_case   ;previous test
31dd : c919            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
31df : f003            >        beq skip1712
                       >        trap            ;failed not equal (non zero)
31e1 : 208553          >        jsr report_error
                       >
31e4 :                 >skip1712
                       >
001a =                 >test_num = test_num + 1
31e4 : a91a            >            lda #test_num   ;*** next tests' number
31e6 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CPX - zp / abs / #
                                set_x $80,0
                       >            load_flag 0
31e9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31eb : 48              >            pha         ;use stack to load status
31ec : a280            >            ldx #$80     ;precharge index x
31ee : 28              >            plp
                        
31ef : e45f                     cpx zp7f
                                tst_stat fc
31f1 : 08              >            php         ;save status
31f2 : 68              >            pla         ;use stack to retrieve status
31f3 : 48              >            pha
                       >            cmp_flag fc
31f4 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31f6 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
31f8 : 208553          >        jsr report_error
                       >
31fb :                 >skip1718
                       >
31fb : 28              >            plp         ;restore status
                        
31fc : ca                       dex
31fd : e45f                     cpx zp7f
                                tst_stat fzc
31ff : 08              >            php         ;save status
3200 : 68              >            pla         ;use stack to retrieve status
3201 : 48              >            pha
                       >            cmp_flag fzc
3202 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3204 : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
3206 : 208553          >        jsr report_error
                       >
3209 :                 >skip1722
                       >
3209 : 28              >            plp         ;restore status
                        
320a : ca                       dex
320b : e45f                     cpx zp7f
                                tst_x $7e,fn
320d : 08              >            php         ;save flags
320e : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
3210 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
3212 : 208553          >        jsr report_error
                       >
3215 :                 >skip1725
                       >
3215 : 68              >            pla         ;load status
3216 : 48              >            pha
                       >            cmp_flag fn
3217 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3219 : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
321b : 208553          >        jsr report_error
                       >
321e :                 >skip1728
                       >
321e : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
321f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3221 : 48              >            pha         ;use stack to load status
3222 : a280            >            ldx #$80     ;precharge index x
3224 : 28              >            plp
                        
3225 : e45f                     cpx zp7f
                                tst_stat ~fnz
3227 : 08              >            php         ;save status
3228 : 68              >            pla         ;use stack to retrieve status
3229 : 48              >            pha
                       >            cmp_flag ~fnz
322a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
322c : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
322e : 208553          >        jsr report_error
                       >
3231 :                 >skip1734
                       >
3231 : 28              >            plp         ;restore status
                        
3232 : ca                       dex
3233 : e45f                     cpx zp7f
                                tst_stat ~fn
3235 : 08              >            php         ;save status
3236 : 68              >            pla         ;use stack to retrieve status
3237 : 48              >            pha
                       >            cmp_flag ~fn
3238 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
323a : f003            >        beq skip1738
                       >        trap            ;failed not equal (non zero)
323c : 208553          >        jsr report_error
                       >
323f :                 >skip1738
                       >
323f : 28              >            plp         ;restore status
                        
3240 : ca                       dex
3241 : e45f                     cpx zp7f
                                tst_x $7e,~fzc
3243 : 08              >            php         ;save flags
3244 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
3246 : f003            >        beq skip1741
                       >        trap            ;failed not equal (non zero)
3248 : 208553          >        jsr report_error
                       >
324b :                 >skip1741
                       >
324b : 68              >            pla         ;load status
324c : 48              >            pha
                       >            cmp_flag ~fzc
324d : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
324f : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
3251 : 208553          >        jsr report_error
                       >
3254 :                 >skip1744
                       >
3254 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
3255 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3257 : 48              >            pha         ;use stack to load status
3258 : a280            >            ldx #$80     ;precharge index x
325a : 28              >            plp
                        
325b : ec1c11                   cpx abs7f
                                tst_stat fc
325e : 08              >            php         ;save status
325f : 68              >            pla         ;use stack to retrieve status
3260 : 48              >            pha
                       >            cmp_flag fc
3261 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3263 : f003            >        beq skip1750
                       >        trap            ;failed not equal (non zero)
3265 : 208553          >        jsr report_error
                       >
3268 :                 >skip1750
                       >
3268 : 28              >            plp         ;restore status
                        
3269 : ca                       dex
326a : ec1c11                   cpx abs7f
                                tst_stat fzc
326d : 08              >            php         ;save status
326e : 68              >            pla         ;use stack to retrieve status
326f : 48              >            pha
                       >            cmp_flag fzc
3270 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3272 : f003            >        beq skip1754
                       >        trap            ;failed not equal (non zero)
3274 : 208553          >        jsr report_error
                       >
3277 :                 >skip1754
                       >
3277 : 28              >            plp         ;restore status
                        
3278 : ca                       dex
3279 : ec1c11                   cpx abs7f
                                tst_x $7e,fn
327c : 08              >            php         ;save flags
327d : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
327f : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
3281 : 208553          >        jsr report_error
                       >
3284 :                 >skip1757
                       >
3284 : 68              >            pla         ;load status
3285 : 48              >            pha
                       >            cmp_flag fn
3286 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3288 : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
328a : 208553          >        jsr report_error
                       >
328d :                 >skip1760
                       >
328d : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
328e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3290 : 48              >            pha         ;use stack to load status
3291 : a280            >            ldx #$80     ;precharge index x
3293 : 28              >            plp
                        
3294 : ec1c11                   cpx abs7f
                                tst_stat ~fnz
3297 : 08              >            php         ;save status
3298 : 68              >            pla         ;use stack to retrieve status
3299 : 48              >            pha
                       >            cmp_flag ~fnz
329a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
329c : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
329e : 208553          >        jsr report_error
                       >
32a1 :                 >skip1766
                       >
32a1 : 28              >            plp         ;restore status
                        
32a2 : ca                       dex
32a3 : ec1c11                   cpx abs7f
                                tst_stat ~fn
32a6 : 08              >            php         ;save status
32a7 : 68              >            pla         ;use stack to retrieve status
32a8 : 48              >            pha
                       >            cmp_flag ~fn
32a9 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32ab : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
32ad : 208553          >        jsr report_error
                       >
32b0 :                 >skip1770
                       >
32b0 : 28              >            plp         ;restore status
                        
32b1 : ca                       dex
32b2 : ec1c11                   cpx abs7f
                                tst_x $7e,~fzc
32b5 : 08              >            php         ;save flags
32b6 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
32b8 : f003            >        beq skip1773
                       >        trap            ;failed not equal (non zero)
32ba : 208553          >        jsr report_error
                       >
32bd :                 >skip1773
                       >
32bd : 68              >            pla         ;load status
32be : 48              >            pha
                       >            cmp_flag ~fzc
32bf : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32c1 : f003            >        beq skip1776
                       >        trap            ;failed not equal (non zero)
32c3 : 208553          >        jsr report_error
                       >
32c6 :                 >skip1776
                       >
32c6 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
32c7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32c9 : 48              >            pha         ;use stack to load status
32ca : a280            >            ldx #$80     ;precharge index x
32cc : 28              >            plp
                        
32cd : e07f                     cpx #$7f
                                tst_stat fc
32cf : 08              >            php         ;save status
32d0 : 68              >            pla         ;use stack to retrieve status
32d1 : 48              >            pha
                       >            cmp_flag fc
32d2 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32d4 : f003            >        beq skip1782
                       >        trap            ;failed not equal (non zero)
32d6 : 208553          >        jsr report_error
                       >
32d9 :                 >skip1782
                       >
32d9 : 28              >            plp         ;restore status
                        
32da : ca                       dex
32db : e07f                     cpx #$7f
                                tst_stat fzc
32dd : 08              >            php         ;save status
32de : 68              >            pla         ;use stack to retrieve status
32df : 48              >            pha
                       >            cmp_flag fzc
32e0 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32e2 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
32e4 : 208553          >        jsr report_error
                       >
32e7 :                 >skip1786
                       >
32e7 : 28              >            plp         ;restore status
                        
32e8 : ca                       dex
32e9 : e07f                     cpx #$7f
                                tst_x $7e,fn
32eb : 08              >            php         ;save flags
32ec : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
32ee : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
32f0 : 208553          >        jsr report_error
                       >
32f3 :                 >skip1789
                       >
32f3 : 68              >            pla         ;load status
32f4 : 48              >            pha
                       >            cmp_flag fn
32f5 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32f7 : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
32f9 : 208553          >        jsr report_error
                       >
32fc :                 >skip1792
                       >
32fc : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
32fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32ff : 48              >            pha         ;use stack to load status
3300 : a280            >            ldx #$80     ;precharge index x
3302 : 28              >            plp
                        
3303 : e07f                     cpx #$7f
                                tst_stat ~fnz
3305 : 08              >            php         ;save status
3306 : 68              >            pla         ;use stack to retrieve status
3307 : 48              >            pha
                       >            cmp_flag ~fnz
3308 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
330a : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
330c : 208553          >        jsr report_error
                       >
330f :                 >skip1798
                       >
330f : 28              >            plp         ;restore status
                        
3310 : ca                       dex
3311 : e07f                     cpx #$7f
                                tst_stat ~fn
3313 : 08              >            php         ;save status
3314 : 68              >            pla         ;use stack to retrieve status
3315 : 48              >            pha
                       >            cmp_flag ~fn
3316 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3318 : f003            >        beq skip1802
                       >        trap            ;failed not equal (non zero)
331a : 208553          >        jsr report_error
                       >
331d :                 >skip1802
                       >
331d : 28              >            plp         ;restore status
                        
331e : ca                       dex
331f : e07f                     cpx #$7f
                                tst_x $7e,~fzc
3321 : 08              >            php         ;save flags
3322 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
3324 : f003            >        beq skip1805
                       >        trap            ;failed not equal (non zero)
3326 : 208553          >        jsr report_error
                       >
3329 :                 >skip1805
                       >
3329 : 68              >            pla         ;load status
332a : 48              >            pha
                       >            cmp_flag ~fzc
332b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
332d : f003            >        beq skip1808
                       >        trap            ;failed not equal (non zero)
332f : 208553          >        jsr report_error
                       >
3332 :                 >skip1808
                       >
3332 : 28              >            plp         ;restore status
                        
                                next_test
3333 : ad0011          >            lda test_case   ;previous test
3336 : c91a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3338 : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
333a : 208553          >        jsr report_error
                       >
333d :                 >skip1811
                       >
001b =                 >test_num = test_num + 1
333d : a91b            >            lda #test_num   ;*** next tests' number
333f : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CPY - zp / abs / #
                                set_y $80,0
                       >            load_flag 0
3342 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3344 : 48              >            pha         ;use stack to load status
3345 : a080            >            ldy #$80     ;precharge index y
3347 : 28              >            plp
                        
3348 : c45f                     cpy zp7f
                                tst_stat fc
334a : 08              >            php         ;save status
334b : 68              >            pla         ;use stack to retrieve status
334c : 48              >            pha
                       >            cmp_flag fc
334d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
334f : f003            >        beq skip1817
                       >        trap            ;failed not equal (non zero)
3351 : 208553          >        jsr report_error
                       >
3354 :                 >skip1817
                       >
3354 : 28              >            plp         ;restore status
                        
3355 : 88                       dey
3356 : c45f                     cpy zp7f
                                tst_stat fzc
3358 : 08              >            php         ;save status
3359 : 68              >            pla         ;use stack to retrieve status
335a : 48              >            pha
                       >            cmp_flag fzc
335b : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
335d : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
335f : 208553          >        jsr report_error
                       >
3362 :                 >skip1821
                       >
3362 : 28              >            plp         ;restore status
                        
3363 : 88                       dey
3364 : c45f                     cpy zp7f
                                tst_y $7e,fn
3366 : 08              >            php         ;save flags
3367 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3369 : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
336b : 208553          >        jsr report_error
                       >
336e :                 >skip1824
                       >
336e : 68              >            pla         ;load status
336f : 48              >            pha
                       >            cmp_flag fn
3370 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3372 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
3374 : 208553          >        jsr report_error
                       >
3377 :                 >skip1827
                       >
3377 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
3378 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
337a : 48              >            pha         ;use stack to load status
337b : a080            >            ldy #$80     ;precharge index y
337d : 28              >            plp
                        
337e : c45f                     cpy zp7f
                                tst_stat ~fnz
3380 : 08              >            php         ;save status
3381 : 68              >            pla         ;use stack to retrieve status
3382 : 48              >            pha
                       >            cmp_flag ~fnz
3383 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3385 : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
3387 : 208553          >        jsr report_error
                       >
338a :                 >skip1833
                       >
338a : 28              >            plp         ;restore status
                        
338b : 88                       dey
338c : c45f                     cpy zp7f
                                tst_stat ~fn
338e : 08              >            php         ;save status
338f : 68              >            pla         ;use stack to retrieve status
3390 : 48              >            pha
                       >            cmp_flag ~fn
3391 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3393 : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
3395 : 208553          >        jsr report_error
                       >
3398 :                 >skip1837
                       >
3398 : 28              >            plp         ;restore status
                        
3399 : 88                       dey
339a : c45f                     cpy zp7f
                                tst_y $7e,~fzc
339c : 08              >            php         ;save flags
339d : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
339f : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
33a1 : 208553          >        jsr report_error
                       >
33a4 :                 >skip1840
                       >
33a4 : 68              >            pla         ;load status
33a5 : 48              >            pha
                       >            cmp_flag ~fzc
33a6 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33a8 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
33aa : 208553          >        jsr report_error
                       >
33ad :                 >skip1843
                       >
33ad : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
33ae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33b0 : 48              >            pha         ;use stack to load status
33b1 : a080            >            ldy #$80     ;precharge index y
33b3 : 28              >            plp
                        
33b4 : cc1c11                   cpy abs7f
                                tst_stat fc
33b7 : 08              >            php         ;save status
33b8 : 68              >            pla         ;use stack to retrieve status
33b9 : 48              >            pha
                       >            cmp_flag fc
33ba : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33bc : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
33be : 208553          >        jsr report_error
                       >
33c1 :                 >skip1849
                       >
33c1 : 28              >            plp         ;restore status
                        
33c2 : 88                       dey
33c3 : cc1c11                   cpy abs7f
                                tst_stat fzc
33c6 : 08              >            php         ;save status
33c7 : 68              >            pla         ;use stack to retrieve status
33c8 : 48              >            pha
                       >            cmp_flag fzc
33c9 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33cb : f003            >        beq skip1853
                       >        trap            ;failed not equal (non zero)
33cd : 208553          >        jsr report_error
                       >
33d0 :                 >skip1853
                       >
33d0 : 28              >            plp         ;restore status
                        
33d1 : 88                       dey
33d2 : cc1c11                   cpy abs7f
                                tst_y $7e,fn
33d5 : 08              >            php         ;save flags
33d6 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
33d8 : f003            >        beq skip1856
                       >        trap            ;failed not equal (non zero)
33da : 208553          >        jsr report_error
                       >
33dd :                 >skip1856
                       >
33dd : 68              >            pla         ;load status
33de : 48              >            pha
                       >            cmp_flag fn
33df : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33e1 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
33e3 : 208553          >        jsr report_error
                       >
33e6 :                 >skip1859
                       >
33e6 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
33e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33e9 : 48              >            pha         ;use stack to load status
33ea : a080            >            ldy #$80     ;precharge index y
33ec : 28              >            plp
                        
33ed : cc1c11                   cpy abs7f
                                tst_stat ~fnz
33f0 : 08              >            php         ;save status
33f1 : 68              >            pla         ;use stack to retrieve status
33f2 : 48              >            pha
                       >            cmp_flag ~fnz
33f3 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33f5 : f003            >        beq skip1865
                       >        trap            ;failed not equal (non zero)
33f7 : 208553          >        jsr report_error
                       >
33fa :                 >skip1865
                       >
33fa : 28              >            plp         ;restore status
                        
33fb : 88                       dey
33fc : cc1c11                   cpy abs7f
                                tst_stat ~fn
33ff : 08              >            php         ;save status
3400 : 68              >            pla         ;use stack to retrieve status
3401 : 48              >            pha
                       >            cmp_flag ~fn
3402 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3404 : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
3406 : 208553          >        jsr report_error
                       >
3409 :                 >skip1869
                       >
3409 : 28              >            plp         ;restore status
                        
340a : 88                       dey
340b : cc1c11                   cpy abs7f
                                tst_y $7e,~fzc
340e : 08              >            php         ;save flags
340f : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3411 : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
3413 : 208553          >        jsr report_error
                       >
3416 :                 >skip1872
                       >
3416 : 68              >            pla         ;load status
3417 : 48              >            pha
                       >            cmp_flag ~fzc
3418 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
341a : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
341c : 208553          >        jsr report_error
                       >
341f :                 >skip1875
                       >
341f : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
3420 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3422 : 48              >            pha         ;use stack to load status
3423 : a080            >            ldy #$80     ;precharge index y
3425 : 28              >            plp
                        
3426 : c07f                     cpy #$7f
                                tst_stat fc
3428 : 08              >            php         ;save status
3429 : 68              >            pla         ;use stack to retrieve status
342a : 48              >            pha
                       >            cmp_flag fc
342b : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
342d : f003            >        beq skip1881
                       >        trap            ;failed not equal (non zero)
342f : 208553          >        jsr report_error
                       >
3432 :                 >skip1881
                       >
3432 : 28              >            plp         ;restore status
                        
3433 : 88                       dey
3434 : c07f                     cpy #$7f
                                tst_stat fzc
3436 : 08              >            php         ;save status
3437 : 68              >            pla         ;use stack to retrieve status
3438 : 48              >            pha
                       >            cmp_flag fzc
3439 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
343b : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
343d : 208553          >        jsr report_error
                       >
3440 :                 >skip1885
                       >
3440 : 28              >            plp         ;restore status
                        
3441 : 88                       dey
3442 : c07f                     cpy #$7f
                                tst_y $7e,fn
3444 : 08              >            php         ;save flags
3445 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3447 : f003            >        beq skip1888
                       >        trap            ;failed not equal (non zero)
3449 : 208553          >        jsr report_error
                       >
344c :                 >skip1888
                       >
344c : 68              >            pla         ;load status
344d : 48              >            pha
                       >            cmp_flag fn
344e : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3450 : f003            >        beq skip1891
                       >        trap            ;failed not equal (non zero)
3452 : 208553          >        jsr report_error
                       >
3455 :                 >skip1891
                       >
3455 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
3456 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3458 : 48              >            pha         ;use stack to load status
3459 : a080            >            ldy #$80     ;precharge index y
345b : 28              >            plp
                        
345c : c07f                     cpy #$7f
                                tst_stat ~fnz
345e : 08              >            php         ;save status
345f : 68              >            pla         ;use stack to retrieve status
3460 : 48              >            pha
                       >            cmp_flag ~fnz
3461 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3463 : f003            >        beq skip1897
                       >        trap            ;failed not equal (non zero)
3465 : 208553          >        jsr report_error
                       >
3468 :                 >skip1897
                       >
3468 : 28              >            plp         ;restore status
                        
3469 : 88                       dey
346a : c07f                     cpy #$7f
                                tst_stat ~fn
346c : 08              >            php         ;save status
346d : 68              >            pla         ;use stack to retrieve status
346e : 48              >            pha
                       >            cmp_flag ~fn
346f : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3471 : f003            >        beq skip1901
                       >        trap            ;failed not equal (non zero)
3473 : 208553          >        jsr report_error
                       >
3476 :                 >skip1901
                       >
3476 : 28              >            plp         ;restore status
                        
3477 : 88                       dey
3478 : c07f                     cpy #$7f
                                tst_y $7e,~fzc
347a : 08              >            php         ;save flags
347b : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
347d : f003            >        beq skip1904
                       >        trap            ;failed not equal (non zero)
347f : 208553          >        jsr report_error
                       >
3482 :                 >skip1904
                       >
3482 : 68              >            pla         ;load status
3483 : 48              >            pha
                       >            cmp_flag ~fzc
3484 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3486 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
3488 : 208553          >        jsr report_error
                       >
348b :                 >skip1907
                       >
348b : 28              >            plp         ;restore status
                        
                                next_test
348c : ad0011          >            lda test_case   ;previous test
348f : c91b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3491 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
3493 : 208553          >        jsr report_error
                       >
3496 :                 >skip1910
                       >
001c =                 >test_num = test_num + 1
3496 : a91c            >            lda #test_num   ;*** next tests' number
3498 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CMP - zp / abs / #
                                set_a $80,0
                       >            load_flag 0
349b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
349d : 48              >            pha         ;use stack to load status
349e : a980            >            lda #$80     ;precharge accu
34a0 : 28              >            plp
                        
34a1 : c55f                     cmp zp7f
                                tst_a $80,fc
34a3 : 08              >            php         ;save flags
34a4 : c980            >            cmp #$80     ;test result
                       >            trap_ne
34a6 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
34a8 : 208553          >        jsr report_error
                       >
34ab :                 >skip1915
                       >
34ab : 68              >            pla         ;load status
34ac : 48              >            pha
                       >            cmp_flag fc
34ad : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34af : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
34b1 : 208553          >        jsr report_error
                       >
34b4 :                 >skip1918
                       >
34b4 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
34b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34b7 : 48              >            pha         ;use stack to load status
34b8 : a97f            >            lda #$7f     ;precharge accu
34ba : 28              >            plp
                        
34bb : c55f                     cmp zp7f
                                tst_a $7f,fzc
34bd : 08              >            php         ;save flags
34be : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
34c0 : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
34c2 : 208553          >        jsr report_error
                       >
34c5 :                 >skip1923
                       >
34c5 : 68              >            pla         ;load status
34c6 : 48              >            pha
                       >            cmp_flag fzc
34c7 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34c9 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
34cb : 208553          >        jsr report_error
                       >
34ce :                 >skip1926
                       >
34ce : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
34cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d1 : 48              >            pha         ;use stack to load status
34d2 : a97e            >            lda #$7e     ;precharge accu
34d4 : 28              >            plp
                        
34d5 : c55f                     cmp zp7f
                                tst_a $7e,fn
34d7 : 08              >            php         ;save flags
34d8 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
34da : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
34dc : 208553          >        jsr report_error
                       >
34df :                 >skip1931
                       >
34df : 68              >            pla         ;load status
34e0 : 48              >            pha
                       >            cmp_flag fn
34e1 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e3 : f003            >        beq skip1934
                       >        trap            ;failed not equal (non zero)
34e5 : 208553          >        jsr report_error
                       >
34e8 :                 >skip1934
                       >
34e8 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
34e9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34eb : 48              >            pha         ;use stack to load status
34ec : a980            >            lda #$80     ;precharge accu
34ee : 28              >            plp
                        
34ef : c55f                     cmp zp7f
                                tst_a $80,~fnz
34f1 : 08              >            php         ;save flags
34f2 : c980            >            cmp #$80     ;test result
                       >            trap_ne
34f4 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
34f6 : 208553          >        jsr report_error
                       >
34f9 :                 >skip1939
                       >
34f9 : 68              >            pla         ;load status
34fa : 48              >            pha
                       >            cmp_flag ~fnz
34fb : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34fd : f003            >        beq skip1942
                       >        trap            ;failed not equal (non zero)
34ff : 208553          >        jsr report_error
                       >
3502 :                 >skip1942
                       >
3502 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3503 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3505 : 48              >            pha         ;use stack to load status
3506 : a97f            >            lda #$7f     ;precharge accu
3508 : 28              >            plp
                        
3509 : c55f                     cmp zp7f
                                tst_a $7f,~fn
350b : 08              >            php         ;save flags
350c : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
350e : f003            >        beq skip1947
                       >        trap            ;failed not equal (non zero)
3510 : 208553          >        jsr report_error
                       >
3513 :                 >skip1947
                       >
3513 : 68              >            pla         ;load status
3514 : 48              >            pha
                       >            cmp_flag ~fn
3515 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3517 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
3519 : 208553          >        jsr report_error
                       >
351c :                 >skip1950
                       >
351c : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
351d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
351f : 48              >            pha         ;use stack to load status
3520 : a97e            >            lda #$7e     ;precharge accu
3522 : 28              >            plp
                        
3523 : c55f                     cmp zp7f
                                tst_a $7e,~fzc
3525 : 08              >            php         ;save flags
3526 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3528 : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
352a : 208553          >        jsr report_error
                       >
352d :                 >skip1955
                       >
352d : 68              >            pla         ;load status
352e : 48              >            pha
                       >            cmp_flag ~fzc
352f : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3531 : f003            >        beq skip1958
                       >        trap            ;failed not equal (non zero)
3533 : 208553          >        jsr report_error
                       >
3536 :                 >skip1958
                       >
3536 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
3537 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3539 : 48              >            pha         ;use stack to load status
353a : a980            >            lda #$80     ;precharge accu
353c : 28              >            plp
                        
353d : cd1c11                   cmp abs7f
                                tst_a $80,fc
3540 : 08              >            php         ;save flags
3541 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3543 : f003            >        beq skip1963
                       >        trap            ;failed not equal (non zero)
3545 : 208553          >        jsr report_error
                       >
3548 :                 >skip1963
                       >
3548 : 68              >            pla         ;load status
3549 : 48              >            pha
                       >            cmp_flag fc
354a : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
354c : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
354e : 208553          >        jsr report_error
                       >
3551 :                 >skip1966
                       >
3551 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3552 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3554 : 48              >            pha         ;use stack to load status
3555 : a97f            >            lda #$7f     ;precharge accu
3557 : 28              >            plp
                        
3558 : cd1c11                   cmp abs7f
                                tst_a $7f,fzc
355b : 08              >            php         ;save flags
355c : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
355e : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
3560 : 208553          >        jsr report_error
                       >
3563 :                 >skip1971
                       >
3563 : 68              >            pla         ;load status
3564 : 48              >            pha
                       >            cmp_flag fzc
3565 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3567 : f003            >        beq skip1974
                       >        trap            ;failed not equal (non zero)
3569 : 208553          >        jsr report_error
                       >
356c :                 >skip1974
                       >
356c : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
356d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
356f : 48              >            pha         ;use stack to load status
3570 : a97e            >            lda #$7e     ;precharge accu
3572 : 28              >            plp
                        
3573 : cd1c11                   cmp abs7f
                                tst_a $7e,fn
3576 : 08              >            php         ;save flags
3577 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3579 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
357b : 208553          >        jsr report_error
                       >
357e :                 >skip1979
                       >
357e : 68              >            pla         ;load status
357f : 48              >            pha
                       >            cmp_flag fn
3580 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3582 : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
3584 : 208553          >        jsr report_error
                       >
3587 :                 >skip1982
                       >
3587 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3588 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
358a : 48              >            pha         ;use stack to load status
358b : a980            >            lda #$80     ;precharge accu
358d : 28              >            plp
                        
358e : cd1c11                   cmp abs7f
                                tst_a $80,~fnz
3591 : 08              >            php         ;save flags
3592 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3594 : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
3596 : 208553          >        jsr report_error
                       >
3599 :                 >skip1987
                       >
3599 : 68              >            pla         ;load status
359a : 48              >            pha
                       >            cmp_flag ~fnz
359b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
359d : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
359f : 208553          >        jsr report_error
                       >
35a2 :                 >skip1990
                       >
35a2 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
35a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35a5 : 48              >            pha         ;use stack to load status
35a6 : a97f            >            lda #$7f     ;precharge accu
35a8 : 28              >            plp
                        
35a9 : cd1c11                   cmp abs7f
                                tst_a $7f,~fn
35ac : 08              >            php         ;save flags
35ad : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
35af : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
35b1 : 208553          >        jsr report_error
                       >
35b4 :                 >skip1995
                       >
35b4 : 68              >            pla         ;load status
35b5 : 48              >            pha
                       >            cmp_flag ~fn
35b6 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35b8 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
35ba : 208553          >        jsr report_error
                       >
35bd :                 >skip1998
                       >
35bd : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
35be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35c0 : 48              >            pha         ;use stack to load status
35c1 : a97e            >            lda #$7e     ;precharge accu
35c3 : 28              >            plp
                        
35c4 : cd1c11                   cmp abs7f
                                tst_a $7e,~fzc
35c7 : 08              >            php         ;save flags
35c8 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
35ca : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
35cc : 208553          >        jsr report_error
                       >
35cf :                 >skip2003
                       >
35cf : 68              >            pla         ;load status
35d0 : 48              >            pha
                       >            cmp_flag ~fzc
35d1 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35d3 : f003            >        beq skip2006
                       >        trap            ;failed not equal (non zero)
35d5 : 208553          >        jsr report_error
                       >
35d8 :                 >skip2006
                       >
35d8 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
35d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35db : 48              >            pha         ;use stack to load status
35dc : a980            >            lda #$80     ;precharge accu
35de : 28              >            plp
                        
35df : c97f                     cmp #$7f
                                tst_a $80,fc
35e1 : 08              >            php         ;save flags
35e2 : c980            >            cmp #$80     ;test result
                       >            trap_ne
35e4 : f003            >        beq skip2011
                       >        trap            ;failed not equal (non zero)
35e6 : 208553          >        jsr report_error
                       >
35e9 :                 >skip2011
                       >
35e9 : 68              >            pla         ;load status
35ea : 48              >            pha
                       >            cmp_flag fc
35eb : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35ed : f003            >        beq skip2014
                       >        trap            ;failed not equal (non zero)
35ef : 208553          >        jsr report_error
                       >
35f2 :                 >skip2014
                       >
35f2 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
35f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35f5 : 48              >            pha         ;use stack to load status
35f6 : a97f            >            lda #$7f     ;precharge accu
35f8 : 28              >            plp
                        
35f9 : c97f                     cmp #$7f
                                tst_a $7f,fzc
35fb : 08              >            php         ;save flags
35fc : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
35fe : f003            >        beq skip2019
                       >        trap            ;failed not equal (non zero)
3600 : 208553          >        jsr report_error
                       >
3603 :                 >skip2019
                       >
3603 : 68              >            pla         ;load status
3604 : 48              >            pha
                       >            cmp_flag fzc
3605 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3607 : f003            >        beq skip2022
                       >        trap            ;failed not equal (non zero)
3609 : 208553          >        jsr report_error
                       >
360c :                 >skip2022
                       >
360c : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
360d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
360f : 48              >            pha         ;use stack to load status
3610 : a97e            >            lda #$7e     ;precharge accu
3612 : 28              >            plp
                        
3613 : c97f                     cmp #$7f
                                tst_a $7e,fn
3615 : 08              >            php         ;save flags
3616 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3618 : f003            >        beq skip2027
                       >        trap            ;failed not equal (non zero)
361a : 208553          >        jsr report_error
                       >
361d :                 >skip2027
                       >
361d : 68              >            pla         ;load status
361e : 48              >            pha
                       >            cmp_flag fn
361f : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3621 : f003            >        beq skip2030
                       >        trap            ;failed not equal (non zero)
3623 : 208553          >        jsr report_error
                       >
3626 :                 >skip2030
                       >
3626 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3627 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3629 : 48              >            pha         ;use stack to load status
362a : a980            >            lda #$80     ;precharge accu
362c : 28              >            plp
                        
362d : c97f                     cmp #$7f
                                tst_a $80,~fnz
362f : 08              >            php         ;save flags
3630 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3632 : f003            >        beq skip2035
                       >        trap            ;failed not equal (non zero)
3634 : 208553          >        jsr report_error
                       >
3637 :                 >skip2035
                       >
3637 : 68              >            pla         ;load status
3638 : 48              >            pha
                       >            cmp_flag ~fnz
3639 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
363b : f003            >        beq skip2038
                       >        trap            ;failed not equal (non zero)
363d : 208553          >        jsr report_error
                       >
3640 :                 >skip2038
                       >
3640 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3641 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3643 : 48              >            pha         ;use stack to load status
3644 : a97f            >            lda #$7f     ;precharge accu
3646 : 28              >            plp
                        
3647 : c97f                     cmp #$7f
                                tst_a $7f,~fn
3649 : 08              >            php         ;save flags
364a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
364c : f003            >        beq skip2043
                       >        trap            ;failed not equal (non zero)
364e : 208553          >        jsr report_error
                       >
3651 :                 >skip2043
                       >
3651 : 68              >            pla         ;load status
3652 : 48              >            pha
                       >            cmp_flag ~fn
3653 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3655 : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
3657 : 208553          >        jsr report_error
                       >
365a :                 >skip2046
                       >
365a : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
365b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
365d : 48              >            pha         ;use stack to load status
365e : a97e            >            lda #$7e     ;precharge accu
3660 : 28              >            plp
                        
3661 : c97f                     cmp #$7f
                                tst_a $7e,~fzc
3663 : 08              >            php         ;save flags
3664 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3666 : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
3668 : 208553          >        jsr report_error
                       >
366b :                 >skip2051
                       >
366b : 68              >            pla         ;load status
366c : 48              >            pha
                       >            cmp_flag ~fzc
366d : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
366f : f003            >        beq skip2054
                       >        trap            ;failed not equal (non zero)
3671 : 208553          >        jsr report_error
                       >
3674 :                 >skip2054
                       >
3674 : 28              >            plp         ;restore status
                        
                        
3675 : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
3677 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3679 : 48              >            pha         ;use stack to load status
367a : a980            >            lda #$80     ;precharge accu
367c : 28              >            plp
                        
367d : d55b                     cmp zp1,x
                                tst_a $80,fc
367f : 08              >            php         ;save flags
3680 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3682 : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
3684 : 208553          >        jsr report_error
                       >
3687 :                 >skip2059
                       >
3687 : 68              >            pla         ;load status
3688 : 48              >            pha
                       >            cmp_flag fc
3689 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
368b : f003            >        beq skip2062
                       >        trap            ;failed not equal (non zero)
368d : 208553          >        jsr report_error
                       >
3690 :                 >skip2062
                       >
3690 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3691 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3693 : 48              >            pha         ;use stack to load status
3694 : a97f            >            lda #$7f     ;precharge accu
3696 : 28              >            plp
                        
3697 : d55b                     cmp zp1,x
                                tst_a $7f,fzc
3699 : 08              >            php         ;save flags
369a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
369c : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
369e : 208553          >        jsr report_error
                       >
36a1 :                 >skip2067
                       >
36a1 : 68              >            pla         ;load status
36a2 : 48              >            pha
                       >            cmp_flag fzc
36a3 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36a5 : f003            >        beq skip2070
                       >        trap            ;failed not equal (non zero)
36a7 : 208553          >        jsr report_error
                       >
36aa :                 >skip2070
                       >
36aa : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
36ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36ad : 48              >            pha         ;use stack to load status
36ae : a97e            >            lda #$7e     ;precharge accu
36b0 : 28              >            plp
                        
36b1 : d55b                     cmp zp1,x
                                tst_a $7e,fn
36b3 : 08              >            php         ;save flags
36b4 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
36b6 : f003            >        beq skip2075
                       >        trap            ;failed not equal (non zero)
36b8 : 208553          >        jsr report_error
                       >
36bb :                 >skip2075
                       >
36bb : 68              >            pla         ;load status
36bc : 48              >            pha
                       >            cmp_flag fn
36bd : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36bf : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
36c1 : 208553          >        jsr report_error
                       >
36c4 :                 >skip2078
                       >
36c4 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
36c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36c7 : 48              >            pha         ;use stack to load status
36c8 : a980            >            lda #$80     ;precharge accu
36ca : 28              >            plp
                        
36cb : d55b                     cmp zp1,x
                                tst_a $80,~fnz
36cd : 08              >            php         ;save flags
36ce : c980            >            cmp #$80     ;test result
                       >            trap_ne
36d0 : f003            >        beq skip2083
                       >        trap            ;failed not equal (non zero)
36d2 : 208553          >        jsr report_error
                       >
36d5 :                 >skip2083
                       >
36d5 : 68              >            pla         ;load status
36d6 : 48              >            pha
                       >            cmp_flag ~fnz
36d7 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36d9 : f003            >        beq skip2086
                       >        trap            ;failed not equal (non zero)
36db : 208553          >        jsr report_error
                       >
36de :                 >skip2086
                       >
36de : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
36df : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36e1 : 48              >            pha         ;use stack to load status
36e2 : a97f            >            lda #$7f     ;precharge accu
36e4 : 28              >            plp
                        
36e5 : d55b                     cmp zp1,x
                                tst_a $7f,~fn
36e7 : 08              >            php         ;save flags
36e8 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
36ea : f003            >        beq skip2091
                       >        trap            ;failed not equal (non zero)
36ec : 208553          >        jsr report_error
                       >
36ef :                 >skip2091
                       >
36ef : 68              >            pla         ;load status
36f0 : 48              >            pha
                       >            cmp_flag ~fn
36f1 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36f3 : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
36f5 : 208553          >        jsr report_error
                       >
36f8 :                 >skip2094
                       >
36f8 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
36f9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36fb : 48              >            pha         ;use stack to load status
36fc : a97e            >            lda #$7e     ;precharge accu
36fe : 28              >            plp
                        
36ff : d55b                     cmp zp1,x
                                tst_a $7e,~fzc
3701 : 08              >            php         ;save flags
3702 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3704 : f003            >        beq skip2099
                       >        trap            ;failed not equal (non zero)
3706 : 208553          >        jsr report_error
                       >
3709 :                 >skip2099
                       >
3709 : 68              >            pla         ;load status
370a : 48              >            pha
                       >            cmp_flag ~fzc
370b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
370d : f003            >        beq skip2102
                       >        trap            ;failed not equal (non zero)
370f : 208553          >        jsr report_error
                       >
3712 :                 >skip2102
                       >
3712 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
3713 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3715 : 48              >            pha         ;use stack to load status
3716 : a980            >            lda #$80     ;precharge accu
3718 : 28              >            plp
                        
3719 : dd1811                   cmp abs1,x
                                tst_a $80,fc
371c : 08              >            php         ;save flags
371d : c980            >            cmp #$80     ;test result
                       >            trap_ne
371f : f003            >        beq skip2107
                       >        trap            ;failed not equal (non zero)
3721 : 208553          >        jsr report_error
                       >
3724 :                 >skip2107
                       >
3724 : 68              >            pla         ;load status
3725 : 48              >            pha
                       >            cmp_flag fc
3726 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3728 : f003            >        beq skip2110
                       >        trap            ;failed not equal (non zero)
372a : 208553          >        jsr report_error
                       >
372d :                 >skip2110
                       >
372d : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
372e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3730 : 48              >            pha         ;use stack to load status
3731 : a97f            >            lda #$7f     ;precharge accu
3733 : 28              >            plp
                        
3734 : dd1811                   cmp abs1,x
                                tst_a $7f,fzc
3737 : 08              >            php         ;save flags
3738 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
373a : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
373c : 208553          >        jsr report_error
                       >
373f :                 >skip2115
                       >
373f : 68              >            pla         ;load status
3740 : 48              >            pha
                       >            cmp_flag fzc
3741 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3743 : f003            >        beq skip2118
                       >        trap            ;failed not equal (non zero)
3745 : 208553          >        jsr report_error
                       >
3748 :                 >skip2118
                       >
3748 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3749 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
374b : 48              >            pha         ;use stack to load status
374c : a97e            >            lda #$7e     ;precharge accu
374e : 28              >            plp
                        
374f : dd1811                   cmp abs1,x
                                tst_a $7e,fn
3752 : 08              >            php         ;save flags
3753 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3755 : f003            >        beq skip2123
                       >        trap            ;failed not equal (non zero)
3757 : 208553          >        jsr report_error
                       >
375a :                 >skip2123
                       >
375a : 68              >            pla         ;load status
375b : 48              >            pha
                       >            cmp_flag fn
375c : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
375e : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
3760 : 208553          >        jsr report_error
                       >
3763 :                 >skip2126
                       >
3763 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3764 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3766 : 48              >            pha         ;use stack to load status
3767 : a980            >            lda #$80     ;precharge accu
3769 : 28              >            plp
                        
376a : dd1811                   cmp abs1,x
                                tst_a $80,~fnz
376d : 08              >            php         ;save flags
376e : c980            >            cmp #$80     ;test result
                       >            trap_ne
3770 : f003            >        beq skip2131
                       >        trap            ;failed not equal (non zero)
3772 : 208553          >        jsr report_error
                       >
3775 :                 >skip2131
                       >
3775 : 68              >            pla         ;load status
3776 : 48              >            pha
                       >            cmp_flag ~fnz
3777 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3779 : f003            >        beq skip2134
                       >        trap            ;failed not equal (non zero)
377b : 208553          >        jsr report_error
                       >
377e :                 >skip2134
                       >
377e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
377f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3781 : 48              >            pha         ;use stack to load status
3782 : a97f            >            lda #$7f     ;precharge accu
3784 : 28              >            plp
                        
3785 : dd1811                   cmp abs1,x
                                tst_a $7f,~fn
3788 : 08              >            php         ;save flags
3789 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
378b : f003            >        beq skip2139
                       >        trap            ;failed not equal (non zero)
378d : 208553          >        jsr report_error
                       >
3790 :                 >skip2139
                       >
3790 : 68              >            pla         ;load status
3791 : 48              >            pha
                       >            cmp_flag ~fn
3792 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3794 : f003            >        beq skip2142
                       >        trap            ;failed not equal (non zero)
3796 : 208553          >        jsr report_error
                       >
3799 :                 >skip2142
                       >
3799 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
379a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
379c : 48              >            pha         ;use stack to load status
379d : a97e            >            lda #$7e     ;precharge accu
379f : 28              >            plp
                        
37a0 : dd1811                   cmp abs1,x
                                tst_a $7e,~fzc
37a3 : 08              >            php         ;save flags
37a4 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
37a6 : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
37a8 : 208553          >        jsr report_error
                       >
37ab :                 >skip2147
                       >
37ab : 68              >            pla         ;load status
37ac : 48              >            pha
                       >            cmp_flag ~fzc
37ad : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37af : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
37b1 : 208553          >        jsr report_error
                       >
37b4 :                 >skip2150
                       >
37b4 : 28              >            plp         ;restore status
                        
                        
37b5 : a004                     ldy #4          ;with indexing by Y
37b7 : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
37b9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37bb : 48              >            pha         ;use stack to load status
37bc : a980            >            lda #$80     ;precharge accu
37be : 28              >            plp
                        
37bf : d91811                   cmp abs1,y
                                tst_a $80,fc
37c2 : 08              >            php         ;save flags
37c3 : c980            >            cmp #$80     ;test result
                       >            trap_ne
37c5 : f003            >        beq skip2155
                       >        trap            ;failed not equal (non zero)
37c7 : 208553          >        jsr report_error
                       >
37ca :                 >skip2155
                       >
37ca : 68              >            pla         ;load status
37cb : 48              >            pha
                       >            cmp_flag fc
37cc : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37ce : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
37d0 : 208553          >        jsr report_error
                       >
37d3 :                 >skip2158
                       >
37d3 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
37d4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37d6 : 48              >            pha         ;use stack to load status
37d7 : a97f            >            lda #$7f     ;precharge accu
37d9 : 28              >            plp
                        
37da : d91811                   cmp abs1,y
                                tst_a $7f,fzc
37dd : 08              >            php         ;save flags
37de : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
37e0 : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
37e2 : 208553          >        jsr report_error
                       >
37e5 :                 >skip2163
                       >
37e5 : 68              >            pla         ;load status
37e6 : 48              >            pha
                       >            cmp_flag fzc
37e7 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37e9 : f003            >        beq skip2166
                       >        trap            ;failed not equal (non zero)
37eb : 208553          >        jsr report_error
                       >
37ee :                 >skip2166
                       >
37ee : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
37ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37f1 : 48              >            pha         ;use stack to load status
37f2 : a97e            >            lda #$7e     ;precharge accu
37f4 : 28              >            plp
                        
37f5 : d91811                   cmp abs1,y
                                tst_a $7e,fn
37f8 : 08              >            php         ;save flags
37f9 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
37fb : f003            >        beq skip2171
                       >        trap            ;failed not equal (non zero)
37fd : 208553          >        jsr report_error
                       >
3800 :                 >skip2171
                       >
3800 : 68              >            pla         ;load status
3801 : 48              >            pha
                       >            cmp_flag fn
3802 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3804 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
3806 : 208553          >        jsr report_error
                       >
3809 :                 >skip2174
                       >
3809 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
380a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
380c : 48              >            pha         ;use stack to load status
380d : a980            >            lda #$80     ;precharge accu
380f : 28              >            plp
                        
3810 : d91811                   cmp abs1,y
                                tst_a $80,~fnz
3813 : 08              >            php         ;save flags
3814 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3816 : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
3818 : 208553          >        jsr report_error
                       >
381b :                 >skip2179
                       >
381b : 68              >            pla         ;load status
381c : 48              >            pha
                       >            cmp_flag ~fnz
381d : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
381f : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
3821 : 208553          >        jsr report_error
                       >
3824 :                 >skip2182
                       >
3824 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3825 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3827 : 48              >            pha         ;use stack to load status
3828 : a97f            >            lda #$7f     ;precharge accu
382a : 28              >            plp
                        
382b : d91811                   cmp abs1,y
                                tst_a $7f,~fn
382e : 08              >            php         ;save flags
382f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3831 : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
3833 : 208553          >        jsr report_error
                       >
3836 :                 >skip2187
                       >
3836 : 68              >            pla         ;load status
3837 : 48              >            pha
                       >            cmp_flag ~fn
3838 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
383a : f003            >        beq skip2190
                       >        trap            ;failed not equal (non zero)
383c : 208553          >        jsr report_error
                       >
383f :                 >skip2190
                       >
383f : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3840 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3842 : 48              >            pha         ;use stack to load status
3843 : a97e            >            lda #$7e     ;precharge accu
3845 : 28              >            plp
                        
3846 : d91811                   cmp abs1,y
                                tst_a $7e,~fzc
3849 : 08              >            php         ;save flags
384a : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
384c : f003            >        beq skip2195
                       >        trap            ;failed not equal (non zero)
384e : 208553          >        jsr report_error
                       >
3851 :                 >skip2195
                       >
3851 : 68              >            pla         ;load status
3852 : 48              >            pha
                       >            cmp_flag ~fzc
3853 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3855 : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
3857 : 208553          >        jsr report_error
                       >
385a :                 >skip2198
                       >
385a : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
385b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
385d : 48              >            pha         ;use stack to load status
385e : a980            >            lda #$80     ;precharge accu
3860 : 28              >            plp
                        
3861 : c16c                     cmp (ind1,x)
                                tst_a $80,fc
3863 : 08              >            php         ;save flags
3864 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3866 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
3868 : 208553          >        jsr report_error
                       >
386b :                 >skip2203
                       >
386b : 68              >            pla         ;load status
386c : 48              >            pha
                       >            cmp_flag fc
386d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
386f : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
3871 : 208553          >        jsr report_error
                       >
3874 :                 >skip2206
                       >
3874 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3875 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3877 : 48              >            pha         ;use stack to load status
3878 : a97f            >            lda #$7f     ;precharge accu
387a : 28              >            plp
                        
387b : c16c                     cmp (ind1,x)
                                tst_a $7f,fzc
387d : 08              >            php         ;save flags
387e : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3880 : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
3882 : 208553          >        jsr report_error
                       >
3885 :                 >skip2211
                       >
3885 : 68              >            pla         ;load status
3886 : 48              >            pha
                       >            cmp_flag fzc
3887 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3889 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
388b : 208553          >        jsr report_error
                       >
388e :                 >skip2214
                       >
388e : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
388f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3891 : 48              >            pha         ;use stack to load status
3892 : a97e            >            lda #$7e     ;precharge accu
3894 : 28              >            plp
                        
3895 : c16c                     cmp (ind1,x)
                                tst_a $7e,fn
3897 : 08              >            php         ;save flags
3898 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
389a : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
389c : 208553          >        jsr report_error
                       >
389f :                 >skip2219
                       >
389f : 68              >            pla         ;load status
38a0 : 48              >            pha
                       >            cmp_flag fn
38a1 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38a3 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
38a5 : 208553          >        jsr report_error
                       >
38a8 :                 >skip2222
                       >
38a8 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
38a9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38ab : 48              >            pha         ;use stack to load status
38ac : a980            >            lda #$80     ;precharge accu
38ae : 28              >            plp
                        
38af : c16c                     cmp (ind1,x)
                                tst_a $80,~fnz
38b1 : 08              >            php         ;save flags
38b2 : c980            >            cmp #$80     ;test result
                       >            trap_ne
38b4 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
38b6 : 208553          >        jsr report_error
                       >
38b9 :                 >skip2227
                       >
38b9 : 68              >            pla         ;load status
38ba : 48              >            pha
                       >            cmp_flag ~fnz
38bb : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38bd : f003            >        beq skip2230
                       >        trap            ;failed not equal (non zero)
38bf : 208553          >        jsr report_error
                       >
38c2 :                 >skip2230
                       >
38c2 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
38c3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38c5 : 48              >            pha         ;use stack to load status
38c6 : a97f            >            lda #$7f     ;precharge accu
38c8 : 28              >            plp
                        
38c9 : c16c                     cmp (ind1,x)
                                tst_a $7f,~fn
38cb : 08              >            php         ;save flags
38cc : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
38ce : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
38d0 : 208553          >        jsr report_error
                       >
38d3 :                 >skip2235
                       >
38d3 : 68              >            pla         ;load status
38d4 : 48              >            pha
                       >            cmp_flag ~fn
38d5 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38d7 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
38d9 : 208553          >        jsr report_error
                       >
38dc :                 >skip2238
                       >
38dc : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
38dd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38df : 48              >            pha         ;use stack to load status
38e0 : a97e            >            lda #$7e     ;precharge accu
38e2 : 28              >            plp
                        
38e3 : c16c                     cmp (ind1,x)
                                tst_a $7e,~fzc
38e5 : 08              >            php         ;save flags
38e6 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
38e8 : f003            >        beq skip2243
                       >        trap            ;failed not equal (non zero)
38ea : 208553          >        jsr report_error
                       >
38ed :                 >skip2243
                       >
38ed : 68              >            pla         ;load status
38ee : 48              >            pha
                       >            cmp_flag ~fzc
38ef : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38f1 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
38f3 : 208553          >        jsr report_error
                       >
38f6 :                 >skip2246
                       >
38f6 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
38f7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38f9 : 48              >            pha         ;use stack to load status
38fa : a980            >            lda #$80     ;precharge accu
38fc : 28              >            plp
                        
38fd : d16c                     cmp (ind1),y
                                tst_a $80,fc
38ff : 08              >            php         ;save flags
3900 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3902 : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
3904 : 208553          >        jsr report_error
                       >
3907 :                 >skip2251
                       >
3907 : 68              >            pla         ;load status
3908 : 48              >            pha
                       >            cmp_flag fc
3909 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
390b : f003            >        beq skip2254
                       >        trap            ;failed not equal (non zero)
390d : 208553          >        jsr report_error
                       >
3910 :                 >skip2254
                       >
3910 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3911 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3913 : 48              >            pha         ;use stack to load status
3914 : a97f            >            lda #$7f     ;precharge accu
3916 : 28              >            plp
                        
3917 : d16c                     cmp (ind1),y
                                tst_a $7f,fzc
3919 : 08              >            php         ;save flags
391a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
391c : f003            >        beq skip2259
                       >        trap            ;failed not equal (non zero)
391e : 208553          >        jsr report_error
                       >
3921 :                 >skip2259
                       >
3921 : 68              >            pla         ;load status
3922 : 48              >            pha
                       >            cmp_flag fzc
3923 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3925 : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
3927 : 208553          >        jsr report_error
                       >
392a :                 >skip2262
                       >
392a : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
392b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
392d : 48              >            pha         ;use stack to load status
392e : a97e            >            lda #$7e     ;precharge accu
3930 : 28              >            plp
                        
3931 : d16c                     cmp (ind1),y
                                tst_a $7e,fn
3933 : 08              >            php         ;save flags
3934 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3936 : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
3938 : 208553          >        jsr report_error
                       >
393b :                 >skip2267
                       >
393b : 68              >            pla         ;load status
393c : 48              >            pha
                       >            cmp_flag fn
393d : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
393f : f003            >        beq skip2270
                       >        trap            ;failed not equal (non zero)
3941 : 208553          >        jsr report_error
                       >
3944 :                 >skip2270
                       >
3944 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3945 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3947 : 48              >            pha         ;use stack to load status
3948 : a980            >            lda #$80     ;precharge accu
394a : 28              >            plp
                        
394b : d16c                     cmp (ind1),y
                                tst_a $80,~fnz
394d : 08              >            php         ;save flags
394e : c980            >            cmp #$80     ;test result
                       >            trap_ne
3950 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
3952 : 208553          >        jsr report_error
                       >
3955 :                 >skip2275
                       >
3955 : 68              >            pla         ;load status
3956 : 48              >            pha
                       >            cmp_flag ~fnz
3957 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3959 : f003            >        beq skip2278
                       >        trap            ;failed not equal (non zero)
395b : 208553          >        jsr report_error
                       >
395e :                 >skip2278
                       >
395e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
395f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3961 : 48              >            pha         ;use stack to load status
3962 : a97f            >            lda #$7f     ;precharge accu
3964 : 28              >            plp
                        
3965 : d16c                     cmp (ind1),y
                                tst_a $7f,~fn
3967 : 08              >            php         ;save flags
3968 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
396a : f003            >        beq skip2283
                       >        trap            ;failed not equal (non zero)
396c : 208553          >        jsr report_error
                       >
396f :                 >skip2283
                       >
396f : 68              >            pla         ;load status
3970 : 48              >            pha
                       >            cmp_flag ~fn
3971 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3973 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
3975 : 208553          >        jsr report_error
                       >
3978 :                 >skip2286
                       >
3978 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3979 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
397b : 48              >            pha         ;use stack to load status
397c : a97e            >            lda #$7e     ;precharge accu
397e : 28              >            plp
                        
397f : d16c                     cmp (ind1),y
                                tst_a $7e,~fzc
3981 : 08              >            php         ;save flags
3982 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3984 : f003            >        beq skip2291
                       >        trap            ;failed not equal (non zero)
3986 : 208553          >        jsr report_error
                       >
3989 :                 >skip2291
                       >
3989 : 68              >            pla         ;load status
398a : 48              >            pha
                       >            cmp_flag ~fzc
398b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
398d : f003            >        beq skip2294
                       >        trap            ;failed not equal (non zero)
398f : 208553          >        jsr report_error
                       >
3992 :                 >skip2294
                       >
3992 : 28              >            plp         ;restore status
                        
                                next_test
3993 : ad0011          >            lda test_case   ;previous test
3996 : c91c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3998 : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
399a : 208553          >        jsr report_error
                       >
399d :                 >skip2297
                       >
001d =                 >test_num = test_num + 1
399d : a91d            >            lda #test_num   ;*** next tests' number
399f : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing modes
                        ; shifts - accumulator
39a2 : a205                     ldx #5
39a4 :                  tasl
                                set_ax zps,0
                       >            load_flag 0
39a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39a6 : 48              >            pha         ;use stack to load status
39a7 : b559            >            lda zps,x    ;precharge accu
39a9 : 28              >            plp
                        
39aa : 0a                       asl a
                                tst_ax rASL,fASL,0
39ab : 08              >            php         ;save flags
39ac : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
39af : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
39b1 : 208553          >        jsr report_error
                       >
39b4 :                 >skip2302
                       >
39b4 : 68              >            pla         ;load status
                       >            eor_flag 0
39b5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
39b7 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
39ba : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
39bc : 208553          >        jsr report_error
                       >
39bf :                 >skip2305
                       >
                        
39bf : ca                       dex
39c0 : 10e2                     bpl tasl
39c2 : a205                     ldx #5
39c4 :                  tasl1
                                set_ax zps,$ff
                       >            load_flag $ff
39c4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39c6 : 48              >            pha         ;use stack to load status
39c7 : b559            >            lda zps,x    ;precharge accu
39c9 : 28              >            plp
                        
39ca : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
39cb : 08              >            php         ;save flags
39cc : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
39cf : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
39d1 : 208553          >        jsr report_error
                       >
39d4 :                 >skip2310
                       >
39d4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
39d5 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
39d7 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
39da : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
39dc : 208553          >        jsr report_error
                       >
39df :                 >skip2313
                       >
                        
39df : ca                       dex
39e0 : 10e2                     bpl tasl1
                        
39e2 : a205                     ldx #5
39e4 :                  tlsr
                                set_ax zps,0
                       >            load_flag 0
39e4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39e6 : 48              >            pha         ;use stack to load status
39e7 : b559            >            lda zps,x    ;precharge accu
39e9 : 28              >            plp
                        
39ea : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
39eb : 08              >            php         ;save flags
39ec : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
39ef : f003            >        beq skip2318
                       >        trap            ;failed not equal (non zero)
39f1 : 208553          >        jsr report_error
                       >
39f4 :                 >skip2318
                       >
39f4 : 68              >            pla         ;load status
                       >            eor_flag 0
39f5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
39f7 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
39fa : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
39fc : 208553          >        jsr report_error
                       >
39ff :                 >skip2321
                       >
                        
39ff : ca                       dex
3a00 : 10e2                     bpl tlsr
3a02 : a205                     ldx #5
3a04 :                  tlsr1
                                set_ax zps,$ff
                       >            load_flag $ff
3a04 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a06 : 48              >            pha         ;use stack to load status
3a07 : b559            >            lda zps,x    ;precharge accu
3a09 : 28              >            plp
                        
3a0a : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
3a0b : 08              >            php         ;save flags
3a0c : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3a0f : f003            >        beq skip2326
                       >        trap            ;failed not equal (non zero)
3a11 : 208553          >        jsr report_error
                       >
3a14 :                 >skip2326
                       >
3a14 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3a15 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3a17 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
3a1a : f003            >        beq skip2329
                       >        trap            ;failed not equal (non zero)
3a1c : 208553          >        jsr report_error
                       >
3a1f :                 >skip2329
                       >
                        
3a1f : ca                       dex
3a20 : 10e2                     bpl tlsr1
                        
3a22 : a205                     ldx #5
3a24 :                  trol
                                set_ax zps,0
                       >            load_flag 0
3a24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a26 : 48              >            pha         ;use stack to load status
3a27 : b559            >            lda zps,x    ;precharge accu
3a29 : 28              >            plp
                        
3a2a : 2a                       rol a
                                tst_ax rROL,fROL,0
3a2b : 08              >            php         ;save flags
3a2c : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3a2f : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
3a31 : 208553          >        jsr report_error
                       >
3a34 :                 >skip2334
                       >
3a34 : 68              >            pla         ;load status
                       >            eor_flag 0
3a35 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a37 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
3a3a : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
3a3c : 208553          >        jsr report_error
                       >
3a3f :                 >skip2337
                       >
                        
3a3f : ca                       dex
3a40 : 10e2                     bpl trol
3a42 : a205                     ldx #5
3a44 :                  trol1
                                set_ax zps,$ff-fc
                       >            load_flag $ff-fc
3a44 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3a46 : 48              >            pha         ;use stack to load status
3a47 : b559            >            lda zps,x    ;precharge accu
3a49 : 28              >            plp
                        
3a4a : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
3a4b : 08              >            php         ;save flags
3a4c : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3a4f : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
3a51 : 208553          >        jsr report_error
                       >
3a54 :                 >skip2342
                       >
3a54 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3a55 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3a57 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
3a5a : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
3a5c : 208553          >        jsr report_error
                       >
3a5f :                 >skip2345
                       >
                        
3a5f : ca                       dex
3a60 : 10e2                     bpl trol1
                        
3a62 : a205                     ldx #5
3a64 :                  trolc
                                set_ax zps,fc
                       >            load_flag fc
3a64 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3a66 : 48              >            pha         ;use stack to load status
3a67 : b559            >            lda zps,x    ;precharge accu
3a69 : 28              >            plp
                        
3a6a : 2a                       rol a
                                tst_ax rROLc,fROLc,0
3a6b : 08              >            php         ;save flags
3a6c : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3a6f : f003            >        beq skip2350
                       >        trap            ;failed not equal (non zero)
3a71 : 208553          >        jsr report_error
                       >
3a74 :                 >skip2350
                       >
3a74 : 68              >            pla         ;load status
                       >            eor_flag 0
3a75 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a77 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
3a7a : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
3a7c : 208553          >        jsr report_error
                       >
3a7f :                 >skip2353
                       >
                        
3a7f : ca                       dex
3a80 : 10e2                     bpl trolc
3a82 : a205                     ldx #5
3a84 :                  trolc1
                                set_ax zps,$ff
                       >            load_flag $ff
3a84 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a86 : 48              >            pha         ;use stack to load status
3a87 : b559            >            lda zps,x    ;precharge accu
3a89 : 28              >            plp
                        
3a8a : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
3a8b : 08              >            php         ;save flags
3a8c : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3a8f : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
3a91 : 208553          >        jsr report_error
                       >
3a94 :                 >skip2358
                       >
3a94 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3a95 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3a97 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
3a9a : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
3a9c : 208553          >        jsr report_error
                       >
3a9f :                 >skip2361
                       >
                        
3a9f : ca                       dex
3aa0 : 10e2                     bpl trolc1
                        
3aa2 : a205                     ldx #5
3aa4 :                  tror
                                set_ax zps,0
                       >            load_flag 0
3aa4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3aa6 : 48              >            pha         ;use stack to load status
3aa7 : b559            >            lda zps,x    ;precharge accu
3aa9 : 28              >            plp
                        
3aaa : 6a                       ror a
                                tst_ax rROR,fROR,0
3aab : 08              >            php         ;save flags
3aac : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
3aaf : f003            >        beq skip2366
                       >        trap            ;failed not equal (non zero)
3ab1 : 208553          >        jsr report_error
                       >
3ab4 :                 >skip2366
                       >
3ab4 : 68              >            pla         ;load status
                       >            eor_flag 0
3ab5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3ab7 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
3aba : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
3abc : 208553          >        jsr report_error
                       >
3abf :                 >skip2369
                       >
                        
3abf : ca                       dex
3ac0 : 10e2                     bpl tror
3ac2 : a205                     ldx #5
3ac4 :                  tror1
                                set_ax zps,$ff-fc
                       >            load_flag $ff-fc
3ac4 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3ac6 : 48              >            pha         ;use stack to load status
3ac7 : b559            >            lda zps,x    ;precharge accu
3ac9 : 28              >            plp
                        
3aca : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
3acb : 08              >            php         ;save flags
3acc : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
3acf : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
3ad1 : 208553          >        jsr report_error
                       >
3ad4 :                 >skip2374
                       >
3ad4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3ad5 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ad7 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
3ada : f003            >        beq skip2377
                       >        trap            ;failed not equal (non zero)
3adc : 208553          >        jsr report_error
                       >
3adf :                 >skip2377
                       >
                        
3adf : ca                       dex
3ae0 : 10e2                     bpl tror1
                        
3ae2 : a205                     ldx #5
3ae4 :                  trorc
                                set_ax zps,fc
                       >            load_flag fc
3ae4 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3ae6 : 48              >            pha         ;use stack to load status
3ae7 : b559            >            lda zps,x    ;precharge accu
3ae9 : 28              >            plp
                        
3aea : 6a                       ror a
                                tst_ax rRORc,fRORc,0
3aeb : 08              >            php         ;save flags
3aec : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
3aef : f003            >        beq skip2382
                       >        trap            ;failed not equal (non zero)
3af1 : 208553          >        jsr report_error
                       >
3af4 :                 >skip2382
                       >
3af4 : 68              >            pla         ;load status
                       >            eor_flag 0
3af5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3af7 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
3afa : f003            >        beq skip2385
                       >        trap            ;failed not equal (non zero)
3afc : 208553          >        jsr report_error
                       >
3aff :                 >skip2385
                       >
                        
3aff : ca                       dex
3b00 : 10e2                     bpl trorc
3b02 : a205                     ldx #5
3b04 :                  trorc1
                                set_ax zps,$ff
                       >            load_flag $ff
3b04 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b06 : 48              >            pha         ;use stack to load status
3b07 : b559            >            lda zps,x    ;precharge accu
3b09 : 28              >            plp
                        
3b0a : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
3b0b : 08              >            php         ;save flags
3b0c : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
3b0f : f003            >        beq skip2390
                       >        trap            ;failed not equal (non zero)
3b11 : 208553          >        jsr report_error
                       >
3b14 :                 >skip2390
                       >
3b14 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3b15 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3b17 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
3b1a : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
3b1c : 208553          >        jsr report_error
                       >
3b1f :                 >skip2393
                       >
                        
3b1f : ca                       dex
3b20 : 10e2                     bpl trorc1
                                next_test
3b22 : ad0011          >            lda test_case   ;previous test
3b25 : c91d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3b27 : f003            >        beq skip2396
                       >        trap            ;failed not equal (non zero)
3b29 : 208553          >        jsr report_error
                       >
3b2c :                 >skip2396
                       >
001e =                 >test_num = test_num + 1
3b2c : a91e            >            lda #test_num   ;*** next tests' number
3b2e : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zeropage
3b31 : a205                     ldx #5
3b33 :                  tasl2
                                set_z zps,0
                       >            load_flag 0
3b33 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b35 : 48              >            pha         ;use stack to load status
3b36 : b559            >            lda zps,x    ;load to zeropage
3b38 : 8552            >            sta zpt
3b3a : 28              >            plp
                        
3b3b : 0652                     asl zpt
                                tst_z rASL,fASL,0
3b3d : 08              >            php         ;save flags
3b3e : a552            >            lda zpt
3b40 : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
3b43 : f003            >        beq skip2401
                       >        trap            ;failed not equal (non zero)
3b45 : 208553          >        jsr report_error
                       >
3b48 :                 >skip2401
                       >
3b48 : 68              >            pla         ;load status
                       >            eor_flag 0
3b49 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b4b : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
3b4e : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
3b50 : 208553          >        jsr report_error
                       >
3b53 :                 >skip2404
                       >
                        
3b53 : ca                       dex
3b54 : 10dd                     bpl tasl2
3b56 : a205                     ldx #5
3b58 :                  tasl3
                                set_z zps,$ff
                       >            load_flag $ff
3b58 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b5a : 48              >            pha         ;use stack to load status
3b5b : b559            >            lda zps,x    ;load to zeropage
3b5d : 8552            >            sta zpt
3b5f : 28              >            plp
                        
3b60 : 0652                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
3b62 : 08              >            php         ;save flags
3b63 : a552            >            lda zpt
3b65 : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
3b68 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
3b6a : 208553          >        jsr report_error
                       >
3b6d :                 >skip2409
                       >
3b6d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3b6e : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3b70 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
3b73 : f003            >        beq skip2412
                       >        trap            ;failed not equal (non zero)
3b75 : 208553          >        jsr report_error
                       >
3b78 :                 >skip2412
                       >
                        
3b78 : ca                       dex
3b79 : 10dd                     bpl tasl3
                        
3b7b : a205                     ldx #5
3b7d :                  tlsr2
                                set_z zps,0
                       >            load_flag 0
3b7d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b7f : 48              >            pha         ;use stack to load status
3b80 : b559            >            lda zps,x    ;load to zeropage
3b82 : 8552            >            sta zpt
3b84 : 28              >            plp
                        
3b85 : 4652                     lsr zpt
                                tst_z rLSR,fLSR,0
3b87 : 08              >            php         ;save flags
3b88 : a552            >            lda zpt
3b8a : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3b8d : f003            >        beq skip2417
                       >        trap            ;failed not equal (non zero)
3b8f : 208553          >        jsr report_error
                       >
3b92 :                 >skip2417
                       >
3b92 : 68              >            pla         ;load status
                       >            eor_flag 0
3b93 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b95 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3b98 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
3b9a : 208553          >        jsr report_error
                       >
3b9d :                 >skip2420
                       >
                        
3b9d : ca                       dex
3b9e : 10dd                     bpl tlsr2
3ba0 : a205                     ldx #5
3ba2 :                  tlsr3
                                set_z zps,$ff
                       >            load_flag $ff
3ba2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ba4 : 48              >            pha         ;use stack to load status
3ba5 : b559            >            lda zps,x    ;load to zeropage
3ba7 : 8552            >            sta zpt
3ba9 : 28              >            plp
                        
3baa : 4652                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
3bac : 08              >            php         ;save flags
3bad : a552            >            lda zpt
3baf : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3bb2 : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
3bb4 : 208553          >        jsr report_error
                       >
3bb7 :                 >skip2425
                       >
3bb7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3bb8 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3bba : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3bbd : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
3bbf : 208553          >        jsr report_error
                       >
3bc2 :                 >skip2428
                       >
                        
3bc2 : ca                       dex
3bc3 : 10dd                     bpl tlsr3
                        
3bc5 : a205                     ldx #5
3bc7 :                  trol2
                                set_z zps,0
                       >            load_flag 0
3bc7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3bc9 : 48              >            pha         ;use stack to load status
3bca : b559            >            lda zps,x    ;load to zeropage
3bcc : 8552            >            sta zpt
3bce : 28              >            plp
                        
3bcf : 2652                     rol zpt
                                tst_z rROL,fROL,0
3bd1 : 08              >            php         ;save flags
3bd2 : a552            >            lda zpt
3bd4 : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3bd7 : f003            >        beq skip2433
                       >        trap            ;failed not equal (non zero)
3bd9 : 208553          >        jsr report_error
                       >
3bdc :                 >skip2433
                       >
3bdc : 68              >            pla         ;load status
                       >            eor_flag 0
3bdd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3bdf : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
3be2 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
3be4 : 208553          >        jsr report_error
                       >
3be7 :                 >skip2436
                       >
                        
3be7 : ca                       dex
3be8 : 10dd                     bpl trol2
3bea : a205                     ldx #5
3bec :                  trol3
                                set_z zps,$ff-fc
                       >            load_flag $ff-fc
3bec : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3bee : 48              >            pha         ;use stack to load status
3bef : b559            >            lda zps,x    ;load to zeropage
3bf1 : 8552            >            sta zpt
3bf3 : 28              >            plp
                        
3bf4 : 2652                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
3bf6 : 08              >            php         ;save flags
3bf7 : a552            >            lda zpt
3bf9 : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3bfc : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
3bfe : 208553          >        jsr report_error
                       >
3c01 :                 >skip2441
                       >
3c01 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c02 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c04 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
3c07 : f003            >        beq skip2444
                       >        trap            ;failed not equal (non zero)
3c09 : 208553          >        jsr report_error
                       >
3c0c :                 >skip2444
                       >
                        
3c0c : ca                       dex
3c0d : 10dd                     bpl trol3
                        
3c0f : a205                     ldx #5
3c11 :                  trolc2
                                set_z zps,fc
                       >            load_flag fc
3c11 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3c13 : 48              >            pha         ;use stack to load status
3c14 : b559            >            lda zps,x    ;load to zeropage
3c16 : 8552            >            sta zpt
3c18 : 28              >            plp
                        
3c19 : 2652                     rol zpt
                                tst_z rROLc,fROLc,0
3c1b : 08              >            php         ;save flags
3c1c : a552            >            lda zpt
3c1e : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3c21 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
3c23 : 208553          >        jsr report_error
                       >
3c26 :                 >skip2449
                       >
3c26 : 68              >            pla         ;load status
                       >            eor_flag 0
3c27 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c29 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3c2c : f003            >        beq skip2452
                       >        trap            ;failed not equal (non zero)
3c2e : 208553          >        jsr report_error
                       >
3c31 :                 >skip2452
                       >
                        
3c31 : ca                       dex
3c32 : 10dd                     bpl trolc2
3c34 : a205                     ldx #5
3c36 :                  trolc3
                                set_z zps,$ff
                       >            load_flag $ff
3c36 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c38 : 48              >            pha         ;use stack to load status
3c39 : b559            >            lda zps,x    ;load to zeropage
3c3b : 8552            >            sta zpt
3c3d : 28              >            plp
                        
3c3e : 2652                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
3c40 : 08              >            php         ;save flags
3c41 : a552            >            lda zpt
3c43 : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3c46 : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
3c48 : 208553          >        jsr report_error
                       >
3c4b :                 >skip2457
                       >
3c4b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c4c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c4e : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3c51 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
3c53 : 208553          >        jsr report_error
                       >
3c56 :                 >skip2460
                       >
                        
3c56 : ca                       dex
3c57 : 10dd                     bpl trolc3
                        
3c59 : a205                     ldx #5
3c5b :                  tror2
                                set_z zps,0
                       >            load_flag 0
3c5b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c5d : 48              >            pha         ;use stack to load status
3c5e : b559            >            lda zps,x    ;load to zeropage
3c60 : 8552            >            sta zpt
3c62 : 28              >            plp
                        
3c63 : 6652                     ror zpt
                                tst_z rROR,fROR,0
3c65 : 08              >            php         ;save flags
3c66 : a552            >            lda zpt
3c68 : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
3c6b : f003            >        beq skip2465
                       >        trap            ;failed not equal (non zero)
3c6d : 208553          >        jsr report_error
                       >
3c70 :                 >skip2465
                       >
3c70 : 68              >            pla         ;load status
                       >            eor_flag 0
3c71 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c73 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
3c76 : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
3c78 : 208553          >        jsr report_error
                       >
3c7b :                 >skip2468
                       >
                        
3c7b : ca                       dex
3c7c : 10dd                     bpl tror2
3c7e : a205                     ldx #5
3c80 :                  tror3
                                set_z zps,$ff-fc
                       >            load_flag $ff-fc
3c80 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3c82 : 48              >            pha         ;use stack to load status
3c83 : b559            >            lda zps,x    ;load to zeropage
3c85 : 8552            >            sta zpt
3c87 : 28              >            plp
                        
3c88 : 6652                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
3c8a : 08              >            php         ;save flags
3c8b : a552            >            lda zpt
3c8d : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
3c90 : f003            >        beq skip2473
                       >        trap            ;failed not equal (non zero)
3c92 : 208553          >        jsr report_error
                       >
3c95 :                 >skip2473
                       >
3c95 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c96 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c98 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
3c9b : f003            >        beq skip2476
                       >        trap            ;failed not equal (non zero)
3c9d : 208553          >        jsr report_error
                       >
3ca0 :                 >skip2476
                       >
                        
3ca0 : ca                       dex
3ca1 : 10dd                     bpl tror3
                        
3ca3 : a205                     ldx #5
3ca5 :                  trorc2
                                set_z zps,fc
                       >            load_flag fc
3ca5 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3ca7 : 48              >            pha         ;use stack to load status
3ca8 : b559            >            lda zps,x    ;load to zeropage
3caa : 8552            >            sta zpt
3cac : 28              >            plp
                        
3cad : 6652                     ror zpt
                                tst_z rRORc,fRORc,0
3caf : 08              >            php         ;save flags
3cb0 : a552            >            lda zpt
3cb2 : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
3cb5 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
3cb7 : 208553          >        jsr report_error
                       >
3cba :                 >skip2481
                       >
3cba : 68              >            pla         ;load status
                       >            eor_flag 0
3cbb : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3cbd : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3cc0 : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
3cc2 : 208553          >        jsr report_error
                       >
3cc5 :                 >skip2484
                       >
                        
3cc5 : ca                       dex
3cc6 : 10dd                     bpl trorc2
3cc8 : a205                     ldx #5
3cca :                  trorc3
                                set_z zps,$ff
                       >            load_flag $ff
3cca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ccc : 48              >            pha         ;use stack to load status
3ccd : b559            >            lda zps,x    ;load to zeropage
3ccf : 8552            >            sta zpt
3cd1 : 28              >            plp
                        
3cd2 : 6652                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
3cd4 : 08              >            php         ;save flags
3cd5 : a552            >            lda zpt
3cd7 : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
3cda : f003            >        beq skip2489
                       >        trap            ;failed not equal (non zero)
3cdc : 208553          >        jsr report_error
                       >
3cdf :                 >skip2489
                       >
3cdf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3ce0 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ce2 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3ce5 : f003            >        beq skip2492
                       >        trap            ;failed not equal (non zero)
3ce7 : 208553          >        jsr report_error
                       >
3cea :                 >skip2492
                       >
                        
3cea : ca                       dex
3ceb : 10dd                     bpl trorc3
                                next_test
3ced : ad0011          >            lda test_case   ;previous test
3cf0 : c91e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3cf2 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
3cf4 : 208553          >        jsr report_error
                       >
3cf7 :                 >skip2495
                       >
001f =                 >test_num = test_num + 1
3cf7 : a91f            >            lda #test_num   ;*** next tests' number
3cf9 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - absolute
3cfc : a205                     ldx #5
3cfe :                  tasl4
                                set_abs zps,0
                       >            load_flag 0
3cfe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d00 : 48              >            pha         ;use stack to load status
3d01 : b559            >            lda zps,x    ;load to memory
3d03 : 8d0311          >            sta abst
3d06 : 28              >            plp
                        
3d07 : 0e0311                   asl abst
                                tst_abs rASL,fASL,0
3d0a : 08              >            php         ;save flags
3d0b : ad0311          >            lda abst
3d0e : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
3d11 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
3d13 : 208553          >        jsr report_error
                       >
3d16 :                 >skip2500
                       >
3d16 : 68              >            pla         ;load status
                       >            eor_flag 0
3d17 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d19 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
3d1c : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
3d1e : 208553          >        jsr report_error
                       >
3d21 :                 >skip2503
                       >
                        
3d21 : ca                       dex
3d22 : 10da                     bpl tasl4
3d24 : a205                     ldx #5
3d26 :                  tasl5
                                set_abs zps,$ff
                       >            load_flag $ff
3d26 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d28 : 48              >            pha         ;use stack to load status
3d29 : b559            >            lda zps,x    ;load to memory
3d2b : 8d0311          >            sta abst
3d2e : 28              >            plp
                        
3d2f : 0e0311                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
3d32 : 08              >            php         ;save flags
3d33 : ad0311          >            lda abst
3d36 : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
3d39 : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
3d3b : 208553          >        jsr report_error
                       >
3d3e :                 >skip2508
                       >
3d3e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3d3f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3d41 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
3d44 : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
3d46 : 208553          >        jsr report_error
                       >
3d49 :                 >skip2511
                       >
                        
3d49 : ca                       dex
3d4a : 10da                     bpl tasl5
                        
3d4c : a205                     ldx #5
3d4e :                  tlsr4
                                set_abs zps,0
                       >            load_flag 0
3d4e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d50 : 48              >            pha         ;use stack to load status
3d51 : b559            >            lda zps,x    ;load to memory
3d53 : 8d0311          >            sta abst
3d56 : 28              >            plp
                        
3d57 : 4e0311                   lsr abst
                                tst_abs rLSR,fLSR,0
3d5a : 08              >            php         ;save flags
3d5b : ad0311          >            lda abst
3d5e : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3d61 : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
3d63 : 208553          >        jsr report_error
                       >
3d66 :                 >skip2516
                       >
3d66 : 68              >            pla         ;load status
                       >            eor_flag 0
3d67 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d69 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3d6c : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
3d6e : 208553          >        jsr report_error
                       >
3d71 :                 >skip2519
                       >
                        
3d71 : ca                       dex
3d72 : 10da                     bpl tlsr4
3d74 : a205                     ldx #5
3d76 :                  tlsr5
                                set_abs zps,$ff
                       >            load_flag $ff
3d76 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d78 : 48              >            pha         ;use stack to load status
3d79 : b559            >            lda zps,x    ;load to memory
3d7b : 8d0311          >            sta abst
3d7e : 28              >            plp
                        
3d7f : 4e0311                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
3d82 : 08              >            php         ;save flags
3d83 : ad0311          >            lda abst
3d86 : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3d89 : f003            >        beq skip2524
                       >        trap            ;failed not equal (non zero)
3d8b : 208553          >        jsr report_error
                       >
3d8e :                 >skip2524
                       >
3d8e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3d8f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3d91 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3d94 : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
3d96 : 208553          >        jsr report_error
                       >
3d99 :                 >skip2527
                       >
                        
3d99 : ca                       dex
3d9a : 10da                     bpl tlsr5
                        
3d9c : a205                     ldx #5
3d9e :                  trol4
                                set_abs zps,0
                       >            load_flag 0
3d9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3da0 : 48              >            pha         ;use stack to load status
3da1 : b559            >            lda zps,x    ;load to memory
3da3 : 8d0311          >            sta abst
3da6 : 28              >            plp
                        
3da7 : 2e0311                   rol abst
                                tst_abs rROL,fROL,0
3daa : 08              >            php         ;save flags
3dab : ad0311          >            lda abst
3dae : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3db1 : f003            >        beq skip2532
                       >        trap            ;failed not equal (non zero)
3db3 : 208553          >        jsr report_error
                       >
3db6 :                 >skip2532
                       >
3db6 : 68              >            pla         ;load status
                       >            eor_flag 0
3db7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3db9 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
3dbc : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
3dbe : 208553          >        jsr report_error
                       >
3dc1 :                 >skip2535
                       >
                        
3dc1 : ca                       dex
3dc2 : 10da                     bpl trol4
3dc4 : a205                     ldx #5
3dc6 :                  trol5
                                set_abs zps,$ff-fc
                       >            load_flag $ff-fc
3dc6 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3dc8 : 48              >            pha         ;use stack to load status
3dc9 : b559            >            lda zps,x    ;load to memory
3dcb : 8d0311          >            sta abst
3dce : 28              >            plp
                        
3dcf : 2e0311                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
3dd2 : 08              >            php         ;save flags
3dd3 : ad0311          >            lda abst
3dd6 : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3dd9 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
3ddb : 208553          >        jsr report_error
                       >
3dde :                 >skip2540
                       >
3dde : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3ddf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3de1 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
3de4 : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
3de6 : 208553          >        jsr report_error
                       >
3de9 :                 >skip2543
                       >
                        
3de9 : ca                       dex
3dea : 10da                     bpl trol5
                        
3dec : a205                     ldx #5
3dee :                  trolc4
                                set_abs zps,fc
                       >            load_flag fc
3dee : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3df0 : 48              >            pha         ;use stack to load status
3df1 : b559            >            lda zps,x    ;load to memory
3df3 : 8d0311          >            sta abst
3df6 : 28              >            plp
                        
3df7 : 2e0311                   rol abst
                                tst_abs rROLc,fROLc,0
3dfa : 08              >            php         ;save flags
3dfb : ad0311          >            lda abst
3dfe : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3e01 : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
3e03 : 208553          >        jsr report_error
                       >
3e06 :                 >skip2548
                       >
3e06 : 68              >            pla         ;load status
                       >            eor_flag 0
3e07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3e09 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3e0c : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
3e0e : 208553          >        jsr report_error
                       >
3e11 :                 >skip2551
                       >
                        
3e11 : ca                       dex
3e12 : 10da                     bpl trolc4
3e14 : a205                     ldx #5
3e16 :                  trolc5
                                set_abs zps,$ff
                       >            load_flag $ff
3e16 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e18 : 48              >            pha         ;use stack to load status
3e19 : b559            >            lda zps,x    ;load to memory
3e1b : 8d0311          >            sta abst
3e1e : 28              >            plp
                        
3e1f : 2e0311                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
3e22 : 08              >            php         ;save flags
3e23 : ad0311          >            lda abst
3e26 : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3e29 : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
3e2b : 208553          >        jsr report_error
                       >
3e2e :                 >skip2556
                       >
3e2e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3e2f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3e31 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3e34 : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
3e36 : 208553          >        jsr report_error
                       >
3e39 :                 >skip2559
                       >
                        
3e39 : ca                       dex
3e3a : 10da                     bpl trolc5
                        
3e3c : a205                     ldx #5
3e3e :                  tror4
                                set_abs zps,0
                       >            load_flag 0
3e3e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e40 : 48              >            pha         ;use stack to load status
3e41 : b559            >            lda zps,x    ;load to memory
3e43 : 8d0311          >            sta abst
3e46 : 28              >            plp
                        
3e47 : 6e0311                   ror abst
                                tst_abs rROR,fROR,0
3e4a : 08              >            php         ;save flags
3e4b : ad0311          >            lda abst
3e4e : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
3e51 : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
3e53 : 208553          >        jsr report_error
                       >
3e56 :                 >skip2564
                       >
3e56 : 68              >            pla         ;load status
                       >            eor_flag 0
3e57 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3e59 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
3e5c : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
3e5e : 208553          >        jsr report_error
                       >
3e61 :                 >skip2567
                       >
                        
3e61 : ca                       dex
3e62 : 10da                     bpl tror4
3e64 : a205                     ldx #5
3e66 :                  tror5
                                set_abs zps,$ff-fc
                       >            load_flag $ff-fc
3e66 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3e68 : 48              >            pha         ;use stack to load status
3e69 : b559            >            lda zps,x    ;load to memory
3e6b : 8d0311          >            sta abst
3e6e : 28              >            plp
                        
3e6f : 6e0311                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
3e72 : 08              >            php         ;save flags
3e73 : ad0311          >            lda abst
3e76 : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
3e79 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
3e7b : 208553          >        jsr report_error
                       >
3e7e :                 >skip2572
                       >
3e7e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3e7f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3e81 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
3e84 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
3e86 : 208553          >        jsr report_error
                       >
3e89 :                 >skip2575
                       >
                        
3e89 : ca                       dex
3e8a : 10da                     bpl tror5
                        
3e8c : a205                     ldx #5
3e8e :                  trorc4
                                set_abs zps,fc
                       >            load_flag fc
3e8e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3e90 : 48              >            pha         ;use stack to load status
3e91 : b559            >            lda zps,x    ;load to memory
3e93 : 8d0311          >            sta abst
3e96 : 28              >            plp
                        
3e97 : 6e0311                   ror abst
                                tst_abs rRORc,fRORc,0
3e9a : 08              >            php         ;save flags
3e9b : ad0311          >            lda abst
3e9e : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
3ea1 : f003            >        beq skip2580
                       >        trap            ;failed not equal (non zero)
3ea3 : 208553          >        jsr report_error
                       >
3ea6 :                 >skip2580
                       >
3ea6 : 68              >            pla         ;load status
                       >            eor_flag 0
3ea7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3ea9 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3eac : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
3eae : 208553          >        jsr report_error
                       >
3eb1 :                 >skip2583
                       >
                        
3eb1 : ca                       dex
3eb2 : 10da                     bpl trorc4
3eb4 : a205                     ldx #5
3eb6 :                  trorc5
                                set_abs zps,$ff
                       >            load_flag $ff
3eb6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3eb8 : 48              >            pha         ;use stack to load status
3eb9 : b559            >            lda zps,x    ;load to memory
3ebb : 8d0311          >            sta abst
3ebe : 28              >            plp
                        
3ebf : 6e0311                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
3ec2 : 08              >            php         ;save flags
3ec3 : ad0311          >            lda abst
3ec6 : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
3ec9 : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
3ecb : 208553          >        jsr report_error
                       >
3ece :                 >skip2588
                       >
3ece : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3ecf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ed1 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3ed4 : f003            >        beq skip2591
                       >        trap            ;failed not equal (non zero)
3ed6 : 208553          >        jsr report_error
                       >
3ed9 :                 >skip2591
                       >
                        
3ed9 : ca                       dex
3eda : 10da                     bpl trorc5
                                next_test
3edc : ad0011          >            lda test_case   ;previous test
3edf : c91f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3ee1 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
3ee3 : 208553          >        jsr report_error
                       >
3ee6 :                 >skip2594
                       >
0020 =                 >test_num = test_num + 1
3ee6 : a920            >            lda #test_num   ;*** next tests' number
3ee8 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zp indexed
3eeb : a205                     ldx #5
3eed :                  tasl6
                                set_zx zps,0
                       >            load_flag 0
3eed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3eef : 48              >            pha         ;use stack to load status
3ef0 : b559            >            lda zps,x    ;load to indexed zeropage
3ef2 : 9552            >            sta zpt,x
3ef4 : 28              >            plp
                        
3ef5 : 1652                     asl zpt,x
                                tst_zx rASL,fASL,0
3ef7 : 08              >            php         ;save flags
3ef8 : b552            >            lda zpt,x
3efa : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
3efd : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
3eff : 208553          >        jsr report_error
                       >
3f02 :                 >skip2599
                       >
3f02 : 68              >            pla         ;load status
                       >            eor_flag 0
3f03 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f05 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
3f08 : f003            >        beq skip2602
                       >        trap            ;failed not equal (non zero)
3f0a : 208553          >        jsr report_error
                       >
3f0d :                 >skip2602
                       >
                        
3f0d : ca                       dex
3f0e : 10dd                     bpl tasl6
3f10 : a205                     ldx #5
3f12 :                  tasl7
                                set_zx zps,$ff
                       >            load_flag $ff
3f12 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f14 : 48              >            pha         ;use stack to load status
3f15 : b559            >            lda zps,x    ;load to indexed zeropage
3f17 : 9552            >            sta zpt,x
3f19 : 28              >            plp
                        
3f1a : 1652                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
3f1c : 08              >            php         ;save flags
3f1d : b552            >            lda zpt,x
3f1f : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
3f22 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
3f24 : 208553          >        jsr report_error
                       >
3f27 :                 >skip2607
                       >
3f27 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3f28 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3f2a : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
3f2d : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
3f2f : 208553          >        jsr report_error
                       >
3f32 :                 >skip2610
                       >
                        
3f32 : ca                       dex
3f33 : 10dd                     bpl tasl7
                        
3f35 : a205                     ldx #5
3f37 :                  tlsr6
                                set_zx zps,0
                       >            load_flag 0
3f37 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f39 : 48              >            pha         ;use stack to load status
3f3a : b559            >            lda zps,x    ;load to indexed zeropage
3f3c : 9552            >            sta zpt,x
3f3e : 28              >            plp
                        
3f3f : 5652                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
3f41 : 08              >            php         ;save flags
3f42 : b552            >            lda zpt,x
3f44 : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3f47 : f003            >        beq skip2615
                       >        trap            ;failed not equal (non zero)
3f49 : 208553          >        jsr report_error
                       >
3f4c :                 >skip2615
                       >
3f4c : 68              >            pla         ;load status
                       >            eor_flag 0
3f4d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f4f : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3f52 : f003            >        beq skip2618
                       >        trap            ;failed not equal (non zero)
3f54 : 208553          >        jsr report_error
                       >
3f57 :                 >skip2618
                       >
                        
3f57 : ca                       dex
3f58 : 10dd                     bpl tlsr6
3f5a : a205                     ldx #5
3f5c :                  tlsr7
                                set_zx zps,$ff
                       >            load_flag $ff
3f5c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f5e : 48              >            pha         ;use stack to load status
3f5f : b559            >            lda zps,x    ;load to indexed zeropage
3f61 : 9552            >            sta zpt,x
3f63 : 28              >            plp
                        
3f64 : 5652                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
3f66 : 08              >            php         ;save flags
3f67 : b552            >            lda zpt,x
3f69 : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
3f6c : f003            >        beq skip2623
                       >        trap            ;failed not equal (non zero)
3f6e : 208553          >        jsr report_error
                       >
3f71 :                 >skip2623
                       >
3f71 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3f72 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3f74 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3f77 : f003            >        beq skip2626
                       >        trap            ;failed not equal (non zero)
3f79 : 208553          >        jsr report_error
                       >
3f7c :                 >skip2626
                       >
                        
3f7c : ca                       dex
3f7d : 10dd                     bpl tlsr7
                        
3f7f : a205                     ldx #5
3f81 :                  trol6
                                set_zx zps,0
                       >            load_flag 0
3f81 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f83 : 48              >            pha         ;use stack to load status
3f84 : b559            >            lda zps,x    ;load to indexed zeropage
3f86 : 9552            >            sta zpt,x
3f88 : 28              >            plp
                        
3f89 : 3652                     rol zpt,x
                                tst_zx rROL,fROL,0
3f8b : 08              >            php         ;save flags
3f8c : b552            >            lda zpt,x
3f8e : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3f91 : f003            >        beq skip2631
                       >        trap            ;failed not equal (non zero)
3f93 : 208553          >        jsr report_error
                       >
3f96 :                 >skip2631
                       >
3f96 : 68              >            pla         ;load status
                       >            eor_flag 0
3f97 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f99 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
3f9c : f003            >        beq skip2634
                       >        trap            ;failed not equal (non zero)
3f9e : 208553          >        jsr report_error
                       >
3fa1 :                 >skip2634
                       >
                        
3fa1 : ca                       dex
3fa2 : 10dd                     bpl trol6
3fa4 : a205                     ldx #5
3fa6 :                  trol7
                                set_zx zps,$ff-fc
                       >            load_flag $ff-fc
3fa6 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3fa8 : 48              >            pha         ;use stack to load status
3fa9 : b559            >            lda zps,x    ;load to indexed zeropage
3fab : 9552            >            sta zpt,x
3fad : 28              >            plp
                        
3fae : 3652                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
3fb0 : 08              >            php         ;save flags
3fb1 : b552            >            lda zpt,x
3fb3 : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
3fb6 : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
3fb8 : 208553          >        jsr report_error
                       >
3fbb :                 >skip2639
                       >
3fbb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3fbc : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3fbe : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
3fc1 : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
3fc3 : 208553          >        jsr report_error
                       >
3fc6 :                 >skip2642
                       >
                        
3fc6 : ca                       dex
3fc7 : 10dd                     bpl trol7
                        
3fc9 : a205                     ldx #5
3fcb :                  trolc6
                                set_zx zps,fc
                       >            load_flag fc
3fcb : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3fcd : 48              >            pha         ;use stack to load status
3fce : b559            >            lda zps,x    ;load to indexed zeropage
3fd0 : 9552            >            sta zpt,x
3fd2 : 28              >            plp
                        
3fd3 : 3652                     rol zpt,x
                                tst_zx rROLc,fROLc,0
3fd5 : 08              >            php         ;save flags
3fd6 : b552            >            lda zpt,x
3fd8 : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
3fdb : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
3fdd : 208553          >        jsr report_error
                       >
3fe0 :                 >skip2647
                       >
3fe0 : 68              >            pla         ;load status
                       >            eor_flag 0
3fe1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3fe3 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3fe6 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
3fe8 : 208553          >        jsr report_error
                       >
3feb :                 >skip2650
                       >
                        
3feb : ca                       dex
3fec : 10dd                     bpl trolc6
3fee : a205                     ldx #5
3ff0 :                  trolc7
                                set_zx zps,$ff
                       >            load_flag $ff
3ff0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ff2 : 48              >            pha         ;use stack to load status
3ff3 : b559            >            lda zps,x    ;load to indexed zeropage
3ff5 : 9552            >            sta zpt,x
3ff7 : 28              >            plp
                        
3ff8 : 3652                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
3ffa : 08              >            php         ;save flags
3ffb : b552            >            lda zpt,x
3ffd : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
4000 : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
4002 : 208553          >        jsr report_error
                       >
4005 :                 >skip2655
                       >
4005 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4006 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4008 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
400b : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
400d : 208553          >        jsr report_error
                       >
4010 :                 >skip2658
                       >
                        
4010 : ca                       dex
4011 : 10dd                     bpl trolc7
                        
4013 : a205                     ldx #5
4015 :                  tror6
                                set_zx zps,0
                       >            load_flag 0
4015 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4017 : 48              >            pha         ;use stack to load status
4018 : b559            >            lda zps,x    ;load to indexed zeropage
401a : 9552            >            sta zpt,x
401c : 28              >            plp
                        
401d : 7652                     ror zpt,x
                                tst_zx rROR,fROR,0
401f : 08              >            php         ;save flags
4020 : b552            >            lda zpt,x
4022 : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
4025 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
4027 : 208553          >        jsr report_error
                       >
402a :                 >skip2663
                       >
402a : 68              >            pla         ;load status
                       >            eor_flag 0
402b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
402d : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
4030 : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
4032 : 208553          >        jsr report_error
                       >
4035 :                 >skip2666
                       >
                        
4035 : ca                       dex
4036 : 10dd                     bpl tror6
4038 : a205                     ldx #5
403a :                  tror7
                                set_zx zps,$ff-fc
                       >            load_flag $ff-fc
403a : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
403c : 48              >            pha         ;use stack to load status
403d : b559            >            lda zps,x    ;load to indexed zeropage
403f : 9552            >            sta zpt,x
4041 : 28              >            plp
                        
4042 : 7652                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
4044 : 08              >            php         ;save flags
4045 : b552            >            lda zpt,x
4047 : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
404a : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
404c : 208553          >        jsr report_error
                       >
404f :                 >skip2671
                       >
404f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4050 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4052 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
4055 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
4057 : 208553          >        jsr report_error
                       >
405a :                 >skip2674
                       >
                        
405a : ca                       dex
405b : 10dd                     bpl tror7
                        
405d : a205                     ldx #5
405f :                  trorc6
                                set_zx zps,fc
                       >            load_flag fc
405f : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
4061 : 48              >            pha         ;use stack to load status
4062 : b559            >            lda zps,x    ;load to indexed zeropage
4064 : 9552            >            sta zpt,x
4066 : 28              >            plp
                        
4067 : 7652                     ror zpt,x
                                tst_zx rRORc,fRORc,0
4069 : 08              >            php         ;save flags
406a : b552            >            lda zpt,x
406c : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
406f : f003            >        beq skip2679
                       >        trap            ;failed not equal (non zero)
4071 : 208553          >        jsr report_error
                       >
4074 :                 >skip2679
                       >
4074 : 68              >            pla         ;load status
                       >            eor_flag 0
4075 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4077 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
407a : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
407c : 208553          >        jsr report_error
                       >
407f :                 >skip2682
                       >
                        
407f : ca                       dex
4080 : 10dd                     bpl trorc6
4082 : a205                     ldx #5
4084 :                  trorc7
                                set_zx zps,$ff
                       >            load_flag $ff
4084 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4086 : 48              >            pha         ;use stack to load status
4087 : b559            >            lda zps,x    ;load to indexed zeropage
4089 : 9552            >            sta zpt,x
408b : 28              >            plp
                        
408c : 7652                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
408e : 08              >            php         ;save flags
408f : b552            >            lda zpt,x
4091 : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
4094 : f003            >        beq skip2687
                       >        trap            ;failed not equal (non zero)
4096 : 208553          >        jsr report_error
                       >
4099 :                 >skip2687
                       >
4099 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
409a : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
409c : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
409f : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
40a1 : 208553          >        jsr report_error
                       >
40a4 :                 >skip2690
                       >
                        
40a4 : ca                       dex
40a5 : 10dd                     bpl trorc7
                                next_test
40a7 : ad0011          >            lda test_case   ;previous test
40aa : c920            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
40ac : f003            >        beq skip2693
                       >        trap            ;failed not equal (non zero)
40ae : 208553          >        jsr report_error
                       >
40b1 :                 >skip2693
                       >
0021 =                 >test_num = test_num + 1
40b1 : a921            >            lda #test_num   ;*** next tests' number
40b3 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - abs indexed
40b6 : a205                     ldx #5
40b8 :                  tasl8
                                set_absx zps,0
                       >            load_flag 0
40b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40ba : 48              >            pha         ;use stack to load status
40bb : b559            >            lda zps,x    ;load to indexed memory
40bd : 9d0311          >            sta abst,x
40c0 : 28              >            plp
                        
40c1 : 1e0311                   asl abst,x
                                tst_absx rASL,fASL,0
40c4 : 08              >            php         ;save flags
40c5 : bd0311          >            lda abst,x
40c8 : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
40cb : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
40cd : 208553          >        jsr report_error
                       >
40d0 :                 >skip2698
                       >
40d0 : 68              >            pla         ;load status
                       >            eor_flag 0
40d1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
40d3 : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
40d6 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
40d8 : 208553          >        jsr report_error
                       >
40db :                 >skip2701
                       >
                        
40db : ca                       dex
40dc : 10da                     bpl tasl8
40de : a205                     ldx #5
40e0 :                  tasl9
                                set_absx zps,$ff
                       >            load_flag $ff
40e0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40e2 : 48              >            pha         ;use stack to load status
40e3 : b559            >            lda zps,x    ;load to indexed memory
40e5 : 9d0311          >            sta abst,x
40e8 : 28              >            plp
                        
40e9 : 1e0311                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
40ec : 08              >            php         ;save flags
40ed : bd0311          >            lda abst,x
40f0 : dd2111          >            cmp rASL,x    ;test result
                       >            trap_ne
40f3 : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
40f5 : 208553          >        jsr report_error
                       >
40f8 :                 >skip2706
                       >
40f8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
40f9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
40fb : dd3911          >            cmp fASL,x    ;test flags
                       >            trap_ne
40fe : f003            >        beq skip2709
                       >        trap            ;failed not equal (non zero)
4100 : 208553          >        jsr report_error
                       >
4103 :                 >skip2709
                       >
                        
4103 : ca                       dex
4104 : 10da                     bpl tasl9
                        
4106 : a205                     ldx #5
4108 :                  tlsr8
                                set_absx zps,0
                       >            load_flag 0
4108 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
410a : 48              >            pha         ;use stack to load status
410b : b559            >            lda zps,x    ;load to indexed memory
410d : 9d0311          >            sta abst,x
4110 : 28              >            plp
                        
4111 : 5e0311                   lsr abst,x
                                tst_absx rLSR,fLSR,0
4114 : 08              >            php         ;save flags
4115 : bd0311          >            lda abst,x
4118 : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
411b : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
411d : 208553          >        jsr report_error
                       >
4120 :                 >skip2714
                       >
4120 : 68              >            pla         ;load status
                       >            eor_flag 0
4121 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4123 : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
4126 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
4128 : 208553          >        jsr report_error
                       >
412b :                 >skip2717
                       >
                        
412b : ca                       dex
412c : 10da                     bpl tlsr8
412e : a205                     ldx #5
4130 :                  tlsr9
                                set_absx zps,$ff
                       >            load_flag $ff
4130 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4132 : 48              >            pha         ;use stack to load status
4133 : b559            >            lda zps,x    ;load to indexed memory
4135 : 9d0311          >            sta abst,x
4138 : 28              >            plp
                        
4139 : 5e0311                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
413c : 08              >            php         ;save flags
413d : bd0311          >            lda abst,x
4140 : dd2d11          >            cmp rLSR,x    ;test result
                       >            trap_ne
4143 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
4145 : 208553          >        jsr report_error
                       >
4148 :                 >skip2722
                       >
4148 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4149 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
414b : dd4511          >            cmp fLSR,x    ;test flags
                       >            trap_ne
414e : f003            >        beq skip2725
                       >        trap            ;failed not equal (non zero)
4150 : 208553          >        jsr report_error
                       >
4153 :                 >skip2725
                       >
                        
4153 : ca                       dex
4154 : 10da                     bpl tlsr9
                        
4156 : a205                     ldx #5
4158 :                  trol8
                                set_absx zps,0
                       >            load_flag 0
4158 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
415a : 48              >            pha         ;use stack to load status
415b : b559            >            lda zps,x    ;load to indexed memory
415d : 9d0311          >            sta abst,x
4160 : 28              >            plp
                        
4161 : 3e0311                   rol abst,x
                                tst_absx rROL,fROL,0
4164 : 08              >            php         ;save flags
4165 : bd0311          >            lda abst,x
4168 : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
416b : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
416d : 208553          >        jsr report_error
                       >
4170 :                 >skip2730
                       >
4170 : 68              >            pla         ;load status
                       >            eor_flag 0
4171 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4173 : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
4176 : f003            >        beq skip2733
                       >        trap            ;failed not equal (non zero)
4178 : 208553          >        jsr report_error
                       >
417b :                 >skip2733
                       >
                        
417b : ca                       dex
417c : 10da                     bpl trol8
417e : a205                     ldx #5
4180 :                  trol9
                                set_absx zps,$ff-fc
                       >            load_flag $ff-fc
4180 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
4182 : 48              >            pha         ;use stack to load status
4183 : b559            >            lda zps,x    ;load to indexed memory
4185 : 9d0311          >            sta abst,x
4188 : 28              >            plp
                        
4189 : 3e0311                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
418c : 08              >            php         ;save flags
418d : bd0311          >            lda abst,x
4190 : dd2111          >            cmp rROL,x    ;test result
                       >            trap_ne
4193 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
4195 : 208553          >        jsr report_error
                       >
4198 :                 >skip2738
                       >
4198 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4199 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
419b : dd3911          >            cmp fROL,x    ;test flags
                       >            trap_ne
419e : f003            >        beq skip2741
                       >        trap            ;failed not equal (non zero)
41a0 : 208553          >        jsr report_error
                       >
41a3 :                 >skip2741
                       >
                        
41a3 : ca                       dex
41a4 : 10da                     bpl trol9
                        
41a6 : a205                     ldx #5
41a8 :                  trolc8
                                set_absx zps,fc
                       >            load_flag fc
41a8 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
41aa : 48              >            pha         ;use stack to load status
41ab : b559            >            lda zps,x    ;load to indexed memory
41ad : 9d0311          >            sta abst,x
41b0 : 28              >            plp
                        
41b1 : 3e0311                   rol abst,x
                                tst_absx rROLc,fROLc,0
41b4 : 08              >            php         ;save flags
41b5 : bd0311          >            lda abst,x
41b8 : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
41bb : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
41bd : 208553          >        jsr report_error
                       >
41c0 :                 >skip2746
                       >
41c0 : 68              >            pla         ;load status
                       >            eor_flag 0
41c1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
41c3 : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
41c6 : f003            >        beq skip2749
                       >        trap            ;failed not equal (non zero)
41c8 : 208553          >        jsr report_error
                       >
41cb :                 >skip2749
                       >
                        
41cb : ca                       dex
41cc : 10da                     bpl trolc8
41ce : a205                     ldx #5
41d0 :                  trolc9
                                set_absx zps,$ff
                       >            load_flag $ff
41d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41d2 : 48              >            pha         ;use stack to load status
41d3 : b559            >            lda zps,x    ;load to indexed memory
41d5 : 9d0311          >            sta abst,x
41d8 : 28              >            plp
                        
41d9 : 3e0311                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
41dc : 08              >            php         ;save flags
41dd : bd0311          >            lda abst,x
41e0 : dd2711          >            cmp rROLc,x    ;test result
                       >            trap_ne
41e3 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
41e5 : 208553          >        jsr report_error
                       >
41e8 :                 >skip2754
                       >
41e8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
41e9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
41eb : dd3f11          >            cmp fROLc,x    ;test flags
                       >            trap_ne
41ee : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
41f0 : 208553          >        jsr report_error
                       >
41f3 :                 >skip2757
                       >
                        
41f3 : ca                       dex
41f4 : 10da                     bpl trolc9
                        
41f6 : a205                     ldx #5
41f8 :                  tror8
                                set_absx zps,0
                       >            load_flag 0
41f8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41fa : 48              >            pha         ;use stack to load status
41fb : b559            >            lda zps,x    ;load to indexed memory
41fd : 9d0311          >            sta abst,x
4200 : 28              >            plp
                        
4201 : 7e0311                   ror abst,x
                                tst_absx rROR,fROR,0
4204 : 08              >            php         ;save flags
4205 : bd0311          >            lda abst,x
4208 : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
420b : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
420d : 208553          >        jsr report_error
                       >
4210 :                 >skip2762
                       >
4210 : 68              >            pla         ;load status
                       >            eor_flag 0
4211 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4213 : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
4216 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
4218 : 208553          >        jsr report_error
                       >
421b :                 >skip2765
                       >
                        
421b : ca                       dex
421c : 10da                     bpl tror8
421e : a205                     ldx #5
4220 :                  tror9
                                set_absx zps,$ff-fc
                       >            load_flag $ff-fc
4220 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
4222 : 48              >            pha         ;use stack to load status
4223 : b559            >            lda zps,x    ;load to indexed memory
4225 : 9d0311          >            sta abst,x
4228 : 28              >            plp
                        
4229 : 7e0311                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
422c : 08              >            php         ;save flags
422d : bd0311          >            lda abst,x
4230 : dd2d11          >            cmp rROR,x    ;test result
                       >            trap_ne
4233 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
4235 : 208553          >        jsr report_error
                       >
4238 :                 >skip2770
                       >
4238 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4239 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
423b : dd4511          >            cmp fROR,x    ;test flags
                       >            trap_ne
423e : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
4240 : 208553          >        jsr report_error
                       >
4243 :                 >skip2773
                       >
                        
4243 : ca                       dex
4244 : 10da                     bpl tror9
                        
4246 : a205                     ldx #5
4248 :                  trorc8
                                set_absx zps,fc
                       >            load_flag fc
4248 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
424a : 48              >            pha         ;use stack to load status
424b : b559            >            lda zps,x    ;load to indexed memory
424d : 9d0311          >            sta abst,x
4250 : 28              >            plp
                        
4251 : 7e0311                   ror abst,x
                                tst_absx rRORc,fRORc,0
4254 : 08              >            php         ;save flags
4255 : bd0311          >            lda abst,x
4258 : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
425b : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
425d : 208553          >        jsr report_error
                       >
4260 :                 >skip2778
                       >
4260 : 68              >            pla         ;load status
                       >            eor_flag 0
4261 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4263 : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
4266 : f003            >        beq skip2781
                       >        trap            ;failed not equal (non zero)
4268 : 208553          >        jsr report_error
                       >
426b :                 >skip2781
                       >
                        
426b : ca                       dex
426c : 10da                     bpl trorc8
426e : a205                     ldx #5
4270 :                  trorc9
                                set_absx zps,$ff
                       >            load_flag $ff
4270 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4272 : 48              >            pha         ;use stack to load status
4273 : b559            >            lda zps,x    ;load to indexed memory
4275 : 9d0311          >            sta abst,x
4278 : 28              >            plp
                        
4279 : 7e0311                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
427c : 08              >            php         ;save flags
427d : bd0311          >            lda abst,x
4280 : dd3311          >            cmp rRORc,x    ;test result
                       >            trap_ne
4283 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
4285 : 208553          >        jsr report_error
                       >
4288 :                 >skip2786
                       >
4288 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4289 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
428b : dd4b11          >            cmp fRORc,x    ;test flags
                       >            trap_ne
428e : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
4290 : 208553          >        jsr report_error
                       >
4293 :                 >skip2789
                       >
                        
4293 : ca                       dex
4294 : 10da                     bpl trorc9
                                next_test
4296 : ad0011          >            lda test_case   ;previous test
4299 : c921            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
429b : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
429d : 208553          >        jsr report_error
                       >
42a0 :                 >skip2792
                       >
0022 =                 >test_num = test_num + 1
42a0 : a922            >            lda #test_num   ;*** next tests' number
42a2 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing memory increment/decrement - INC DEC all addressing modes
                        ; zeropage
42a5 : a200                     ldx #0
42a7 : a97e                     lda #$7e
42a9 : 8552                     sta zpt
42ab :                  tinc
                                set_stat 0
                       >            load_flag 0
42ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42ad : 48              >            pha         ;use stack to load status
42ae : 28              >            plp
                        
42af : e652                     inc zpt
                                tst_z rINC,fINC,0
42b1 : 08              >            php         ;save flags
42b2 : a552            >            lda zpt
42b4 : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
42b7 : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
42b9 : 208553          >        jsr report_error
                       >
42bc :                 >skip2797
                       >
42bc : 68              >            pla         ;load status
                       >            eor_flag 0
42bd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
42bf : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
42c2 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
42c4 : 208553          >        jsr report_error
                       >
42c7 :                 >skip2800
                       >
                        
42c7 : e8                       inx
42c8 : e002                     cpx #2
42ca : d004                     bne tinc1
42cc : a9fe                     lda #$fe
42ce : 8552                     sta zpt
42d0 : e005             tinc1   cpx #5
42d2 : d0d7                     bne tinc
42d4 : ca                       dex
42d5 : e652                     inc zpt
42d7 :                  tdec
                                set_stat 0
                       >            load_flag 0
42d7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42d9 : 48              >            pha         ;use stack to load status
42da : 28              >            plp
                        
42db : c652                     dec zpt
                                tst_z rINC,fINC,0
42dd : 08              >            php         ;save flags
42de : a552            >            lda zpt
42e0 : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
42e3 : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
42e5 : 208553          >        jsr report_error
                       >
42e8 :                 >skip2805
                       >
42e8 : 68              >            pla         ;load status
                       >            eor_flag 0
42e9 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
42eb : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
42ee : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
42f0 : 208553          >        jsr report_error
                       >
42f3 :                 >skip2808
                       >
                        
42f3 : ca                       dex
42f4 : 300a                     bmi tdec1
42f6 : e001                     cpx #1
42f8 : d0dd                     bne tdec
42fa : a981                     lda #$81
42fc : 8552                     sta zpt
42fe : d0d7                     bne tdec
4300 :                  tdec1
4300 : a200                     ldx #0
4302 : a97e                     lda #$7e
4304 : 8552                     sta zpt
4306 :                  tinc10
                                set_stat $ff
                       >            load_flag $ff
4306 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4308 : 48              >            pha         ;use stack to load status
4309 : 28              >            plp
                        
430a : e652                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
430c : 08              >            php         ;save flags
430d : a552            >            lda zpt
430f : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
4312 : f003            >        beq skip2813
                       >        trap            ;failed not equal (non zero)
4314 : 208553          >        jsr report_error
                       >
4317 :                 >skip2813
                       >
4317 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4318 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
431a : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
431d : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
431f : 208553          >        jsr report_error
                       >
4322 :                 >skip2816
                       >
                        
4322 : e8                       inx
4323 : e002                     cpx #2
4325 : d004                     bne tinc11
4327 : a9fe                     lda #$fe
4329 : 8552                     sta zpt
432b : e005             tinc11  cpx #5
432d : d0d7                     bne tinc10
432f : ca                       dex
4330 : e652                     inc zpt
4332 :                  tdec10
                                set_stat $ff
                       >            load_flag $ff
4332 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4334 : 48              >            pha         ;use stack to load status
4335 : 28              >            plp
                        
4336 : c652                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
4338 : 08              >            php         ;save flags
4339 : a552            >            lda zpt
433b : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
433e : f003            >        beq skip2821
                       >        trap            ;failed not equal (non zero)
4340 : 208553          >        jsr report_error
                       >
4343 :                 >skip2821
                       >
4343 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4344 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4346 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
4349 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
434b : 208553          >        jsr report_error
                       >
434e :                 >skip2824
                       >
                        
434e : ca                       dex
434f : 300a                     bmi tdec11
4351 : e001                     cpx #1
4353 : d0dd                     bne tdec10
4355 : a981                     lda #$81
4357 : 8552                     sta zpt
4359 : d0d7                     bne tdec10
435b :                  tdec11
                                next_test
435b : ad0011          >            lda test_case   ;previous test
435e : c922            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4360 : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
4362 : 208553          >        jsr report_error
                       >
4365 :                 >skip2827
                       >
0023 =                 >test_num = test_num + 1
4365 : a923            >            lda #test_num   ;*** next tests' number
4367 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; absolute memory
436a : a200                     ldx #0
436c : a97e                     lda #$7e
436e : 8d0311                   sta abst
4371 :                  tinc2
                                set_stat 0
                       >            load_flag 0
4371 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4373 : 48              >            pha         ;use stack to load status
4374 : 28              >            plp
                        
4375 : ee0311                   inc abst
                                tst_abs rINC,fINC,0
4378 : 08              >            php         ;save flags
4379 : ad0311          >            lda abst
437c : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
437f : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
4381 : 208553          >        jsr report_error
                       >
4384 :                 >skip2832
                       >
4384 : 68              >            pla         ;load status
                       >            eor_flag 0
4385 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4387 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
438a : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
438c : 208553          >        jsr report_error
                       >
438f :                 >skip2835
                       >
                        
438f : e8                       inx
4390 : e002                     cpx #2
4392 : d005                     bne tinc3
4394 : a9fe                     lda #$fe
4396 : 8d0311                   sta abst
4399 : e005             tinc3   cpx #5
439b : d0d4                     bne tinc2
439d : ca                       dex
439e : ee0311                   inc abst
43a1 :                  tdec2
                                set_stat 0
                       >            load_flag 0
43a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43a3 : 48              >            pha         ;use stack to load status
43a4 : 28              >            plp
                        
43a5 : ce0311                   dec abst
                                tst_abs rINC,fINC,0
43a8 : 08              >            php         ;save flags
43a9 : ad0311          >            lda abst
43ac : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
43af : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
43b1 : 208553          >        jsr report_error
                       >
43b4 :                 >skip2840
                       >
43b4 : 68              >            pla         ;load status
                       >            eor_flag 0
43b5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
43b7 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
43ba : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
43bc : 208553          >        jsr report_error
                       >
43bf :                 >skip2843
                       >
                        
43bf : ca                       dex
43c0 : 300b                     bmi tdec3
43c2 : e001                     cpx #1
43c4 : d0db                     bne tdec2
43c6 : a981                     lda #$81
43c8 : 8d0311                   sta abst
43cb : d0d4                     bne tdec2
43cd :                  tdec3
43cd : a200                     ldx #0
43cf : a97e                     lda #$7e
43d1 : 8d0311                   sta abst
43d4 :                  tinc12
                                set_stat $ff
                       >            load_flag $ff
43d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43d6 : 48              >            pha         ;use stack to load status
43d7 : 28              >            plp
                        
43d8 : ee0311                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
43db : 08              >            php         ;save flags
43dc : ad0311          >            lda abst
43df : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
43e2 : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
43e4 : 208553          >        jsr report_error
                       >
43e7 :                 >skip2848
                       >
43e7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
43e8 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
43ea : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
43ed : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
43ef : 208553          >        jsr report_error
                       >
43f2 :                 >skip2851
                       >
                        
43f2 : e8                       inx
43f3 : e002                     cpx #2
43f5 : d005                     bne tinc13
43f7 : a9fe                     lda #$fe
43f9 : 8d0311                   sta abst
43fc : e005             tinc13   cpx #5
43fe : d0d4                     bne tinc12
4400 : ca                       dex
4401 : ee0311                   inc abst
4404 :                  tdec12
                                set_stat $ff
                       >            load_flag $ff
4404 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4406 : 48              >            pha         ;use stack to load status
4407 : 28              >            plp
                        
4408 : ce0311                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
440b : 08              >            php         ;save flags
440c : ad0311          >            lda abst
440f : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
4412 : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
4414 : 208553          >        jsr report_error
                       >
4417 :                 >skip2856
                       >
4417 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4418 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
441a : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
441d : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
441f : 208553          >        jsr report_error
                       >
4422 :                 >skip2859
                       >
                        
4422 : ca                       dex
4423 : 300b                     bmi tdec13
4425 : e001                     cpx #1
4427 : d0db                     bne tdec12
4429 : a981                     lda #$81
442b : 8d0311                   sta abst
442e : d0d4                     bne tdec12
4430 :                  tdec13
                                next_test
4430 : ad0011          >            lda test_case   ;previous test
4433 : c923            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4435 : f003            >        beq skip2862
                       >        trap            ;failed not equal (non zero)
4437 : 208553          >        jsr report_error
                       >
443a :                 >skip2862
                       >
0024 =                 >test_num = test_num + 1
443a : a924            >            lda #test_num   ;*** next tests' number
443c : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; zeropage indexed
443f : a200                     ldx #0
4441 : a97e                     lda #$7e
4443 : 9552             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
4445 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4447 : 48              >            pha         ;use stack to load status
4448 : 28              >            plp
                        
4449 : f652                     inc zpt,x
                                tst_zx rINC,fINC,0
444b : 08              >            php         ;save flags
444c : b552            >            lda zpt,x
444e : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
4451 : f003            >        beq skip2867
                       >        trap            ;failed not equal (non zero)
4453 : 208553          >        jsr report_error
                       >
4456 :                 >skip2867
                       >
4456 : 68              >            pla         ;load status
                       >            eor_flag 0
4457 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4459 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
445c : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
445e : 208553          >        jsr report_error
                       >
4461 :                 >skip2870
                       >
                        
4461 : b552                     lda zpt,x
4463 : e8                       inx
4464 : e002                     cpx #2
4466 : d002                     bne tinc5
4468 : a9fe                     lda #$fe
446a : e005             tinc5   cpx #5
446c : d0d5                     bne tinc4
446e : ca                       dex
446f : a902                     lda #2
4471 : 9552             tdec4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
4473 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4475 : 48              >            pha         ;use stack to load status
4476 : 28              >            plp
                        
4477 : d652                     dec zpt,x
                                tst_zx rINC,fINC,0
4479 : 08              >            php         ;save flags
447a : b552            >            lda zpt,x
447c : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
447f : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
4481 : 208553          >        jsr report_error
                       >
4484 :                 >skip2875
                       >
4484 : 68              >            pla         ;load status
                       >            eor_flag 0
4485 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4487 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
448a : f003            >        beq skip2878
                       >        trap            ;failed not equal (non zero)
448c : 208553          >        jsr report_error
                       >
448f :                 >skip2878
                       >
                        
448f : b552                     lda zpt,x
4491 : ca                       dex
4492 : 3008                     bmi tdec5
4494 : e001                     cpx #1
4496 : d0d9                     bne tdec4
4498 : a981                     lda #$81
449a : d0d5                     bne tdec4
449c :                  tdec5
449c : a200                     ldx #0
449e : a97e                     lda #$7e
44a0 : 9552             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
44a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44a4 : 48              >            pha         ;use stack to load status
44a5 : 28              >            plp
                        
44a6 : f652                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
44a8 : 08              >            php         ;save flags
44a9 : b552            >            lda zpt,x
44ab : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
44ae : f003            >        beq skip2883
                       >        trap            ;failed not equal (non zero)
44b0 : 208553          >        jsr report_error
                       >
44b3 :                 >skip2883
                       >
44b3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
44b4 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
44b6 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
44b9 : f003            >        beq skip2886
                       >        trap            ;failed not equal (non zero)
44bb : 208553          >        jsr report_error
                       >
44be :                 >skip2886
                       >
                        
44be : b552                     lda zpt,x
44c0 : e8                       inx
44c1 : e002                     cpx #2
44c3 : d002                     bne tinc15
44c5 : a9fe                     lda #$fe
44c7 : e005             tinc15  cpx #5
44c9 : d0d5                     bne tinc14
44cb : ca                       dex
44cc : a902                     lda #2
44ce : 9552             tdec14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
44d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44d2 : 48              >            pha         ;use stack to load status
44d3 : 28              >            plp
                        
44d4 : d652                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
44d6 : 08              >            php         ;save flags
44d7 : b552            >            lda zpt,x
44d9 : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
44dc : f003            >        beq skip2891
                       >        trap            ;failed not equal (non zero)
44de : 208553          >        jsr report_error
                       >
44e1 :                 >skip2891
                       >
44e1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
44e2 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
44e4 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
44e7 : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
44e9 : 208553          >        jsr report_error
                       >
44ec :                 >skip2894
                       >
                        
44ec : b552                     lda zpt,x
44ee : ca                       dex
44ef : 3008                     bmi tdec15
44f1 : e001                     cpx #1
44f3 : d0d9                     bne tdec14
44f5 : a981                     lda #$81
44f7 : d0d5                     bne tdec14
44f9 :                  tdec15
                                next_test
44f9 : ad0011          >            lda test_case   ;previous test
44fc : c924            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
44fe : f003            >        beq skip2897
                       >        trap            ;failed not equal (non zero)
4500 : 208553          >        jsr report_error
                       >
4503 :                 >skip2897
                       >
0025 =                 >test_num = test_num + 1
4503 : a925            >            lda #test_num   ;*** next tests' number
4505 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; memory indexed
4508 : a200                     ldx #0
450a : a97e                     lda #$7e
450c : 9d0311           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
450f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4511 : 48              >            pha         ;use stack to load status
4512 : 28              >            plp
                        
4513 : fe0311                   inc abst,x
                                tst_absx rINC,fINC,0
4516 : 08              >            php         ;save flags
4517 : bd0311          >            lda abst,x
451a : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
451d : f003            >        beq skip2902
                       >        trap            ;failed not equal (non zero)
451f : 208553          >        jsr report_error
                       >
4522 :                 >skip2902
                       >
4522 : 68              >            pla         ;load status
                       >            eor_flag 0
4523 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4525 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
4528 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
452a : 208553          >        jsr report_error
                       >
452d :                 >skip2905
                       >
                        
452d : bd0311                   lda abst,x
4530 : e8                       inx
4531 : e002                     cpx #2
4533 : d002                     bne tinc7
4535 : a9fe                     lda #$fe
4537 : e005             tinc7   cpx #5
4539 : d0d1                     bne tinc6
453b : ca                       dex
453c : a902                     lda #2
453e : 9d0311           tdec6   sta abst,x
                                set_stat 0
                       >            load_flag 0
4541 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4543 : 48              >            pha         ;use stack to load status
4544 : 28              >            plp
                        
4545 : de0311                   dec abst,x
                                tst_absx rINC,fINC,0
4548 : 08              >            php         ;save flags
4549 : bd0311          >            lda abst,x
454c : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
454f : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
4551 : 208553          >        jsr report_error
                       >
4554 :                 >skip2910
                       >
4554 : 68              >            pla         ;load status
                       >            eor_flag 0
4555 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4557 : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
455a : f003            >        beq skip2913
                       >        trap            ;failed not equal (non zero)
455c : 208553          >        jsr report_error
                       >
455f :                 >skip2913
                       >
                        
455f : bd0311                   lda abst,x
4562 : ca                       dex
4563 : 3008                     bmi tdec7
4565 : e001                     cpx #1
4567 : d0d5                     bne tdec6
4569 : a981                     lda #$81
456b : d0d1                     bne tdec6
456d :                  tdec7
456d : a200                     ldx #0
456f : a97e                     lda #$7e
4571 : 9d0311           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
4574 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4576 : 48              >            pha         ;use stack to load status
4577 : 28              >            plp
                        
4578 : fe0311                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
457b : 08              >            php         ;save flags
457c : bd0311          >            lda abst,x
457f : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
4582 : f003            >        beq skip2918
                       >        trap            ;failed not equal (non zero)
4584 : 208553          >        jsr report_error
                       >
4587 :                 >skip2918
                       >
4587 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4588 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
458a : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
458d : f003            >        beq skip2921
                       >        trap            ;failed not equal (non zero)
458f : 208553          >        jsr report_error
                       >
4592 :                 >skip2921
                       >
                        
4592 : bd0311                   lda abst,x
4595 : e8                       inx
4596 : e002                     cpx #2
4598 : d002                     bne tinc17
459a : a9fe                     lda #$fe
459c : e005             tinc17  cpx #5
459e : d0d1                     bne tinc16
45a0 : ca                       dex
45a1 : a902                     lda #2
45a3 : 9d0311           tdec16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
45a6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45a8 : 48              >            pha         ;use stack to load status
45a9 : 28              >            plp
                        
45aa : de0311                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
45ad : 08              >            php         ;save flags
45ae : bd0311          >            lda abst,x
45b1 : dd5111          >            cmp rINC,x    ;test result
                       >            trap_ne
45b4 : f003            >        beq skip2926
                       >        trap            ;failed not equal (non zero)
45b6 : 208553          >        jsr report_error
                       >
45b9 :                 >skip2926
                       >
45b9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
45ba : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
45bc : dd5611          >            cmp fINC,x    ;test flags
                       >            trap_ne
45bf : f003            >        beq skip2929
                       >        trap            ;failed not equal (non zero)
45c1 : 208553          >        jsr report_error
                       >
45c4 :                 >skip2929
                       >
                        
45c4 : bd0311                   lda abst,x
45c7 : ca                       dex
45c8 : 3008                     bmi tdec17
45ca : e001                     cpx #1
45cc : d0d5                     bne tdec16
45ce : a981                     lda #$81
45d0 : d0d1                     bne tdec16
45d2 :                  tdec17
                                next_test
45d2 : ad0011          >            lda test_case   ;previous test
45d5 : c925            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
45d7 : f003            >        beq skip2932
                       >        trap            ;failed not equal (non zero)
45d9 : 208553          >        jsr report_error
                       >
45dc :                 >skip2932
                       >
0026 =                 >test_num = test_num + 1
45dc : a926            >            lda #test_num   ;*** next tests' number
45de : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA all addressing modes
                        ; AND
45e1 : a203                     ldx #3          ;immediate
45e3 : b564             tand    lda zpAN,x
45e5 : 8d0a11                   sta ex_andi+1   ;set AND # operand
                                set_ax  absANa,0
                       >            load_flag 0
45e8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45ea : 48              >            pha         ;use stack to load status
45eb : bd6b11          >            lda absANa,x    ;precharge accu
45ee : 28              >            plp
                        
45ef : 200911                   jsr ex_andi     ;execute AND # in RAM
                                tst_ax  absrlo,absflo,0
45f2 : 08              >            php         ;save flags
45f3 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
45f6 : f003            >        beq skip2937
                       >        trap            ;failed not equal (non zero)
45f8 : 208553          >        jsr report_error
                       >
45fb :                 >skip2937
                       >
45fb : 68              >            pla         ;load status
                       >            eor_flag 0
45fc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
45fe : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4601 : f003            >        beq skip2940
                       >        trap            ;failed not equal (non zero)
4603 : 208553          >        jsr report_error
                       >
4606 :                 >skip2940
                       >
                        
4606 : ca                       dex
4607 : 10da                     bpl tand
4609 : a203                     ldx #3
460b : b564             tand1   lda zpAN,x
460d : 8d0a11                   sta ex_andi+1   ;set AND # operand
                                set_ax  absANa,$ff
                       >            load_flag $ff
4610 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4612 : 48              >            pha         ;use stack to load status
4613 : bd6b11          >            lda absANa,x    ;precharge accu
4616 : 28              >            plp
                        
4617 : 200911                   jsr ex_andi     ;execute AND # in RAM
                                tst_ax  absrlo,absflo,$ff-fnz
461a : 08              >            php         ;save flags
461b : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
461e : f003            >        beq skip2945
                       >        trap            ;failed not equal (non zero)
4620 : 208553          >        jsr report_error
                       >
4623 :                 >skip2945
                       >
4623 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4624 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4626 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4629 : f003            >        beq skip2948
                       >        trap            ;failed not equal (non zero)
462b : 208553          >        jsr report_error
                       >
462e :                 >skip2948
                       >
                        
462e : ca                       dex
462f : 10da                     bpl tand1
                        
4631 : a203                     ldx #3      ;zp
4633 : b564             tand2   lda zpAN,x
4635 : 8552                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
4637 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4639 : 48              >            pha         ;use stack to load status
463a : bd6b11          >            lda absANa,x    ;precharge accu
463d : 28              >            plp
                        
463e : 2552                     and zpt
                                tst_ax  absrlo,absflo,0
4640 : 08              >            php         ;save flags
4641 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4644 : f003            >        beq skip2953
                       >        trap            ;failed not equal (non zero)
4646 : 208553          >        jsr report_error
                       >
4649 :                 >skip2953
                       >
4649 : 68              >            pla         ;load status
                       >            eor_flag 0
464a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
464c : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
464f : f003            >        beq skip2956
                       >        trap            ;failed not equal (non zero)
4651 : 208553          >        jsr report_error
                       >
4654 :                 >skip2956
                       >
                        
4654 : ca                       dex
4655 : 10dc                     bpl tand2
4657 : a203                     ldx #3
4659 : b564             tand3   lda zpAN,x
465b : 8552                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
465d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
465f : 48              >            pha         ;use stack to load status
4660 : bd6b11          >            lda absANa,x    ;precharge accu
4663 : 28              >            plp
                        
4664 : 2552                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
4666 : 08              >            php         ;save flags
4667 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
466a : f003            >        beq skip2961
                       >        trap            ;failed not equal (non zero)
466c : 208553          >        jsr report_error
                       >
466f :                 >skip2961
                       >
466f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4670 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4672 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4675 : f003            >        beq skip2964
                       >        trap            ;failed not equal (non zero)
4677 : 208553          >        jsr report_error
                       >
467a :                 >skip2964
                       >
                        
467a : ca                       dex
467b : 10dc                     bpl tand3
                        
467d : a203                     ldx #3      ;abs
467f : b564             tand4   lda zpAN,x
4681 : 8d0311                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
4684 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4686 : 48              >            pha         ;use stack to load status
4687 : bd6b11          >            lda absANa,x    ;precharge accu
468a : 28              >            plp
                        
468b : 2d0311                   and abst
                                tst_ax  absrlo,absflo,0
468e : 08              >            php         ;save flags
468f : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4692 : f003            >        beq skip2969
                       >        trap            ;failed not equal (non zero)
4694 : 208553          >        jsr report_error
                       >
4697 :                 >skip2969
                       >
4697 : 68              >            pla         ;load status
                       >            eor_flag 0
4698 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
469a : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
469d : f003            >        beq skip2972
                       >        trap            ;failed not equal (non zero)
469f : 208553          >        jsr report_error
                       >
46a2 :                 >skip2972
                       >
                        
46a2 : ca                       dex
46a3 : 10da                     bpl tand4
46a5 : a203                     ldx #3
46a7 : b564             tand5   lda zpAN,x
46a9 : 8d0311                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
46ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46ae : 48              >            pha         ;use stack to load status
46af : bd6b11          >            lda absANa,x    ;precharge accu
46b2 : 28              >            plp
                        
46b3 : 2d0311                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
46b6 : 08              >            php         ;save flags
46b7 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
46ba : f003            >        beq skip2977
                       >        trap            ;failed not equal (non zero)
46bc : 208553          >        jsr report_error
                       >
46bf :                 >skip2977
                       >
46bf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
46c0 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
46c2 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
46c5 : f003            >        beq skip2980
                       >        trap            ;failed not equal (non zero)
46c7 : 208553          >        jsr report_error
                       >
46ca :                 >skip2980
                       >
                        
46ca : ca                       dex
46cb : 1002                     bpl tand6
                        
46cd : a203                     ldx #3      ;zp,x
46cf :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
46cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
46d1 : 48              >            pha         ;use stack to load status
46d2 : bd6b11          >            lda absANa,x    ;precharge accu
46d5 : 28              >            plp
                        
46d6 : 3564                     and zpAN,x
                                tst_ax  absrlo,absflo,0
46d8 : 08              >            php         ;save flags
46d9 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
46dc : f003            >        beq skip2985
                       >        trap            ;failed not equal (non zero)
46de : 208553          >        jsr report_error
                       >
46e1 :                 >skip2985
                       >
46e1 : 68              >            pla         ;load status
                       >            eor_flag 0
46e2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
46e4 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
46e7 : f003            >        beq skip2988
                       >        trap            ;failed not equal (non zero)
46e9 : 208553          >        jsr report_error
                       >
46ec :                 >skip2988
                       >
                        
46ec : ca                       dex
46ed : 10e0                     bpl tand6
46ef : a203                     ldx #3
46f1 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
46f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46f3 : 48              >            pha         ;use stack to load status
46f4 : bd6b11          >            lda absANa,x    ;precharge accu
46f7 : 28              >            plp
                        
46f8 : 3564                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
46fa : 08              >            php         ;save flags
46fb : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
46fe : f003            >        beq skip2993
                       >        trap            ;failed not equal (non zero)
4700 : 208553          >        jsr report_error
                       >
4703 :                 >skip2993
                       >
4703 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4704 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4706 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4709 : f003            >        beq skip2996
                       >        trap            ;failed not equal (non zero)
470b : 208553          >        jsr report_error
                       >
470e :                 >skip2996
                       >
                        
470e : ca                       dex
470f : 10e0                     bpl tand7
                        
4711 : a203                     ldx #3      ;abs,x
4713 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
4713 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4715 : 48              >            pha         ;use stack to load status
4716 : bd6b11          >            lda absANa,x    ;precharge accu
4719 : 28              >            plp
                        
471a : 3d5f11                   and absAN,x
                                tst_ax  absrlo,absflo,0
471d : 08              >            php         ;save flags
471e : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4721 : f003            >        beq skip3001
                       >        trap            ;failed not equal (non zero)
4723 : 208553          >        jsr report_error
                       >
4726 :                 >skip3001
                       >
4726 : 68              >            pla         ;load status
                       >            eor_flag 0
4727 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4729 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
472c : f003            >        beq skip3004
                       >        trap            ;failed not equal (non zero)
472e : 208553          >        jsr report_error
                       >
4731 :                 >skip3004
                       >
                        
4731 : ca                       dex
4732 : 10df                     bpl tand8
4734 : a203                     ldx #3
4736 :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
4736 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4738 : 48              >            pha         ;use stack to load status
4739 : bd6b11          >            lda absANa,x    ;precharge accu
473c : 28              >            plp
                        
473d : 3d5f11                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
4740 : 08              >            php         ;save flags
4741 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4744 : f003            >        beq skip3009
                       >        trap            ;failed not equal (non zero)
4746 : 208553          >        jsr report_error
                       >
4749 :                 >skip3009
                       >
4749 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
474a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
474c : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
474f : f003            >        beq skip3012
                       >        trap            ;failed not equal (non zero)
4751 : 208553          >        jsr report_error
                       >
4754 :                 >skip3012
                       >
                        
4754 : ca                       dex
4755 : 10df                     bpl tand9
                        
4757 : a003                     ldy #3      ;abs,y
4759 :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
4759 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
475b : 48              >            pha         ;use stack to load status
475c : b96b11          >            lda absANa,y    ;precharge accu
475f : 28              >            plp
                        
4760 : 395f11                   and absAN,y
                                tst_ay  absrlo,absflo,0
4763 : 08              >            php         ;save flags
4764 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4767 : f003            >        beq skip3017
                       >        trap            ;failed not equal (non zero)
4769 : 208553          >        jsr report_error
                       >
476c :                 >skip3017
                       >
476c : 68              >            pla         ;load status
                       >            eor_flag 0
476d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
476f : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4772 : f003            >        beq skip3020
                       >        trap            ;failed not equal (non zero)
4774 : 208553          >        jsr report_error
                       >
4777 :                 >skip3020
                       >
                        
4777 : 88                       dey
4778 : 10df                     bpl tand10
477a : a003                     ldy #3
477c :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
477c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
477e : 48              >            pha         ;use stack to load status
477f : b96b11          >            lda absANa,y    ;precharge accu
4782 : 28              >            plp
                        
4783 : 395f11                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
4786 : 08              >            php         ;save flags
4787 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
478a : f003            >        beq skip3025
                       >        trap            ;failed not equal (non zero)
478c : 208553          >        jsr report_error
                       >
478f :                 >skip3025
                       >
478f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4790 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4792 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4795 : f003            >        beq skip3028
                       >        trap            ;failed not equal (non zero)
4797 : 208553          >        jsr report_error
                       >
479a :                 >skip3028
                       >
                        
479a : 88                       dey
479b : 10df                     bpl tand11
                        
479d : a206                     ldx #6      ;(zp,x)
479f : a003                     ldy #3
47a1 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
47a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47a3 : 48              >            pha         ;use stack to load status
47a4 : b96b11          >            lda absANa,y    ;precharge accu
47a7 : 28              >            plp
                        
47a8 : 2182                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
47aa : 08              >            php         ;save flags
47ab : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
47ae : f003            >        beq skip3033
                       >        trap            ;failed not equal (non zero)
47b0 : 208553          >        jsr report_error
                       >
47b3 :                 >skip3033
                       >
47b3 : 68              >            pla         ;load status
                       >            eor_flag 0
47b4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
47b6 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
47b9 : f003            >        beq skip3036
                       >        trap            ;failed not equal (non zero)
47bb : 208553          >        jsr report_error
                       >
47be :                 >skip3036
                       >
                        
47be : ca                       dex
47bf : ca                       dex
47c0 : 88                       dey
47c1 : 10de                     bpl tand12
47c3 : a206                     ldx #6
47c5 : a003                     ldy #3
47c7 :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
47c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47c9 : 48              >            pha         ;use stack to load status
47ca : b96b11          >            lda absANa,y    ;precharge accu
47cd : 28              >            plp
                        
47ce : 2182                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
47d0 : 08              >            php         ;save flags
47d1 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
47d4 : f003            >        beq skip3041
                       >        trap            ;failed not equal (non zero)
47d6 : 208553          >        jsr report_error
                       >
47d9 :                 >skip3041
                       >
47d9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
47da : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
47dc : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
47df : f003            >        beq skip3044
                       >        trap            ;failed not equal (non zero)
47e1 : 208553          >        jsr report_error
                       >
47e4 :                 >skip3044
                       >
                        
47e4 : ca                       dex
47e5 : ca                       dex
47e6 : 88                       dey
47e7 : 10de                     bpl tand13
                        
47e9 : a003                     ldy #3      ;(zp),y
47eb :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
47eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47ed : 48              >            pha         ;use stack to load status
47ee : b96b11          >            lda absANa,y    ;precharge accu
47f1 : 28              >            plp
                        
47f2 : 3182                     and (indAN),y
                                tst_ay  absrlo,absflo,0
47f4 : 08              >            php         ;save flags
47f5 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
47f8 : f003            >        beq skip3049
                       >        trap            ;failed not equal (non zero)
47fa : 208553          >        jsr report_error
                       >
47fd :                 >skip3049
                       >
47fd : 68              >            pla         ;load status
                       >            eor_flag 0
47fe : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4800 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4803 : f003            >        beq skip3052
                       >        trap            ;failed not equal (non zero)
4805 : 208553          >        jsr report_error
                       >
4808 :                 >skip3052
                       >
                        
4808 : 88                       dey
4809 : 10e0                     bpl tand14
480b : a003                     ldy #3
480d :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
480d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
480f : 48              >            pha         ;use stack to load status
4810 : b96b11          >            lda absANa,y    ;precharge accu
4813 : 28              >            plp
                        
4814 : 3182                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
4816 : 08              >            php         ;save flags
4817 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
481a : f003            >        beq skip3057
                       >        trap            ;failed not equal (non zero)
481c : 208553          >        jsr report_error
                       >
481f :                 >skip3057
                       >
481f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4820 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4822 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4825 : f003            >        beq skip3060
                       >        trap            ;failed not equal (non zero)
4827 : 208553          >        jsr report_error
                       >
482a :                 >skip3060
                       >
                        
482a : 88                       dey
482b : 10e0                     bpl tand15
                                next_test
482d : ad0011          >            lda test_case   ;previous test
4830 : c926            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4832 : f003            >        beq skip3063
                       >        trap            ;failed not equal (non zero)
4834 : 208553          >        jsr report_error
                       >
4837 :                 >skip3063
                       >
0027 =                 >test_num = test_num + 1
4837 : a927            >            lda #test_num   ;*** next tests' number
4839 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; EOR
483c : a203                     ldx #3          ;immediate - self modifying code
483e : b568             teor    lda zpEO,x
4840 : 8d0d11                   sta ex_eori+1   ;set EOR # operand
                                set_ax  absEOa,0
                       >            load_flag 0
4843 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4845 : 48              >            pha         ;use stack to load status
4846 : bd6f11          >            lda absEOa,x    ;precharge accu
4849 : 28              >            plp
                        
484a : 200c11                   jsr ex_eori     ;execute EOR # in RAM
                                tst_ax  absrlo,absflo,0
484d : 08              >            php         ;save flags
484e : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4851 : f003            >        beq skip3068
                       >        trap            ;failed not equal (non zero)
4853 : 208553          >        jsr report_error
                       >
4856 :                 >skip3068
                       >
4856 : 68              >            pla         ;load status
                       >            eor_flag 0
4857 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4859 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
485c : f003            >        beq skip3071
                       >        trap            ;failed not equal (non zero)
485e : 208553          >        jsr report_error
                       >
4861 :                 >skip3071
                       >
                        
4861 : ca                       dex
4862 : 10da                     bpl teor
4864 : a203                     ldx #3
4866 : b568             teor1   lda zpEO,x
4868 : 8d0d11                   sta ex_eori+1   ;set EOR # operand
                                set_ax  absEOa,$ff
                       >            load_flag $ff
486b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
486d : 48              >            pha         ;use stack to load status
486e : bd6f11          >            lda absEOa,x    ;precharge accu
4871 : 28              >            plp
                        
4872 : 200c11                   jsr ex_eori     ;execute EOR # in RAM
                                tst_ax  absrlo,absflo,$ff-fnz
4875 : 08              >            php         ;save flags
4876 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4879 : f003            >        beq skip3076
                       >        trap            ;failed not equal (non zero)
487b : 208553          >        jsr report_error
                       >
487e :                 >skip3076
                       >
487e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
487f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4881 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4884 : f003            >        beq skip3079
                       >        trap            ;failed not equal (non zero)
4886 : 208553          >        jsr report_error
                       >
4889 :                 >skip3079
                       >
                        
4889 : ca                       dex
488a : 10da                     bpl teor1
                        
488c : a203                     ldx #3      ;zp
488e : b568             teor2    lda zpEO,x
4890 : 8552                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
4892 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4894 : 48              >            pha         ;use stack to load status
4895 : bd6f11          >            lda absEOa,x    ;precharge accu
4898 : 28              >            plp
                        
4899 : 4552                     eor zpt
                                tst_ax  absrlo,absflo,0
489b : 08              >            php         ;save flags
489c : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
489f : f003            >        beq skip3084
                       >        trap            ;failed not equal (non zero)
48a1 : 208553          >        jsr report_error
                       >
48a4 :                 >skip3084
                       >
48a4 : 68              >            pla         ;load status
                       >            eor_flag 0
48a5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
48a7 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
48aa : f003            >        beq skip3087
                       >        trap            ;failed not equal (non zero)
48ac : 208553          >        jsr report_error
                       >
48af :                 >skip3087
                       >
                        
48af : ca                       dex
48b0 : 10dc                     bpl teor2
48b2 : a203                     ldx #3
48b4 : b568             teor3   lda zpEO,x
48b6 : 8552                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
48b8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48ba : 48              >            pha         ;use stack to load status
48bb : bd6f11          >            lda absEOa,x    ;precharge accu
48be : 28              >            plp
                        
48bf : 4552                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
48c1 : 08              >            php         ;save flags
48c2 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
48c5 : f003            >        beq skip3092
                       >        trap            ;failed not equal (non zero)
48c7 : 208553          >        jsr report_error
                       >
48ca :                 >skip3092
                       >
48ca : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
48cb : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
48cd : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
48d0 : f003            >        beq skip3095
                       >        trap            ;failed not equal (non zero)
48d2 : 208553          >        jsr report_error
                       >
48d5 :                 >skip3095
                       >
                        
48d5 : ca                       dex
48d6 : 10dc                     bpl teor3
                        
48d8 : a203                     ldx #3      ;abs
48da : b568             teor4   lda zpEO,x
48dc : 8d0311                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
48df : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48e1 : 48              >            pha         ;use stack to load status
48e2 : bd6f11          >            lda absEOa,x    ;precharge accu
48e5 : 28              >            plp
                        
48e6 : 4d0311                   eor abst
                                tst_ax  absrlo,absflo,0
48e9 : 08              >            php         ;save flags
48ea : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
48ed : f003            >        beq skip3100
                       >        trap            ;failed not equal (non zero)
48ef : 208553          >        jsr report_error
                       >
48f2 :                 >skip3100
                       >
48f2 : 68              >            pla         ;load status
                       >            eor_flag 0
48f3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
48f5 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
48f8 : f003            >        beq skip3103
                       >        trap            ;failed not equal (non zero)
48fa : 208553          >        jsr report_error
                       >
48fd :                 >skip3103
                       >
                        
48fd : ca                       dex
48fe : 10da                     bpl teor4
4900 : a203                     ldx #3
4902 : b568             teor5   lda zpEO,x
4904 : 8d0311                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4907 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4909 : 48              >            pha         ;use stack to load status
490a : bd6f11          >            lda absEOa,x    ;precharge accu
490d : 28              >            plp
                        
490e : 4d0311                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
4911 : 08              >            php         ;save flags
4912 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4915 : f003            >        beq skip3108
                       >        trap            ;failed not equal (non zero)
4917 : 208553          >        jsr report_error
                       >
491a :                 >skip3108
                       >
491a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
491b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
491d : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4920 : f003            >        beq skip3111
                       >        trap            ;failed not equal (non zero)
4922 : 208553          >        jsr report_error
                       >
4925 :                 >skip3111
                       >
                        
4925 : ca                       dex
4926 : 10da                     bpl teor5
                        
4928 : a203                     ldx #3      ;zp,x
492a :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
492a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
492c : 48              >            pha         ;use stack to load status
492d : bd6f11          >            lda absEOa,x    ;precharge accu
4930 : 28              >            plp
                        
4931 : 5568                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
4933 : 08              >            php         ;save flags
4934 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4937 : f003            >        beq skip3116
                       >        trap            ;failed not equal (non zero)
4939 : 208553          >        jsr report_error
                       >
493c :                 >skip3116
                       >
493c : 68              >            pla         ;load status
                       >            eor_flag 0
493d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
493f : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4942 : f003            >        beq skip3119
                       >        trap            ;failed not equal (non zero)
4944 : 208553          >        jsr report_error
                       >
4947 :                 >skip3119
                       >
                        
4947 : ca                       dex
4948 : 10e0                     bpl teor6
494a : a203                     ldx #3
494c :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
494c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
494e : 48              >            pha         ;use stack to load status
494f : bd6f11          >            lda absEOa,x    ;precharge accu
4952 : 28              >            plp
                        
4953 : 5568                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
4955 : 08              >            php         ;save flags
4956 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4959 : f003            >        beq skip3124
                       >        trap            ;failed not equal (non zero)
495b : 208553          >        jsr report_error
                       >
495e :                 >skip3124
                       >
495e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
495f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4961 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4964 : f003            >        beq skip3127
                       >        trap            ;failed not equal (non zero)
4966 : 208553          >        jsr report_error
                       >
4969 :                 >skip3127
                       >
                        
4969 : ca                       dex
496a : 10e0                     bpl teor7
                        
496c : a203                     ldx #3      ;abs,x
496e :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
496e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4970 : 48              >            pha         ;use stack to load status
4971 : bd6f11          >            lda absEOa,x    ;precharge accu
4974 : 28              >            plp
                        
4975 : 5d6311                   eor absEO,x
                                tst_ax  absrlo,absflo,0
4978 : 08              >            php         ;save flags
4979 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
497c : f003            >        beq skip3132
                       >        trap            ;failed not equal (non zero)
497e : 208553          >        jsr report_error
                       >
4981 :                 >skip3132
                       >
4981 : 68              >            pla         ;load status
                       >            eor_flag 0
4982 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4984 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4987 : f003            >        beq skip3135
                       >        trap            ;failed not equal (non zero)
4989 : 208553          >        jsr report_error
                       >
498c :                 >skip3135
                       >
                        
498c : ca                       dex
498d : 10df                     bpl teor8
498f : a203                     ldx #3
4991 :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4991 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4993 : 48              >            pha         ;use stack to load status
4994 : bd6f11          >            lda absEOa,x    ;precharge accu
4997 : 28              >            plp
                        
4998 : 5d6311                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
499b : 08              >            php         ;save flags
499c : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
499f : f003            >        beq skip3140
                       >        trap            ;failed not equal (non zero)
49a1 : 208553          >        jsr report_error
                       >
49a4 :                 >skip3140
                       >
49a4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
49a5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
49a7 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
49aa : f003            >        beq skip3143
                       >        trap            ;failed not equal (non zero)
49ac : 208553          >        jsr report_error
                       >
49af :                 >skip3143
                       >
                        
49af : ca                       dex
49b0 : 10df                     bpl teor9
                        
49b2 : a003                     ldy #3      ;abs,y
49b4 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
49b4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49b6 : 48              >            pha         ;use stack to load status
49b7 : b96f11          >            lda absEOa,y    ;precharge accu
49ba : 28              >            plp
                        
49bb : 596311                   eor absEO,y
                                tst_ay  absrlo,absflo,0
49be : 08              >            php         ;save flags
49bf : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
49c2 : f003            >        beq skip3148
                       >        trap            ;failed not equal (non zero)
49c4 : 208553          >        jsr report_error
                       >
49c7 :                 >skip3148
                       >
49c7 : 68              >            pla         ;load status
                       >            eor_flag 0
49c8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
49ca : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
49cd : f003            >        beq skip3151
                       >        trap            ;failed not equal (non zero)
49cf : 208553          >        jsr report_error
                       >
49d2 :                 >skip3151
                       >
                        
49d2 : 88                       dey
49d3 : 10df                     bpl teor10
49d5 : a003                     ldy #3
49d7 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
49d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49d9 : 48              >            pha         ;use stack to load status
49da : b96f11          >            lda absEOa,y    ;precharge accu
49dd : 28              >            plp
                        
49de : 596311                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
49e1 : 08              >            php         ;save flags
49e2 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
49e5 : f003            >        beq skip3156
                       >        trap            ;failed not equal (non zero)
49e7 : 208553          >        jsr report_error
                       >
49ea :                 >skip3156
                       >
49ea : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
49eb : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
49ed : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
49f0 : f003            >        beq skip3159
                       >        trap            ;failed not equal (non zero)
49f2 : 208553          >        jsr report_error
                       >
49f5 :                 >skip3159
                       >
                        
49f5 : 88                       dey
49f6 : 10df                     bpl teor11
                        
49f8 : a206                     ldx #6      ;(zp,x)
49fa : a003                     ldy #3
49fc :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
49fc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49fe : 48              >            pha         ;use stack to load status
49ff : b96f11          >            lda absEOa,y    ;precharge accu
4a02 : 28              >            plp
                        
4a03 : 418a                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
4a05 : 08              >            php         ;save flags
4a06 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4a09 : f003            >        beq skip3164
                       >        trap            ;failed not equal (non zero)
4a0b : 208553          >        jsr report_error
                       >
4a0e :                 >skip3164
                       >
4a0e : 68              >            pla         ;load status
                       >            eor_flag 0
4a0f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4a11 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4a14 : f003            >        beq skip3167
                       >        trap            ;failed not equal (non zero)
4a16 : 208553          >        jsr report_error
                       >
4a19 :                 >skip3167
                       >
                        
4a19 : ca                       dex
4a1a : ca                       dex
4a1b : 88                       dey
4a1c : 10de                     bpl teor12
4a1e : a206                     ldx #6
4a20 : a003                     ldy #3
4a22 :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4a22 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a24 : 48              >            pha         ;use stack to load status
4a25 : b96f11          >            lda absEOa,y    ;precharge accu
4a28 : 28              >            plp
                        
4a29 : 418a                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
4a2b : 08              >            php         ;save flags
4a2c : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4a2f : f003            >        beq skip3172
                       >        trap            ;failed not equal (non zero)
4a31 : 208553          >        jsr report_error
                       >
4a34 :                 >skip3172
                       >
4a34 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4a35 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4a37 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4a3a : f003            >        beq skip3175
                       >        trap            ;failed not equal (non zero)
4a3c : 208553          >        jsr report_error
                       >
4a3f :                 >skip3175
                       >
                        
4a3f : ca                       dex
4a40 : ca                       dex
4a41 : 88                       dey
4a42 : 10de                     bpl teor13
                        
4a44 : a003                     ldy #3      ;(zp),y
4a46 :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
4a46 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a48 : 48              >            pha         ;use stack to load status
4a49 : b96f11          >            lda absEOa,y    ;precharge accu
4a4c : 28              >            plp
                        
4a4d : 518a                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
4a4f : 08              >            php         ;save flags
4a50 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4a53 : f003            >        beq skip3180
                       >        trap            ;failed not equal (non zero)
4a55 : 208553          >        jsr report_error
                       >
4a58 :                 >skip3180
                       >
4a58 : 68              >            pla         ;load status
                       >            eor_flag 0
4a59 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4a5b : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4a5e : f003            >        beq skip3183
                       >        trap            ;failed not equal (non zero)
4a60 : 208553          >        jsr report_error
                       >
4a63 :                 >skip3183
                       >
                        
4a63 : 88                       dey
4a64 : 10e0                     bpl teor14
4a66 : a003                     ldy #3
4a68 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4a68 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a6a : 48              >            pha         ;use stack to load status
4a6b : b96f11          >            lda absEOa,y    ;precharge accu
4a6e : 28              >            plp
                        
4a6f : 518a                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
4a71 : 08              >            php         ;save flags
4a72 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4a75 : f003            >        beq skip3188
                       >        trap            ;failed not equal (non zero)
4a77 : 208553          >        jsr report_error
                       >
4a7a :                 >skip3188
                       >
4a7a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4a7b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4a7d : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4a80 : f003            >        beq skip3191
                       >        trap            ;failed not equal (non zero)
4a82 : 208553          >        jsr report_error
                       >
4a85 :                 >skip3191
                       >
                        
4a85 : 88                       dey
4a86 : 10e0                     bpl teor15
                                next_test
4a88 : ad0011          >            lda test_case   ;previous test
4a8b : c927            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4a8d : f003            >        beq skip3194
                       >        trap            ;failed not equal (non zero)
4a8f : 208553          >        jsr report_error
                       >
4a92 :                 >skip3194
                       >
0028 =                 >test_num = test_num + 1
4a92 : a928            >            lda #test_num   ;*** next tests' number
4a94 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; OR
4a97 : a203                     ldx #3          ;immediate - self modifying code
4a99 : b560             tora    lda zpOR,x
4a9b : 8d1011                   sta ex_orai+1   ;set ORA # operand
                                set_ax  absORa,0
                       >            load_flag 0
4a9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4aa0 : 48              >            pha         ;use stack to load status
4aa1 : bd6711          >            lda absORa,x    ;precharge accu
4aa4 : 28              >            plp
                        
4aa5 : 200f11                   jsr ex_orai     ;execute ORA # in RAM
                                tst_ax  absrlo,absflo,0
4aa8 : 08              >            php         ;save flags
4aa9 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4aac : f003            >        beq skip3199
                       >        trap            ;failed not equal (non zero)
4aae : 208553          >        jsr report_error
                       >
4ab1 :                 >skip3199
                       >
4ab1 : 68              >            pla         ;load status
                       >            eor_flag 0
4ab2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4ab4 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4ab7 : f003            >        beq skip3202
                       >        trap            ;failed not equal (non zero)
4ab9 : 208553          >        jsr report_error
                       >
4abc :                 >skip3202
                       >
                        
4abc : ca                       dex
4abd : 10da                     bpl tora
4abf : a203                     ldx #3
4ac1 : b560             tora1   lda zpOR,x
4ac3 : 8d1011                   sta ex_orai+1   ;set ORA # operand
                                set_ax  absORa,$ff
                       >            load_flag $ff
4ac6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ac8 : 48              >            pha         ;use stack to load status
4ac9 : bd6711          >            lda absORa,x    ;precharge accu
4acc : 28              >            plp
                        
4acd : 200f11                   jsr ex_orai     ;execute ORA # in RAM
                                tst_ax  absrlo,absflo,$ff-fnz
4ad0 : 08              >            php         ;save flags
4ad1 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4ad4 : f003            >        beq skip3207
                       >        trap            ;failed not equal (non zero)
4ad6 : 208553          >        jsr report_error
                       >
4ad9 :                 >skip3207
                       >
4ad9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4ada : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4adc : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4adf : f003            >        beq skip3210
                       >        trap            ;failed not equal (non zero)
4ae1 : 208553          >        jsr report_error
                       >
4ae4 :                 >skip3210
                       >
                        
4ae4 : ca                       dex
4ae5 : 10da                     bpl tora1
                        
4ae7 : a203                     ldx #3      ;zp
4ae9 : b560             tora2   lda zpOR,x
4aeb : 8552                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
4aed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4aef : 48              >            pha         ;use stack to load status
4af0 : bd6711          >            lda absORa,x    ;precharge accu
4af3 : 28              >            plp
                        
4af4 : 0552                     ora zpt
                                tst_ax  absrlo,absflo,0
4af6 : 08              >            php         ;save flags
4af7 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4afa : f003            >        beq skip3215
                       >        trap            ;failed not equal (non zero)
4afc : 208553          >        jsr report_error
                       >
4aff :                 >skip3215
                       >
4aff : 68              >            pla         ;load status
                       >            eor_flag 0
4b00 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4b02 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4b05 : f003            >        beq skip3218
                       >        trap            ;failed not equal (non zero)
4b07 : 208553          >        jsr report_error
                       >
4b0a :                 >skip3218
                       >
                        
4b0a : ca                       dex
4b0b : 10dc                     bpl tora2
4b0d : a203                     ldx #3
4b0f : b560             tora3   lda zpOR,x
4b11 : 8552                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
4b13 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b15 : 48              >            pha         ;use stack to load status
4b16 : bd6711          >            lda absORa,x    ;precharge accu
4b19 : 28              >            plp
                        
4b1a : 0552                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
4b1c : 08              >            php         ;save flags
4b1d : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4b20 : f003            >        beq skip3223
                       >        trap            ;failed not equal (non zero)
4b22 : 208553          >        jsr report_error
                       >
4b25 :                 >skip3223
                       >
4b25 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4b26 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4b28 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4b2b : f003            >        beq skip3226
                       >        trap            ;failed not equal (non zero)
4b2d : 208553          >        jsr report_error
                       >
4b30 :                 >skip3226
                       >
                        
4b30 : ca                       dex
4b31 : 10dc                     bpl tora3
                        
4b33 : a203                     ldx #3      ;abs
4b35 : b560             tora4   lda zpOR,x
4b37 : 8d0311                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
4b3a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b3c : 48              >            pha         ;use stack to load status
4b3d : bd6711          >            lda absORa,x    ;precharge accu
4b40 : 28              >            plp
                        
4b41 : 0d0311                   ora abst
                                tst_ax  absrlo,absflo,0
4b44 : 08              >            php         ;save flags
4b45 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4b48 : f003            >        beq skip3231
                       >        trap            ;failed not equal (non zero)
4b4a : 208553          >        jsr report_error
                       >
4b4d :                 >skip3231
                       >
4b4d : 68              >            pla         ;load status
                       >            eor_flag 0
4b4e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4b50 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4b53 : f003            >        beq skip3234
                       >        trap            ;failed not equal (non zero)
4b55 : 208553          >        jsr report_error
                       >
4b58 :                 >skip3234
                       >
                        
4b58 : ca                       dex
4b59 : 10da                     bpl tora4
4b5b : a203                     ldx #3
4b5d : b560             tora5   lda zpOR,x
4b5f : 8d0311                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
4b62 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b64 : 48              >            pha         ;use stack to load status
4b65 : bd6711          >            lda absORa,x    ;precharge accu
4b68 : 28              >            plp
                        
4b69 : 0d0311                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
4b6c : 08              >            php         ;save flags
4b6d : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4b70 : f003            >        beq skip3239
                       >        trap            ;failed not equal (non zero)
4b72 : 208553          >        jsr report_error
                       >
4b75 :                 >skip3239
                       >
4b75 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4b76 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4b78 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4b7b : f003            >        beq skip3242
                       >        trap            ;failed not equal (non zero)
4b7d : 208553          >        jsr report_error
                       >
4b80 :                 >skip3242
                       >
                        
4b80 : ca                       dex
4b81 : 1002                     bpl tora6
                        
4b83 : a203                     ldx #3      ;zp,x
4b85 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
4b85 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b87 : 48              >            pha         ;use stack to load status
4b88 : bd6711          >            lda absORa,x    ;precharge accu
4b8b : 28              >            plp
                        
4b8c : 1560                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
4b8e : 08              >            php         ;save flags
4b8f : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4b92 : f003            >        beq skip3247
                       >        trap            ;failed not equal (non zero)
4b94 : 208553          >        jsr report_error
                       >
4b97 :                 >skip3247
                       >
4b97 : 68              >            pla         ;load status
                       >            eor_flag 0
4b98 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4b9a : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4b9d : f003            >        beq skip3250
                       >        trap            ;failed not equal (non zero)
4b9f : 208553          >        jsr report_error
                       >
4ba2 :                 >skip3250
                       >
                        
4ba2 : ca                       dex
4ba3 : 10e0                     bpl tora6
4ba5 : a203                     ldx #3
4ba7 :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
4ba7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ba9 : 48              >            pha         ;use stack to load status
4baa : bd6711          >            lda absORa,x    ;precharge accu
4bad : 28              >            plp
                        
4bae : 1560                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
4bb0 : 08              >            php         ;save flags
4bb1 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4bb4 : f003            >        beq skip3255
                       >        trap            ;failed not equal (non zero)
4bb6 : 208553          >        jsr report_error
                       >
4bb9 :                 >skip3255
                       >
4bb9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4bba : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4bbc : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4bbf : f003            >        beq skip3258
                       >        trap            ;failed not equal (non zero)
4bc1 : 208553          >        jsr report_error
                       >
4bc4 :                 >skip3258
                       >
                        
4bc4 : ca                       dex
4bc5 : 10e0                     bpl tora7
                        
4bc7 : a203                     ldx #3      ;abs,x
4bc9 :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
4bc9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4bcb : 48              >            pha         ;use stack to load status
4bcc : bd6711          >            lda absORa,x    ;precharge accu
4bcf : 28              >            plp
                        
4bd0 : 1d5b11                   ora absOR,x
                                tst_ax  absrlo,absflo,0
4bd3 : 08              >            php         ;save flags
4bd4 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4bd7 : f003            >        beq skip3263
                       >        trap            ;failed not equal (non zero)
4bd9 : 208553          >        jsr report_error
                       >
4bdc :                 >skip3263
                       >
4bdc : 68              >            pla         ;load status
                       >            eor_flag 0
4bdd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4bdf : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4be2 : f003            >        beq skip3266
                       >        trap            ;failed not equal (non zero)
4be4 : 208553          >        jsr report_error
                       >
4be7 :                 >skip3266
                       >
                        
4be7 : ca                       dex
4be8 : 10df                     bpl tora8
4bea : a203                     ldx #3
4bec :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
4bec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4bee : 48              >            pha         ;use stack to load status
4bef : bd6711          >            lda absORa,x    ;precharge accu
4bf2 : 28              >            plp
                        
4bf3 : 1d5b11                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
4bf6 : 08              >            php         ;save flags
4bf7 : dd7311          >            cmp absrlo,x    ;test result
                       >            trap_ne
4bfa : f003            >        beq skip3271
                       >        trap            ;failed not equal (non zero)
4bfc : 208553          >        jsr report_error
                       >
4bff :                 >skip3271
                       >
4bff : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4c00 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4c02 : dd7711          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4c05 : f003            >        beq skip3274
                       >        trap            ;failed not equal (non zero)
4c07 : 208553          >        jsr report_error
                       >
4c0a :                 >skip3274
                       >
                        
4c0a : ca                       dex
4c0b : 10df                     bpl tora9
                        
4c0d : a003                     ldy #3      ;abs,y
4c0f :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
4c0f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c11 : 48              >            pha         ;use stack to load status
4c12 : b96711          >            lda absORa,y    ;precharge accu
4c15 : 28              >            plp
                        
4c16 : 195b11                   ora absOR,y
                                tst_ay  absrlo,absflo,0
4c19 : 08              >            php         ;save flags
4c1a : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4c1d : f003            >        beq skip3279
                       >        trap            ;failed not equal (non zero)
4c1f : 208553          >        jsr report_error
                       >
4c22 :                 >skip3279
                       >
4c22 : 68              >            pla         ;load status
                       >            eor_flag 0
4c23 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4c25 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4c28 : f003            >        beq skip3282
                       >        trap            ;failed not equal (non zero)
4c2a : 208553          >        jsr report_error
                       >
4c2d :                 >skip3282
                       >
                        
4c2d : 88                       dey
4c2e : 10df                     bpl tora10
4c30 : a003                     ldy #3
4c32 :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
4c32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c34 : 48              >            pha         ;use stack to load status
4c35 : b96711          >            lda absORa,y    ;precharge accu
4c38 : 28              >            plp
                        
4c39 : 195b11                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
4c3c : 08              >            php         ;save flags
4c3d : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4c40 : f003            >        beq skip3287
                       >        trap            ;failed not equal (non zero)
4c42 : 208553          >        jsr report_error
                       >
4c45 :                 >skip3287
                       >
4c45 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4c46 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4c48 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4c4b : f003            >        beq skip3290
                       >        trap            ;failed not equal (non zero)
4c4d : 208553          >        jsr report_error
                       >
4c50 :                 >skip3290
                       >
                        
4c50 : 88                       dey
4c51 : 10df                     bpl tora11
                        
4c53 : a206                     ldx #6      ;(zp,x)
4c55 : a003                     ldy #3
4c57 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
4c57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c59 : 48              >            pha         ;use stack to load status
4c5a : b96711          >            lda absORa,y    ;precharge accu
4c5d : 28              >            plp
                        
4c5e : 0192                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
4c60 : 08              >            php         ;save flags
4c61 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4c64 : f003            >        beq skip3295
                       >        trap            ;failed not equal (non zero)
4c66 : 208553          >        jsr report_error
                       >
4c69 :                 >skip3295
                       >
4c69 : 68              >            pla         ;load status
                       >            eor_flag 0
4c6a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4c6c : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4c6f : f003            >        beq skip3298
                       >        trap            ;failed not equal (non zero)
4c71 : 208553          >        jsr report_error
                       >
4c74 :                 >skip3298
                       >
                        
4c74 : ca                       dex
4c75 : ca                       dex
4c76 : 88                       dey
4c77 : 10de                     bpl tora12
4c79 : a206                     ldx #6
4c7b : a003                     ldy #3
4c7d :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
4c7d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c7f : 48              >            pha         ;use stack to load status
4c80 : b96711          >            lda absORa,y    ;precharge accu
4c83 : 28              >            plp
                        
4c84 : 0192                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
4c86 : 08              >            php         ;save flags
4c87 : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4c8a : f003            >        beq skip3303
                       >        trap            ;failed not equal (non zero)
4c8c : 208553          >        jsr report_error
                       >
4c8f :                 >skip3303
                       >
4c8f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4c90 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4c92 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4c95 : f003            >        beq skip3306
                       >        trap            ;failed not equal (non zero)
4c97 : 208553          >        jsr report_error
                       >
4c9a :                 >skip3306
                       >
                        
4c9a : ca                       dex
4c9b : ca                       dex
4c9c : 88                       dey
4c9d : 10de                     bpl tora13
                        
4c9f : a003                     ldy #3      ;(zp),y
4ca1 :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
4ca1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ca3 : 48              >            pha         ;use stack to load status
4ca4 : b96711          >            lda absORa,y    ;precharge accu
4ca7 : 28              >            plp
                        
4ca8 : 1192                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
4caa : 08              >            php         ;save flags
4cab : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4cae : f003            >        beq skip3311
                       >        trap            ;failed not equal (non zero)
4cb0 : 208553          >        jsr report_error
                       >
4cb3 :                 >skip3311
                       >
4cb3 : 68              >            pla         ;load status
                       >            eor_flag 0
4cb4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4cb6 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4cb9 : f003            >        beq skip3314
                       >        trap            ;failed not equal (non zero)
4cbb : 208553          >        jsr report_error
                       >
4cbe :                 >skip3314
                       >
                        
4cbe : 88                       dey
4cbf : 10e0                     bpl tora14
4cc1 : a003                     ldy #3
4cc3 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
4cc3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4cc5 : 48              >            pha         ;use stack to load status
4cc6 : b96711          >            lda absORa,y    ;precharge accu
4cc9 : 28              >            plp
                        
4cca : 1192                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
4ccc : 08              >            php         ;save flags
4ccd : d97311          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4cd0 : f003            >        beq skip3319
                       >        trap            ;failed not equal (non zero)
4cd2 : 208553          >        jsr report_error
                       >
4cd5 :                 >skip3319
                       >
4cd5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4cd6 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4cd8 : d97711          >            cmp absflo,y    ;test flags
                       >            trap_ne
4cdb : f003            >        beq skip3322
                       >        trap            ;failed not equal (non zero)
4cdd : 208553          >        jsr report_error
                       >
4ce0 :                 >skip3322
                       >
                        
4ce0 : 88                       dey
4ce1 : 10e0                     bpl tora15
                            if I_flag = 3
4ce3 : 58                       cli
                            endif
                                next_test
4ce4 : ad0011          >            lda test_case   ;previous test
4ce7 : c928            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4ce9 : f003            >        beq skip3325
                       >        trap            ;failed not equal (non zero)
4ceb : 208553          >        jsr report_error
                       >
4cee :                 >skip3325
                       >
0029 =                 >test_num = test_num + 1
4cee : a929            >            lda #test_num   ;*** next tests' number
4cf0 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
4cf3 : d8                       cld
4cf4 : a254                     ldx #ad2        ;for indexed test
4cf6 : a0ff                     ldy #$ff        ;max range
4cf8 : a900                     lda #0          ;start with adding zeroes & no carry
4cfa : 8552                     sta adfc        ;carry in - for diag
4cfc : 8553                     sta ad1         ;operand 1 - accumulator
4cfe : 8554                     sta ad2         ;operand 2 - memory or immediate
4d00 : 8d0311                   sta ada2        ;non zp
4d03 : 8555                     sta adrl        ;expected result bits 0-7
4d05 : 8556                     sta adrh        ;expected result bit 8 (carry out)
4d07 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
4d09 : 8558                     sta sb2
4d0b : 8d0411                   sta sba2        ;non zp
4d0e : a902                     lda #2          ;expected Z-flag
4d10 : 8557                     sta adrf
4d12 : 18               tadd    clc             ;test with carry clear
4d13 : 200850                   jsr chkadd
4d16 : e652                     inc adfc        ;now with carry
4d18 : e655                     inc adrl        ;result +1
4d1a : 08                       php             ;save N & Z from low result
4d1b : 08                       php
4d1c : 68                       pla             ;accu holds expected flags
4d1d : 2982                     and #$82        ;mask N & Z
4d1f : 28                       plp
4d20 : d002                     bne tadd1
4d22 : e656                     inc adrh        ;result bit 8 - carry
4d24 : 0556             tadd1   ora adrh        ;merge C to expected flags
4d26 : 8557                     sta adrf        ;save expected flags except overflow
4d28 : 38                       sec             ;test with carry set
4d29 : 200850                   jsr chkadd
4d2c : c652                     dec adfc        ;same for operand +1 but no carry
4d2e : e653                     inc ad1
4d30 : d0e0                     bne tadd        ;iterate op1
4d32 : a900                     lda #0          ;preset result to op2 when op1 = 0
4d34 : 8556                     sta adrh
4d36 : ee0311                   inc ada2
4d39 : e654                     inc ad2
4d3b : 08                       php             ;save NZ as operand 2 becomes the new result
4d3c : 68                       pla
4d3d : 2982                     and #$82        ;mask N00000Z0
4d3f : 8557                     sta adrf        ;no need to check carry as we are adding to 0
4d41 : c658                     dec sb2         ;complement subtract operand 2
4d43 : ce0411                   dec sba2
4d46 : a554                     lda ad2
4d48 : 8555                     sta adrl
4d4a : d0c6                     bne tadd        ;iterate op2
                            if disable_decimal < 1
                                next_test
4d4c : ad0011          >            lda test_case   ;previous test
4d4f : c929            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4d51 : f003            >        beq skip3328
                       >        trap            ;failed not equal (non zero)
4d53 : 208553          >        jsr report_error
                       >
4d56 :                 >skip3328
                       >
002a =                 >test_num = test_num + 1
4d56 : a92a            >            lda #test_num   ;*** next tests' number
4d58 : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
4d5b : f8                       sed
4d5c : a254                     ldx #ad2        ;for indexed test
4d5e : a0ff                     ldy #$ff        ;max range
4d60 : a999                     lda #$99        ;start with adding 99 to 99 with carry
4d62 : 8553                     sta ad1         ;operand 1 - accumulator
4d64 : 8554                     sta ad2         ;operand 2 - memory or immediate
4d66 : 8d0311                   sta ada2        ;non zp
4d69 : 8555                     sta adrl        ;expected result bits 0-7
4d6b : a901                     lda #1          ;set carry in & out
4d6d : 8552                     sta adfc        ;carry in - for diag
4d6f : 8556                     sta adrh        ;expected result bit 8 (carry out)
4d71 : a900                     lda #0          ;complemented operand 2 for subtract
4d73 : 8558                     sta sb2
4d75 : 8d0411                   sta sba2        ;non zp
4d78 : 38               tdad    sec             ;test with carry set
4d79 : 20754e                   jsr chkdad
4d7c : c652                     dec adfc        ;now with carry clear
4d7e : a555                     lda adrl        ;decimal adjust result
4d80 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
4d82 : c656                     dec adrh
4d84 : a999                     lda #$99
4d86 : 8555                     sta adrl
4d88 : d012                     bne tdad3
4d8a : 290f             tdad1   and #$f         ;lower nibble mask
4d8c : d00c                     bne tdad2       ;no decimal adjust needed
4d8e : c655                     dec adrl        ;decimal adjust (?0-6)
4d90 : c655                     dec adrl
4d92 : c655                     dec adrl
4d94 : c655                     dec adrl
4d96 : c655                     dec adrl
4d98 : c655                     dec adrl
4d9a : c655             tdad2   dec adrl        ;result -1
4d9c : 18               tdad3   clc             ;test with carry clear
4d9d : 20754e                   jsr chkdad
4da0 : e652                     inc adfc        ;same for operand -1 but with carry
4da2 : a553                     lda ad1         ;decimal adjust operand 1
4da4 : f015                     beq tdad5       ;iterate operand 2
4da6 : 290f                     and #$f         ;lower nibble mask
4da8 : d00c                     bne tdad4       ;skip decimal adjust
4daa : c653                     dec ad1         ;decimal adjust (?0-6)
4dac : c653                     dec ad1
4dae : c653                     dec ad1
4db0 : c653                     dec ad1
4db2 : c653                     dec ad1
4db4 : c653                     dec ad1
4db6 : c653             tdad4   dec ad1         ;operand 1 -1
4db8 : 4c784d                   jmp tdad        ;iterate op1
                        
4dbb : a999             tdad5   lda #$99        ;precharge op1 max
4dbd : 8553                     sta ad1
4dbf : a554                     lda ad2         ;decimal adjust operand 2
4dc1 : f030                     beq tdad7       ;end of iteration
4dc3 : 290f                     and #$f         ;lower nibble mask
4dc5 : d018                     bne tdad6       ;skip decimal adjust
4dc7 : c654                     dec ad2         ;decimal adjust (?0-6)
4dc9 : c654                     dec ad2
4dcb : c654                     dec ad2
4dcd : c654                     dec ad2
4dcf : c654                     dec ad2
4dd1 : c654                     dec ad2
4dd3 : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
4dd5 : e658                     inc sb2
4dd7 : e658                     inc sb2
4dd9 : e658                     inc sb2
4ddb : e658                     inc sb2
4ddd : e658                     inc sb2
4ddf : c654             tdad6   dec ad2         ;operand 2 -1
4de1 : e658                     inc sb2         ;complemented operand for subtract
4de3 : a558                     lda sb2
4de5 : 8d0411                   sta sba2        ;copy as non zp operand
4de8 : a554                     lda ad2
4dea : 8d0311                   sta ada2        ;copy as non zp operand
4ded : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
4def : e656                     inc adrh        ;result carry
4df1 : d085                     bne tdad        ;iterate op2
4df3 :                  tdad7
                                next_test
4df3 : ad0011          >            lda test_case   ;previous test
4df6 : c92a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4df8 : f003            >        beq skip3331
                       >        trap            ;failed not equal (non zero)
4dfa : 208553          >        jsr report_error
                       >
4dfd :                 >skip3331
                       >
002b =                 >test_num = test_num + 1
4dfd : a92b            >            lda #test_num   ;*** next tests' number
4dff : 8d0011          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal/binary switch test
                        ; tests CLD, SED, PLP, RTI to properly switch between decimal & binary opcode
                        ;   tables
4e02 : 18                       clc
4e03 : d8                       cld
4e04 : 08                       php
4e05 : a955                     lda #$55
4e07 : 6955                     adc #$55
4e09 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after cld
4e0b : f003            >        beq skip3333
                       >        trap            ;failed not equal (non zero)
4e0d : 208553          >        jsr report_error
                       >
4e10 :                 >skip3333
                        
4e10 : 18                       clc
4e11 : f8                       sed
4e12 : 08                       php
4e13 : a955                     lda #$55
4e15 : 6955                     adc #$55
4e17 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after sed
4e19 : f003            >        beq skip3335
                       >        trap            ;failed not equal (non zero)
4e1b : 208553          >        jsr report_error
                       >
4e1e :                 >skip3335
                        
4e1e : d8                       cld
4e1f : 28                       plp
4e20 : a955                     lda #$55
4e22 : 6955                     adc #$55
4e24 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after plp D=1
4e26 : f003            >        beq skip3337
                       >        trap            ;failed not equal (non zero)
4e28 : 208553          >        jsr report_error
                       >
4e2b :                 >skip3337
                        
4e2b : 28                       plp
4e2c : a955                     lda #$55
4e2e : 6955                     adc #$55
4e30 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after plp D=0
4e32 : f003            >        beq skip3339
                       >        trap            ;failed not equal (non zero)
4e34 : 208553          >        jsr report_error
                       >
4e37 :                 >skip3339
                        
4e37 : 18                       clc
4e38 : a94e                     lda #hi bin_rti_ret ;emulated interrupt for rti
4e3a : 48                       pha
4e3b : a955                     lda #lo bin_rti_ret
4e3d : 48                       pha
4e3e : 08                       php
4e3f : f8                       sed
4e40 : a94e                     lda #hi dec_rti_ret ;emulated interrupt for rti
4e42 : 48                       pha
4e43 : a949                     lda #lo dec_rti_ret
4e45 : 48                       pha
4e46 : 08                       php
4e47 : d8                       cld
4e48 : 40                       rti
4e49 :                  dec_rti_ret
4e49 : a955                     lda #$55
4e4b : 6955                     adc #$55
4e4d : c910                     cmp #$10
                                trap_ne         ;expected decimal result after rti D=1
4e4f : f003            >        beq skip3341
                       >        trap            ;failed not equal (non zero)
4e51 : 208553          >        jsr report_error
                       >
4e54 :                 >skip3341
                        
4e54 : 40                       rti
4e55 :                  bin_rti_ret
4e55 : a955                     lda #$55
4e57 : 6955                     adc #$55
4e59 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after rti D=0
4e5b : f003            >        beq skip3343
                       >        trap            ;failed not equal (non zero)
4e5d : 208553          >        jsr report_error
                       >
4e60 :                 >skip3343
                        
                            endif
                        
4e60 : ad0011                   lda test_case
4e63 : c92b                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
4e65 : f003            >        beq skip3345
                       >        trap            ;failed not equal (non zero)
4e67 : 208553          >        jsr report_error
                       >
4e6a :                 >skip3345
                        
4e6a : a9f0                     lda #$f0        ;mark opcode testing complete
4e6c : 8d0011                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************
                        ; -------------
                                success         ;if you get here everything went well
4e6f : 204e54          >        jsr report_success
                        
                        ; -------------
                        ; S U C C E S S ************************************************
4e72 : 4c0013                   jmp start       ;run again
                        
                            if disable_decimal < 1
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
4e75 :                  chkdad
                        ; decimal ADC / SBC zp
4e75 : 08                       php             ;save carry for subtract
4e76 : a553                     lda ad1
4e78 : 6554                     adc ad2         ;perform add
4e7a : 08                       php
4e7b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e7d : f003            >        beq skip3349
                       >        trap            ;failed not equal (non zero)
4e7f : 208553          >        jsr report_error
                       >
4e82 :                 >skip3349
                        
4e82 : 68                       pla             ;check flags
4e83 : 2901                     and #1          ;mask carry
4e85 : c556                     cmp adrh
                                trap_ne         ;bad carry
4e87 : f003            >        beq skip3351
                       >        trap            ;failed not equal (non zero)
4e89 : 208553          >        jsr report_error
                       >
4e8c :                 >skip3351
                        
4e8c : 28                       plp
4e8d : 08                       php             ;save carry for next add
4e8e : a553                     lda ad1
4e90 : e558                     sbc sb2         ;perform subtract
4e92 : 08                       php
4e93 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e95 : f003            >        beq skip3353
                       >        trap            ;failed not equal (non zero)
4e97 : 208553          >        jsr report_error
                       >
4e9a :                 >skip3353
                        
4e9a : 68                       pla             ;check flags
4e9b : 2901                     and #1          ;mask carry
4e9d : c556                     cmp adrh
                                trap_ne         ;bad flags
4e9f : f003            >        beq skip3355
                       >        trap            ;failed not equal (non zero)
4ea1 : 208553          >        jsr report_error
                       >
4ea4 :                 >skip3355
                        
4ea4 : 28                       plp
                        ; decimal ADC / SBC abs
4ea5 : 08                       php             ;save carry for subtract
4ea6 : a553                     lda ad1
4ea8 : 6d0311                   adc ada2        ;perform add
4eab : 08                       php
4eac : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4eae : f003            >        beq skip3357
                       >        trap            ;failed not equal (non zero)
4eb0 : 208553          >        jsr report_error
                       >
4eb3 :                 >skip3357
                        
4eb3 : 68                       pla             ;check flags
4eb4 : 2901                     and #1          ;mask carry
4eb6 : c556                     cmp adrh
                                trap_ne         ;bad carry
4eb8 : f003            >        beq skip3359
                       >        trap            ;failed not equal (non zero)
4eba : 208553          >        jsr report_error
                       >
4ebd :                 >skip3359
                        
4ebd : 28                       plp
4ebe : 08                       php             ;save carry for next add
4ebf : a553                     lda ad1
4ec1 : ed0411                   sbc sba2        ;perform subtract
4ec4 : 08                       php
4ec5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4ec7 : f003            >        beq skip3361
                       >        trap            ;failed not equal (non zero)
4ec9 : 208553          >        jsr report_error
                       >
4ecc :                 >skip3361
                        
4ecc : 68                       pla             ;check flags
4ecd : 2901                     and #1          ;mask carry
4ecf : c556                     cmp adrh
                                trap_ne         ;bad carry
4ed1 : f003            >        beq skip3363
                       >        trap            ;failed not equal (non zero)
4ed3 : 208553          >        jsr report_error
                       >
4ed6 :                 >skip3363
                        
4ed6 : 28                       plp
                        ; decimal ADC / SBC #
4ed7 : 08                       php             ;save carry for subtract
4ed8 : a554                     lda ad2
4eda : 8d1311                   sta ex_adci+1   ;set ADC # operand
4edd : a553                     lda ad1
4edf : 201211                   jsr ex_adci     ;execute ADC # in RAM
4ee2 : 08                       php
4ee3 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4ee5 : f003            >        beq skip3365
                       >        trap            ;failed not equal (non zero)
4ee7 : 208553          >        jsr report_error
                       >
4eea :                 >skip3365
                        
4eea : 68                       pla             ;check flags
4eeb : 2901                     and #1          ;mask carry
4eed : c556                     cmp adrh
                                trap_ne         ;bad carry
4eef : f003            >        beq skip3367
                       >        trap            ;failed not equal (non zero)
4ef1 : 208553          >        jsr report_error
                       >
4ef4 :                 >skip3367
                        
4ef4 : 28                       plp
4ef5 : 08                       php             ;save carry for next add
4ef6 : a558                     lda sb2
4ef8 : 8d1611                   sta ex_sbci+1   ;set SBC # operand
4efb : a553                     lda ad1
4efd : 201511                   jsr ex_sbci     ;execute SBC # in RAM
4f00 : 08                       php
4f01 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f03 : f003            >        beq skip3369
                       >        trap            ;failed not equal (non zero)
4f05 : 208553          >        jsr report_error
                       >
4f08 :                 >skip3369
                        
4f08 : 68                       pla             ;check flags
4f09 : 2901                     and #1          ;mask carry
4f0b : c556                     cmp adrh
                                trap_ne         ;bad carry
4f0d : f003            >        beq skip3371
                       >        trap            ;failed not equal (non zero)
4f0f : 208553          >        jsr report_error
                       >
4f12 :                 >skip3371
                        
4f12 : 28                       plp
                        ; decimal ADC / SBC zp,x
4f13 : 08                       php             ;save carry for subtract
4f14 : a553                     lda ad1
4f16 : 7500                     adc 0,x         ;perform add
4f18 : 08                       php
4f19 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f1b : f003            >        beq skip3373
                       >        trap            ;failed not equal (non zero)
4f1d : 208553          >        jsr report_error
                       >
4f20 :                 >skip3373
                        
4f20 : 68                       pla             ;check flags
4f21 : 2901                     and #1          ;mask carry
4f23 : c556                     cmp adrh
                                trap_ne         ;bad carry
4f25 : f003            >        beq skip3375
                       >        trap            ;failed not equal (non zero)
4f27 : 208553          >        jsr report_error
                       >
4f2a :                 >skip3375
                        
4f2a : 28                       plp
4f2b : 08                       php             ;save carry for next add
4f2c : a553                     lda ad1
4f2e : f504                     sbc sb2-ad2,x   ;perform subtract
4f30 : 08                       php
4f31 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f33 : f003            >        beq skip3377
                       >        trap            ;failed not equal (non zero)
4f35 : 208553          >        jsr report_error
                       >
4f38 :                 >skip3377
                        
4f38 : 68                       pla             ;check flags
4f39 : 2901                     and #1          ;mask carry
4f3b : c556                     cmp adrh
                                trap_ne         ;bad carry
4f3d : f003            >        beq skip3379
                       >        trap            ;failed not equal (non zero)
4f3f : 208553          >        jsr report_error
                       >
4f42 :                 >skip3379
                        
4f42 : 28                       plp
                        ; decimal ADC / SBC abs,x
4f43 : 08                       php             ;save carry for subtract
4f44 : a553                     lda ad1
4f46 : 7daf10                   adc ada2-ad2,x  ;perform add
4f49 : 08                       php
4f4a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f4c : f003            >        beq skip3381
                       >        trap            ;failed not equal (non zero)
4f4e : 208553          >        jsr report_error
                       >
4f51 :                 >skip3381
                        
4f51 : 68                       pla             ;check flags
4f52 : 2901                     and #1          ;mask carry
4f54 : c556                     cmp adrh
                                trap_ne         ;bad carry
4f56 : f003            >        beq skip3383
                       >        trap            ;failed not equal (non zero)
4f58 : 208553          >        jsr report_error
                       >
4f5b :                 >skip3383
                        
4f5b : 28                       plp
4f5c : 08                       php             ;save carry for next add
4f5d : a553                     lda ad1
4f5f : fdb010                   sbc sba2-ad2,x  ;perform subtract
4f62 : 08                       php
4f63 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f65 : f003            >        beq skip3385
                       >        trap            ;failed not equal (non zero)
4f67 : 208553          >        jsr report_error
                       >
4f6a :                 >skip3385
                        
4f6a : 68                       pla             ;check flags
4f6b : 2901                     and #1          ;mask carry
4f6d : c556                     cmp adrh
                                trap_ne         ;bad carry
4f6f : f003            >        beq skip3387
                       >        trap            ;failed not equal (non zero)
4f71 : 208553          >        jsr report_error
                       >
4f74 :                 >skip3387
                        
4f74 : 28                       plp
                        ; decimal ADC / SBC abs,y
4f75 : 08                       php             ;save carry for subtract
4f76 : a553                     lda ad1
4f78 : 790410                   adc ada2-$ff,y  ;perform add
4f7b : 08                       php
4f7c : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f7e : f003            >        beq skip3389
                       >        trap            ;failed not equal (non zero)
4f80 : 208553          >        jsr report_error
                       >
4f83 :                 >skip3389
                        
4f83 : 68                       pla             ;check flags
4f84 : 2901                     and #1          ;mask carry
4f86 : c556                     cmp adrh
                                trap_ne         ;bad carry
4f88 : f003            >        beq skip3391
                       >        trap            ;failed not equal (non zero)
4f8a : 208553          >        jsr report_error
                       >
4f8d :                 >skip3391
                        
4f8d : 28                       plp
4f8e : 08                       php             ;save carry for next add
4f8f : a553                     lda ad1
4f91 : f90510                   sbc sba2-$ff,y  ;perform subtract
4f94 : 08                       php
4f95 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4f97 : f003            >        beq skip3393
                       >        trap            ;failed not equal (non zero)
4f99 : 208553          >        jsr report_error
                       >
4f9c :                 >skip3393
                        
4f9c : 68                       pla             ;check flags
4f9d : 2901                     and #1          ;mask carry
4f9f : c556                     cmp adrh
                                trap_ne         ;bad carry
4fa1 : f003            >        beq skip3395
                       >        trap            ;failed not equal (non zero)
4fa3 : 208553          >        jsr report_error
                       >
4fa6 :                 >skip3395
                        
4fa6 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
4fa7 : 08                       php             ;save carry for subtract
4fa8 : a553                     lda ad1
4faa : 6146                     adc (lo adi2-ad2,x) ;perform add
4fac : 08                       php
4fad : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4faf : f003            >        beq skip3397
                       >        trap            ;failed not equal (non zero)
4fb1 : 208553          >        jsr report_error
                       >
4fb4 :                 >skip3397
                        
4fb4 : 68                       pla             ;check flags
4fb5 : 2901                     and #1          ;mask carry
4fb7 : c556                     cmp adrh
                                trap_ne         ;bad carry
4fb9 : f003            >        beq skip3399
                       >        trap            ;failed not equal (non zero)
4fbb : 208553          >        jsr report_error
                       >
4fbe :                 >skip3399
                        
4fbe : 28                       plp
4fbf : 08                       php             ;save carry for next add
4fc0 : a553                     lda ad1
4fc2 : e148                     sbc (lo sbi2-ad2,x) ;perform subtract
4fc4 : 08                       php
4fc5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4fc7 : f003            >        beq skip3401
                       >        trap            ;failed not equal (non zero)
4fc9 : 208553          >        jsr report_error
                       >
4fcc :                 >skip3401
                        
4fcc : 68                       pla             ;check flags
4fcd : 2901                     and #1          ;mask carry
4fcf : c556                     cmp adrh
                                trap_ne         ;bad carry
4fd1 : f003            >        beq skip3403
                       >        trap            ;failed not equal (non zero)
4fd3 : 208553          >        jsr report_error
                       >
4fd6 :                 >skip3403
                        
4fd6 : 28                       plp
                        ; decimal ADC / SBC (abs),y
4fd7 : 08                       php             ;save carry for subtract
4fd8 : a553                     lda ad1
4fda : 719e                     adc (adiy2),y   ;perform add
4fdc : 08                       php
4fdd : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4fdf : f003            >        beq skip3405
                       >        trap            ;failed not equal (non zero)
4fe1 : 208553          >        jsr report_error
                       >
4fe4 :                 >skip3405
                        
4fe4 : 68                       pla             ;check flags
4fe5 : 2901                     and #1          ;mask carry
4fe7 : c556                     cmp adrh
                                trap_ne         ;bad carry
4fe9 : f003            >        beq skip3407
                       >        trap            ;failed not equal (non zero)
4feb : 208553          >        jsr report_error
                       >
4fee :                 >skip3407
                        
4fee : 28                       plp
4fef : 08                       php             ;save carry for next add
4ff0 : a553                     lda ad1
4ff2 : f1a0                     sbc (sbiy2),y   ;perform subtract
4ff4 : 08                       php
4ff5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
4ff7 : f003            >        beq skip3409
                       >        trap            ;failed not equal (non zero)
4ff9 : 208553          >        jsr report_error
                       >
4ffc :                 >skip3409
                        
4ffc : 68                       pla             ;check flags
4ffd : 2901                     and #1          ;mask carry
4fff : c556                     cmp adrh
                                trap_ne         ;bad carry
5001 : f003            >        beq skip3411
                       >        trap            ;failed not equal (non zero)
5003 : 208553          >        jsr report_error
                       >
5006 :                 >skip3411
                        
5006 : 28                       plp
5007 : 60                       rts
                            endif
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5008 : a557             chkadd  lda adrf        ;add V-flag if overflow
500a : 2983                     and #$83        ;keep N-----ZC / clear V
500c : 48                       pha
500d : a553                     lda ad1         ;test sign unequal between operands
500f : 4554                     eor ad2
5011 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
5013 : a553                     lda ad1         ;test sign equal between operands and result
5015 : 4555                     eor adrl
5017 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
5019 : 68                       pla
501a : 0940                     ora #$40        ;set V
501c : 48                       pha
501d : 68               ckad1   pla
501e : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
5020 : 08                       php             ;save carry for subtract
5021 : a553                     lda ad1
5023 : 6554                     adc ad2         ;perform add
5025 : 08                       php
5026 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5028 : f003            >        beq skip3413
                       >        trap            ;failed not equal (non zero)
502a : 208553          >        jsr report_error
                       >
502d :                 >skip3413
                        
502d : 68                       pla             ;check flags
502e : 29c3                     and #$c3        ;mask NV----ZC
5030 : c557                     cmp adrf
                                trap_ne         ;bad flags
5032 : f003            >        beq skip3415
                       >        trap            ;failed not equal (non zero)
5034 : 208553          >        jsr report_error
                       >
5037 :                 >skip3415
                        
5037 : 28                       plp
5038 : 08                       php             ;save carry for next add
5039 : a553                     lda ad1
503b : e558                     sbc sb2         ;perform subtract
503d : 08                       php
503e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5040 : f003            >        beq skip3417
                       >        trap            ;failed not equal (non zero)
5042 : 208553          >        jsr report_error
                       >
5045 :                 >skip3417
                        
5045 : 68                       pla             ;check flags
5046 : 29c3                     and #$c3        ;mask NV----ZC
5048 : c557                     cmp adrf
                                trap_ne         ;bad flags
504a : f003            >        beq skip3419
                       >        trap            ;failed not equal (non zero)
504c : 208553          >        jsr report_error
                       >
504f :                 >skip3419
                        
504f : 28                       plp
                        ; binary ADC / SBC abs
5050 : 08                       php             ;save carry for subtract
5051 : a553                     lda ad1
5053 : 6d0311                   adc ada2        ;perform add
5056 : 08                       php
5057 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5059 : f003            >        beq skip3421
                       >        trap            ;failed not equal (non zero)
505b : 208553          >        jsr report_error
                       >
505e :                 >skip3421
                        
505e : 68                       pla             ;check flags
505f : 29c3                     and #$c3        ;mask NV----ZC
5061 : c557                     cmp adrf
                                trap_ne         ;bad flags
5063 : f003            >        beq skip3423
                       >        trap            ;failed not equal (non zero)
5065 : 208553          >        jsr report_error
                       >
5068 :                 >skip3423
                        
5068 : 28                       plp
5069 : 08                       php             ;save carry for next add
506a : a553                     lda ad1
506c : ed0411                   sbc sba2        ;perform subtract
506f : 08                       php
5070 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5072 : f003            >        beq skip3425
                       >        trap            ;failed not equal (non zero)
5074 : 208553          >        jsr report_error
                       >
5077 :                 >skip3425
                        
5077 : 68                       pla             ;check flags
5078 : 29c3                     and #$c3        ;mask NV----ZC
507a : c557                     cmp adrf
                                trap_ne         ;bad flags
507c : f003            >        beq skip3427
                       >        trap            ;failed not equal (non zero)
507e : 208553          >        jsr report_error
                       >
5081 :                 >skip3427
                        
5081 : 28                       plp
                        ; binary ADC / SBC #
5082 : 08                       php             ;save carry for subtract
5083 : a554                     lda ad2
5085 : 8d1311                   sta ex_adci+1   ;set ADC # operand
5088 : a553                     lda ad1
508a : 201211                   jsr ex_adci     ;execute ADC # in RAM
508d : 08                       php
508e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5090 : f003            >        beq skip3429
                       >        trap            ;failed not equal (non zero)
5092 : 208553          >        jsr report_error
                       >
5095 :                 >skip3429
                        
5095 : 68                       pla             ;check flags
5096 : 29c3                     and #$c3        ;mask NV----ZC
5098 : c557                     cmp adrf
                                trap_ne         ;bad flags
509a : f003            >        beq skip3431
                       >        trap            ;failed not equal (non zero)
509c : 208553          >        jsr report_error
                       >
509f :                 >skip3431
                        
509f : 28                       plp
50a0 : 08                       php             ;save carry for next add
50a1 : a558                     lda sb2
50a3 : 8d1611                   sta ex_sbci+1   ;set SBC # operand
50a6 : a553                     lda ad1
50a8 : 201511                   jsr ex_sbci     ;execute SBC # in RAM
50ab : 08                       php
50ac : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
50ae : f003            >        beq skip3433
                       >        trap            ;failed not equal (non zero)
50b0 : 208553          >        jsr report_error
                       >
50b3 :                 >skip3433
                        
50b3 : 68                       pla             ;check flags
50b4 : 29c3                     and #$c3        ;mask NV----ZC
50b6 : c557                     cmp adrf
                                trap_ne         ;bad flags
50b8 : f003            >        beq skip3435
                       >        trap            ;failed not equal (non zero)
50ba : 208553          >        jsr report_error
                       >
50bd :                 >skip3435
                        
50bd : 28                       plp
                        ; binary ADC / SBC zp,x
50be : 08                       php             ;save carry for subtract
50bf : a553                     lda ad1
50c1 : 7500                     adc 0,x         ;perform add
50c3 : 08                       php
50c4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
50c6 : f003            >        beq skip3437
                       >        trap            ;failed not equal (non zero)
50c8 : 208553          >        jsr report_error
                       >
50cb :                 >skip3437
                        
50cb : 68                       pla             ;check flags
50cc : 29c3                     and #$c3        ;mask NV----ZC
50ce : c557                     cmp adrf
                                trap_ne         ;bad flags
50d0 : f003            >        beq skip3439
                       >        trap            ;failed not equal (non zero)
50d2 : 208553          >        jsr report_error
                       >
50d5 :                 >skip3439
                        
50d5 : 28                       plp
50d6 : 08                       php             ;save carry for next add
50d7 : a553                     lda ad1
50d9 : f504                     sbc sb2-ad2,x   ;perform subtract
50db : 08                       php
50dc : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
50de : f003            >        beq skip3441
                       >        trap            ;failed not equal (non zero)
50e0 : 208553          >        jsr report_error
                       >
50e3 :                 >skip3441
                        
50e3 : 68                       pla             ;check flags
50e4 : 29c3                     and #$c3        ;mask NV----ZC
50e6 : c557                     cmp adrf
                                trap_ne         ;bad flags
50e8 : f003            >        beq skip3443
                       >        trap            ;failed not equal (non zero)
50ea : 208553          >        jsr report_error
                       >
50ed :                 >skip3443
                        
50ed : 28                       plp
                        ; binary ADC / SBC abs,x
50ee : 08                       php             ;save carry for subtract
50ef : a553                     lda ad1
50f1 : 7daf10                   adc ada2-ad2,x  ;perform add
50f4 : 08                       php
50f5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
50f7 : f003            >        beq skip3445
                       >        trap            ;failed not equal (non zero)
50f9 : 208553          >        jsr report_error
                       >
50fc :                 >skip3445
                        
50fc : 68                       pla             ;check flags
50fd : 29c3                     and #$c3        ;mask NV----ZC
50ff : c557                     cmp adrf
                                trap_ne         ;bad flags
5101 : f003            >        beq skip3447
                       >        trap            ;failed not equal (non zero)
5103 : 208553          >        jsr report_error
                       >
5106 :                 >skip3447
                        
5106 : 28                       plp
5107 : 08                       php             ;save carry for next add
5108 : a553                     lda ad1
510a : fdb010                   sbc sba2-ad2,x  ;perform subtract
510d : 08                       php
510e : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5110 : f003            >        beq skip3449
                       >        trap            ;failed not equal (non zero)
5112 : 208553          >        jsr report_error
                       >
5115 :                 >skip3449
                        
5115 : 68                       pla             ;check flags
5116 : 29c3                     and #$c3        ;mask NV----ZC
5118 : c557                     cmp adrf
                                trap_ne         ;bad flags
511a : f003            >        beq skip3451
                       >        trap            ;failed not equal (non zero)
511c : 208553          >        jsr report_error
                       >
511f :                 >skip3451
                        
511f : 28                       plp
                        ; binary ADC / SBC abs,y
5120 : 08                       php             ;save carry for subtract
5121 : a553                     lda ad1
5123 : 790410                   adc ada2-$ff,y  ;perform add
5126 : 08                       php
5127 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5129 : f003            >        beq skip3453
                       >        trap            ;failed not equal (non zero)
512b : 208553          >        jsr report_error
                       >
512e :                 >skip3453
                        
512e : 68                       pla             ;check flags
512f : 29c3                     and #$c3        ;mask NV----ZC
5131 : c557                     cmp adrf
                                trap_ne         ;bad flags
5133 : f003            >        beq skip3455
                       >        trap            ;failed not equal (non zero)
5135 : 208553          >        jsr report_error
                       >
5138 :                 >skip3455
                        
5138 : 28                       plp
5139 : 08                       php             ;save carry for next add
513a : a553                     lda ad1
513c : f90510                   sbc sba2-$ff,y  ;perform subtract
513f : 08                       php
5140 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5142 : f003            >        beq skip3457
                       >        trap            ;failed not equal (non zero)
5144 : 208553          >        jsr report_error
                       >
5147 :                 >skip3457
                        
5147 : 68                       pla             ;check flags
5148 : 29c3                     and #$c3        ;mask NV----ZC
514a : c557                     cmp adrf
                                trap_ne         ;bad flags
514c : f003            >        beq skip3459
                       >        trap            ;failed not equal (non zero)
514e : 208553          >        jsr report_error
                       >
5151 :                 >skip3459
                        
5151 : 28                       plp
                        ; binary ADC / SBC (zp,x)
5152 : 08                       php             ;save carry for subtract
5153 : a553                     lda ad1
5155 : 6146                     adc (lo adi2-ad2,x) ;perform add
5157 : 08                       php
5158 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
515a : f003            >        beq skip3461
                       >        trap            ;failed not equal (non zero)
515c : 208553          >        jsr report_error
                       >
515f :                 >skip3461
                        
515f : 68                       pla             ;check flags
5160 : 29c3                     and #$c3        ;mask NV----ZC
5162 : c557                     cmp adrf
                                trap_ne         ;bad flags
5164 : f003            >        beq skip3463
                       >        trap            ;failed not equal (non zero)
5166 : 208553          >        jsr report_error
                       >
5169 :                 >skip3463
                        
5169 : 28                       plp
516a : 08                       php             ;save carry for next add
516b : a553                     lda ad1
516d : e148                     sbc (lo sbi2-ad2,x) ;perform subtract
516f : 08                       php
5170 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5172 : f003            >        beq skip3465
                       >        trap            ;failed not equal (non zero)
5174 : 208553          >        jsr report_error
                       >
5177 :                 >skip3465
                        
5177 : 68                       pla             ;check flags
5178 : 29c3                     and #$c3        ;mask NV----ZC
517a : c557                     cmp adrf
                                trap_ne         ;bad flags
517c : f003            >        beq skip3467
                       >        trap            ;failed not equal (non zero)
517e : 208553          >        jsr report_error
                       >
5181 :                 >skip3467
                        
5181 : 28                       plp
                        ; binary ADC / SBC (abs),y
5182 : 08                       php             ;save carry for subtract
5183 : a553                     lda ad1
5185 : 719e                     adc (adiy2),y   ;perform add
5187 : 08                       php
5188 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
518a : f003            >        beq skip3469
                       >        trap            ;failed not equal (non zero)
518c : 208553          >        jsr report_error
                       >
518f :                 >skip3469
                        
518f : 68                       pla             ;check flags
5190 : 29c3                     and #$c3        ;mask NV----ZC
5192 : c557                     cmp adrf
                                trap_ne         ;bad flags
5194 : f003            >        beq skip3471
                       >        trap            ;failed not equal (non zero)
5196 : 208553          >        jsr report_error
                       >
5199 :                 >skip3471
                        
5199 : 28                       plp
519a : 08                       php             ;save carry for next add
519b : a553                     lda ad1
519d : f1a0                     sbc (sbiy2),y   ;perform subtract
519f : 08                       php
51a0 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
51a2 : f003            >        beq skip3473
                       >        trap            ;failed not equal (non zero)
51a4 : 208553          >        jsr report_error
                       >
51a7 :                 >skip3473
                        
51a7 : 68                       pla             ;check flags
51a8 : 29c3                     and #$c3        ;mask NV----ZC
51aa : c557                     cmp adrf
                                trap_ne         ;bad flags
51ac : f003            >        beq skip3475
                       >        trap            ;failed not equal (non zero)
51ae : 208553          >        jsr report_error
                       >
51b1 :                 >skip3475
                        
51b1 : 28                       plp
51b2 : 60                       rts
                        
                        ; target for the jump absolute test
51b3 : 88                       dey
51b4 : 88                       dey
51b5 :                  test_far
51b5 : 08                       php             ;either SP or Y count will fail, if we do not hit
51b6 : 88                       dey
51b7 : 88                       dey
51b8 : 88                       dey
51b9 : 28                       plp
                                trap_cs         ;flags loaded?
51ba : 9003            >        bcc skip3477
                       >        trap            ;failed carry set
51bc : 208553          >        jsr report_error
                       >
51bf :                 >skip3477
                        
                                trap_vs
51bf : 5003            >        bvc skip3479
                       >        trap            ;failed overflow set
51c1 : 208553          >        jsr report_error
                       >
51c4 :                 >skip3479
                        
                                trap_mi
51c4 : 1003            >        bpl skip3481
                       >        trap            ;failed minus (bit 7 set)
51c6 : 208553          >        jsr report_error
                       >
51c9 :                 >skip3481
                        
                                trap_eq
51c9 : d003            >        bne skip3483
                       >        trap           ;failed equal (zero)
51cb : 208553          >        jsr report_error
                       >
51ce :                 >skip3483
                        
51ce : c946                     cmp #'F'        ;registers loaded?
                                trap_ne
51d0 : f003            >        beq skip3485
                       >        trap            ;failed not equal (non zero)
51d2 : 208553          >        jsr report_error
                       >
51d5 :                 >skip3485
                        
51d5 : e041                     cpx #'A'
                                trap_ne
51d7 : f003            >        beq skip3487
                       >        trap            ;failed not equal (non zero)
51d9 : 208553          >        jsr report_error
                       >
51dc :                 >skip3487
                        
51dc : c04f                     cpy #('R'-3)
                                trap_ne
51de : f003            >        beq skip3489
                       >        trap            ;failed not equal (non zero)
51e0 : 208553          >        jsr report_error
                       >
51e3 :                 >skip3489
                        
51e3 : 48                       pha             ;save a,x
51e4 : 8a                       txa
51e5 : 48                       pha
51e6 : ba                       tsx
51e7 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
51e9 : f003            >        beq skip3491
                       >        trap            ;failed not equal (non zero)
51eb : 208553          >        jsr report_error
                       >
51ee :                 >skip3491
                        
51ee : 68                       pla             ;restore x
51ef : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
51f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51f2 : 48              >            pha         ;use stack to load status
51f3 : 28              >            plp
                        
51f4 : 68                       pla             ;restore a
51f5 : e8                       inx             ;return registers with modifications
51f6 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
51f8 : 4c0819                   jmp far_ret
                        
                        ; target for the jump indirect test
51fb : 00                       align
51fc : 0552             ptr_tst_ind dw test_ind
51fe : 9019             ptr_ind_ret dw ind_ret
                                trap            ;runover protection
5200 : 208553          >        jsr report_error
                        
5203 : 88                       dey
5204 : 88                       dey
5205 :                  test_ind
5205 : 08                       php             ;either SP or Y count will fail, if we do not hit
5206 : 88                       dey
5207 : 88                       dey
5208 : 88                       dey
5209 : 28                       plp
                                trap_cs         ;flags loaded?
520a : 9003            >        bcc skip3496
                       >        trap            ;failed carry set
520c : 208553          >        jsr report_error
                       >
520f :                 >skip3496
                        
                                trap_vs
520f : 5003            >        bvc skip3498
                       >        trap            ;failed overflow set
5211 : 208553          >        jsr report_error
                       >
5214 :                 >skip3498
                        
                                trap_mi
5214 : 1003            >        bpl skip3500
                       >        trap            ;failed minus (bit 7 set)
5216 : 208553          >        jsr report_error
                       >
5219 :                 >skip3500
                        
                                trap_eq
5219 : d003            >        bne skip3502
                       >        trap           ;failed equal (zero)
521b : 208553          >        jsr report_error
                       >
521e :                 >skip3502
                        
521e : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
5220 : f003            >        beq skip3504
                       >        trap            ;failed not equal (non zero)
5222 : 208553          >        jsr report_error
                       >
5225 :                 >skip3504
                        
5225 : e04e                     cpx #'N'
                                trap_ne
5227 : f003            >        beq skip3506
                       >        trap            ;failed not equal (non zero)
5229 : 208553          >        jsr report_error
                       >
522c :                 >skip3506
                        
522c : c041                     cpy #('D'-3)
                                trap_ne
522e : f003            >        beq skip3508
                       >        trap            ;failed not equal (non zero)
5230 : 208553          >        jsr report_error
                       >
5233 :                 >skip3508
                        
5233 : 48                       pha             ;save a,x
5234 : 8a                       txa
5235 : 48                       pha
5236 : ba                       tsx
5237 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
5239 : f003            >        beq skip3510
                       >        trap            ;failed not equal (non zero)
523b : 208553          >        jsr report_error
                       >
523e :                 >skip3510
                        
523e : 68                       pla             ;restore x
523f : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
5240 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5242 : 48              >            pha         ;use stack to load status
5243 : 28              >            plp
                        
5244 : 68                       pla             ;restore a
5245 : e8                       inx             ;return registers with modifications
5246 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
5248 : 6cfe51                   jmp (ptr_ind_ret)
                                trap            ;runover protection
524b : 208553          >        jsr report_error
                        
524e : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump subroutine test
5251 : 88                       dey
5252 : 88                       dey
5253 :                  test_jsr
5253 : 08                       php             ;either SP or Y count will fail, if we do not hit
5254 : 88                       dey
5255 : 88                       dey
5256 : 88                       dey
5257 : 28                       plp
                                trap_cs         ;flags loaded?
5258 : 9003            >        bcc skip3515
                       >        trap            ;failed carry set
525a : 208553          >        jsr report_error
                       >
525d :                 >skip3515
                        
                                trap_vs
525d : 5003            >        bvc skip3517
                       >        trap            ;failed overflow set
525f : 208553          >        jsr report_error
                       >
5262 :                 >skip3517
                        
                                trap_mi
5262 : 1003            >        bpl skip3519
                       >        trap            ;failed minus (bit 7 set)
5264 : 208553          >        jsr report_error
                       >
5267 :                 >skip3519
                        
                                trap_eq
5267 : d003            >        bne skip3521
                       >        trap           ;failed equal (zero)
5269 : 208553          >        jsr report_error
                       >
526c :                 >skip3521
                        
526c : c94a                     cmp #'J'        ;registers loaded?
                                trap_ne
526e : f003            >        beq skip3523
                       >        trap            ;failed not equal (non zero)
5270 : 208553          >        jsr report_error
                       >
5273 :                 >skip3523
                        
5273 : e053                     cpx #'S'
                                trap_ne
5275 : f003            >        beq skip3525
                       >        trap            ;failed not equal (non zero)
5277 : 208553          >        jsr report_error
                       >
527a :                 >skip3525
                        
527a : c04f                     cpy #('R'-3)
                                trap_ne
527c : f003            >        beq skip3527
                       >        trap            ;failed not equal (non zero)
527e : 208553          >        jsr report_error
                       >
5281 :                 >skip3527
                        
5281 : 48                       pha             ;save a,x
5282 : 8a                       txa
5283 : 48                       pha
5284 : ba                       tsx             ;sp -4? (return addr,a,x)
5285 : e0fb                     cpx #$fb
                                trap_ne
5287 : f003            >        beq skip3529
                       >        trap            ;failed not equal (non zero)
5289 : 208553          >        jsr report_error
                       >
528c :                 >skip3529
                        
528c : adff01                   lda $1ff        ;propper return on stack
528f : c919                     cmp #hi(jsr_ret)
                                trap_ne
5291 : f003            >        beq skip3531
                       >        trap            ;failed not equal (non zero)
5293 : 208553          >        jsr report_error
                       >
5296 :                 >skip3531
                        
5296 : adfe01                   lda $1fe
5299 : c9e1                     cmp #lo(jsr_ret)
                                trap_ne
529b : f003            >        beq skip3533
                       >        trap            ;failed not equal (non zero)
529d : 208553          >        jsr report_error
                       >
52a0 :                 >skip3533
                        
                                set_stat $ff
                       >            load_flag $ff
52a0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52a2 : 48              >            pha         ;use stack to load status
52a3 : 28              >            plp
                        
52a4 : 68                       pla             ;pull x,a
52a5 : aa                       tax
52a6 : 68                       pla
52a7 : e8                       inx             ;return registers with modifications
52a8 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
52aa : 60                       rts
                                trap            ;runover protection
52ab : 208553          >        jsr report_error
                        
52ae : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
52b1 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
52b1 : 208553          >        jsr report_error
                        
52b4 : 4c0013                   jmp start       ;catastrophic error - cannot continue
52b7 :                  res_trap
                                trap            ;unexpected RESET
52b7 : 208553          >        jsr report_error
                        
52ba : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
52bd : 88                       dey
52be : 88                       dey
52bf :                  irq_trap                ;BRK test or unextpected BRK or IRQ
52bf : 08                       php             ;either SP or Y count will fail, if we do not hit
52c0 : 88                       dey
52c1 : 88                       dey
52c2 : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
52c3 : c9bd                     cmp #$ff-'B'    ;BRK pass 2 registers loaded?
52c5 : f05a                     beq break2
52c7 : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
52c9 : f003            >        beq skip3540
                       >        trap            ;failed not equal (non zero)
52cb : 208553          >        jsr report_error
                       >
52ce :                 >skip3540
                        
52ce : e052                     cpx #'R'
                                trap_ne
52d0 : f003            >        beq skip3542
                       >        trap            ;failed not equal (non zero)
52d2 : 208553          >        jsr report_error
                       >
52d5 :                 >skip3542
                        
52d5 : c048                     cpy #'K'-3
                                trap_ne
52d7 : f003            >        beq skip3544
                       >        trap            ;failed not equal (non zero)
52d9 : 208553          >        jsr report_error
                       >
52dc :                 >skip3544
                        
52dc : 8550                     sta irq_a       ;save registers during break test
52de : 8651                     stx irq_x
52e0 : ba                       tsx             ;test break on stack
52e1 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
52e4 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
52e6 : f003            >        beq skip3547
                       >        trap            ;failed not equal (non zero)
52e8 : 208553          >        jsr report_error
                       >
52eb :                 >skip3547
                        
52eb : 68                       pla
                                cmp_flag intdis ;should have added interrupt disable
52ec : c934            >            cmp #(intdis |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
52ee : f003            >        beq skip3550
                       >        trap            ;failed not equal (non zero)
52f0 : 208553          >        jsr report_error
                       >
52f3 :                 >skip3550
                        
52f3 : ba                       tsx
52f4 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
52f6 : f003            >        beq skip3552
                       >        trap            ;failed not equal (non zero)
52f8 : 208553          >        jsr report_error
                       >
52fb :                 >skip3552
                        
52fb : adff01                   lda $1ff        ;propper return on stack
52fe : c91a                     cmp #hi(brk_ret0)
                                trap_ne
5300 : f003            >        beq skip3554
                       >        trap            ;failed not equal (non zero)
5302 : 208553          >        jsr report_error
                       >
5305 :                 >skip3554
                        
5305 : adfe01                   lda $1fe
5308 : c93e                     cmp #lo(brk_ret0)
                                trap_ne
530a : f003            >        beq skip3556
                       >        trap            ;failed not equal (non zero)
530c : 208553          >        jsr report_error
                       >
530f :                 >skip3556
                        
                                load_flag $ff
530f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
5311 : 48                       pha
5312 : a651                     ldx irq_x
5314 : e8                       inx             ;return registers with modifications
5315 : a550                     lda irq_a
5317 : 49aa                     eor #$aa
5319 : 28                       plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
531a : 40                       rti
                                trap            ;runover protection
531b : 208553          >        jsr report_error
                        
531e : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
5321 :                  break2                  ;BRK pass 2
5321 : e0ad                     cpx #$ff-'R'
                                trap_ne
5323 : f003            >        beq skip3560
                       >        trap            ;failed not equal (non zero)
5325 : 208553          >        jsr report_error
                       >
5328 :                 >skip3560
                        
5328 : c0b1                     cpy #$ff-'K'-3
                                trap_ne
532a : f003            >        beq skip3562
                       >        trap            ;failed not equal (non zero)
532c : 208553          >        jsr report_error
                       >
532f :                 >skip3562
                        
532f : 8550                     sta irq_a       ;save registers during break test
5331 : 8651                     stx irq_x
5333 : ba                       tsx             ;test break on stack
5334 : bd0201                   lda $102,x
                                cmp_flag $ff    ;break test should have B=1
5337 : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
5339 : f003            >        beq skip3565
                       >        trap            ;failed not equal (non zero)
533b : 208553          >        jsr report_error
                       >
533e :                 >skip3565
                        
533e : 68                       pla
533f : 0908                     ora #decmode    ;ignore decmode cleared if 65c02
                                cmp_flag $ff    ;actual passed flags
5341 : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
5343 : f003            >        beq skip3568
                       >        trap            ;failed not equal (non zero)
5345 : 208553          >        jsr report_error
                       >
5348 :                 >skip3568
                        
5348 : ba                       tsx
5349 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
534b : f003            >        beq skip3570
                       >        trap            ;failed not equal (non zero)
534d : 208553          >        jsr report_error
                       >
5350 :                 >skip3570
                        
5350 : adff01                   lda $1ff        ;propper return on stack
5353 : c91a                     cmp #hi(brk_ret1)
                                trap_ne
5355 : f003            >        beq skip3572
                       >        trap            ;failed not equal (non zero)
5357 : 208553          >        jsr report_error
                       >
535a :                 >skip3572
                        
535a : adfe01                   lda $1fe
535d : c97c                     cmp #lo(brk_ret1)
                                trap_ne
535f : f003            >        beq skip3574
                       >        trap            ;failed not equal (non zero)
5361 : 208553          >        jsr report_error
                       >
5364 :                 >skip3574
                        
                                load_flag intdis
5364 : a904            >            lda #intdis             ;allow test to change I-flag (no mask)
                        
5366 : 48                       pha
5367 : a651                     ldx irq_x
5369 : e8                       inx             ;return registers with modifications
536a : a550                     lda irq_a
536c : 49aa                     eor #$aa
536e : 28                       plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
536f : 40                       rti
                                trap            ;runover protection
5370 : 208553          >        jsr report_error
                        
5373 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
5376 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
5376 : a200            >        ldx #0
5378 : ad9354          >        lda rmsg_start
537b :                 >loop3578
537b : 208f54          >        jsr rchar
537e : e8              >        inx
537f : bd9354          >        lda rmsg_start,x
5382 : d0f7            >        bne loop3578
                        
5384 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
5385 :                  report_error
                        ;save registers
5385 : 08                       php
5386 : 48                       pha
5387 : 8a                       txa
5388 : 48                       pha
5389 : 98                       tya
538a : 48                       pha
538b : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
538c : a200            >        ldx #0
538e : ada754          >        lda rmsg_stack
5391 :                 >loop3579
5391 : 208f54          >        jsr rchar
5394 : e8              >        inx
5395 : bda754          >        lda rmsg_stack,x
5398 : d0f7            >        bne loop3579
                        
539a : ba                       tsx
539b : e8                       inx
539c : a901                     lda #1      ;address high
539e : 207b54                   jsr rhex
53a1 : 8a                       txa         ;address low
53a2 : 207b54                   jsr rhex
53a5 : 207754           rstack  jsr rspace
53a8 : bd0001                   lda $100,x  ;stack data
53ab : 207b54                   jsr rhex
53ae : e8                       inx
53af : d0f4                     bne rstack
53b1 : 206e54                   jsr rcrlf   ;new line
                        ;show zero page workspace
53b4 : a900                     lda #0
53b6 : 207b54                   jsr rhex
53b9 : a952                     lda #zpt
53bb : aa                       tax
53bc : 207b54                   jsr rhex
53bf : 207754           rzp     jsr rspace
53c2 : b500                     lda 0,x
53c4 : 207b54                   jsr rhex
53c7 : e8                       inx
53c8 : e059                     cpx #zp_bss
53ca : d0f3                     bne rzp
53cc : 206e54                   jsr rcrlf
                        ;show absolute workspace
53cf : a911                     lda #hi(data_segment)
53d1 : 207b54                   jsr rhex
53d4 : a900                     lda #lo(data_segment)
53d6 : 207b54                   jsr rhex
53d9 : a200                     ldx #0
53db : 207754           rabs    jsr rspace
53de : bd0011                   lda data_segment,x
53e1 : 207b54                   jsr rhex
53e4 : e8                       inx
53e5 : e009                     cpx #(data_bss-data_segment)
53e7 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
53e9 : a200            >        ldx #0
53eb : adc354          >        lda rmsg_cont
53ee :                 >loop3580
53ee : 208f54          >        jsr rchar
53f1 : e8              >        inx
53f2 : bdc354          >        lda rmsg_cont,x
53f5 : d0f7            >        bne loop3580
                        
53f7 : 206454           rerr1   jsr rget
53fa : c953                     cmp #'S'
53fc : f00b                     beq rskip
53fe : c943                     cmp #'C'
5400 : d0f5                     bne rerr1        
                        ;restore registers
5402 : 68                       pla
5403 : a8                       tay
5404 : 68                       pla
5405 : aa                       tax
5406 : 68                       pla 
5407 : 28                       plp
5408 : 60                       rts
                        ;skip the current test
5409 : a9f0             rskip   lda #$f0            ;already end of tests?
540b : cd0011                   cmp test_case
540e : f0e7                     beq rerr1           ;skip is not available
5410 : a2ff                     ldx #$ff            ;clear stack
5412 : 9a                       txs
5413 : ee0011                   inc test_case       ;next test
5416 : a900                     lda #lo(start)      ;find begin of test
5418 : 8552                     sta zpt
541a : a913                     lda #hi(start)
541c : 8553                     sta zpt+1
541e : a004             rskipl1 ldy #4              ;search pattern
5420 : b152             rskipl2 lda (zpt),y         ;next byte
5422 : d94954                   cmp rmark,y
5425 : d00a                     bne rskipnx         ;no match
5427 : 88                       dey
5428 : 300f                     bmi rskipf          ;found pattern        
542a : c001                     cpy #1              ;skip immediate value
542c : d0f2                     bne rskipl2
542e : 88                       dey
542f : f0ef                     beq rskipl2
                                
5431 : e652             rskipnx inc zpt             ;next RAM location
5433 : d0e9                     bne rskipl1
5435 : e653                     inc zpt+1
5437 : d0e5                     bne rskipl1
                        
5439 : a001             rskipf  ldy #1              ;pattern found - check test number
543b : b152                     lda (zpt),y         ;test number
543d : c9f0                     cmp #$f0            ;end of last test?
543f : f005                     beq rskipe          ;ask to rerun all
5441 : cd0011                   cmp test_case       ;is next test?
5444 : d0eb                     bne rskipnx         ;continue searching
5446 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
5449 : a900             rmark   lda #0              ;begin of test search pattern
544b : 8d0011                   sta test_case
                        
                        ;show test has ended, ask to repeat
544e :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
544e : a200            >        ldx #0
5450 : adf554          >        lda rmsg_success
5453 :                 >loop3581
5453 : 208f54          >        jsr rchar
5456 : e8              >        inx
5457 : bdf554          >        lda rmsg_success,x
545a : d0f7            >        bne loop3581
                        
545c : 206454           rsuc1   jsr rget
545f : c952                     cmp #'R'
5461 : d0f9                     bne rsuc1        
5463 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
5464 :                  rget                ;get character in A
5464 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
5467 : c961                     cmp #'a'    ;lower case
5469 : 9002                     bcc rget1
546b : 295f                     and #$5f    ;convert to upper case
546d : 60               rget1   rts
                        
                        ;output subroutines
546e : a90a             rcrlf   lda #10
5470 : 208f54                   jsr rchar
5473 : a90d                     lda #13
5475 : d018                     bne rchar
                        
5477 : a920             rspace  lda #' '
5479 : d014                     bne rchar
                                
547b : 48               rhex    pha         ;report hex byte in A
547c : 4a                       lsr a       ;high nibble first
547d : 4a                       lsr a
547e : 4a                       lsr a
547f : 4a                       lsr a
5480 : 208654                   jsr rnib
5483 : 68                       pla         ;now low nibble
5484 : 290f                     and #$f
                        
5486 : 18               rnib    clc         ;report nibble in A
5487 : 6930                     adc #'0'    ;make printable 0-9
5489 : c93a                     cmp #'9'+1
548b : 9002                     bcc rchar
548d : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
548f :                  rchar               ;report character in A
548f : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
5492 : 60                       rts
                        
5493 :                  rmsg_start
5493 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
54a7 :                  rmsg_stack
54a7 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
54c3 :                  rmsg_cont
54c3 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
54f5 :                  rmsg_success
54f5 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                        
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
5520 :                  zp_init
5520 : 8001             zps_    db  $80,1           ;additional shift pattern to test zero result & flag
5522 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
5526 : 7f               zp7f_   db  $7f             ;test pattern for compare
                        ;logical zeropage operands
5527 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
552b : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
552f : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
5533 : 1811             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
5535 : 1911                     dw  abs1+1
5537 : 1a11                     dw  abs1+2
5539 : 1b11                     dw  abs1+3
553b : 1c11                     dw  abs7f
553d : 2010             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
553f : 0311             indt_   dw  abst            ;indirect pointer to store area in absolute memory
5541 : 0411                     dw  abst+1
5543 : 0511                     dw  abst+2
5545 : 0611                     dw  abst+3
5547 : 0b10             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
5549 : 5f11             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
554b : 6011                     dw  absAN+1
554d : 6111                     dw  absAN+2
554f : 6211                     dw  absAN+3
5551 : 6311             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
5553 : 6411                     dw  absEO+1
5555 : 6511                     dw  absEO+2
5557 : 6611                     dw  absEO+3
5559 : 5b11             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
555b : 5c11                     dw  absOR+1
555d : 5d11                     dw  absOR+2
555f : 5e11                     dw  absOR+3
                        ;add/subtract indirect pointers
5561 : 0311             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
5563 : 0411             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
5565 : 0410             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
5567 : 0510             sbiy2_  dw  sba2-$ff
5569 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif
5569 :                  data_init
5569 : 2900             ex_and_ and #0              ;execute immediate opcodes
556b : 60                       rts
556c : 4900             ex_eor_ eor #0              ;execute immediate opcodes
556e : 60                       rts
556f : 0900             ex_ora_ ora #0              ;execute immediate opcodes
5571 : 60                       rts
5572 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
5574 : 60                       rts
5575 : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
5577 : 60                       rts
                        ;zps    db  $80,1           ;additional shift patterns test zero result & flag
5578 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
557c : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
557d : 80800002         fLDx_   db  fn,fn,0,fz              ;expected flags for load
                        ;shifts
5581 :                  rASL_                               ;expected result ASL & ROL -carry
5581 : 000286048200     rROL_   db  0,2,$86,$04,$82,0
5587 : 010387058301     rROLc_  db  1,3,$87,$05,$83,1       ;expected result ROL +carry
558d :                  rLSR_                               ;expected result LSR & ROR -carry
558d : 400061412000     rROR_   db  $40,0,$61,$41,$20,0
5593 : c080e1c1a080     rRORc_  db  $c0,$80,$e1,$c1,$a0,$80 ;expected result ROR +carry
5599 :                  fASL_                               ;expected flags for shifts
5599 : 030081018002     fROL_   db  fzc,0,fnc,fc,fn,fz      ;no carry in
559f : 010081018000     fROLc_  db  fc,0,fnc,fc,fn,0        ;carry in
55a5 :                  fLSR_
55a5 : 000301000102     fROR_   db  0,fzc,fc,0,fc,fz        ;no carry in
55ab : 808181808180     fRORc_  db  fn,fnc,fnc,fn,fnc,fn    ;carry in
                        ;increments (decrements)
55b1 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1         ;expected result for INC/DEC
55b6 : 0080800200       fINC_   db  0,fn,fn,fz,0            ;expected flags for INC/DEC
                        ;logical memory operand
55bb : 001f7180         absOR_  db  0,$1f,$71,$80           ;test pattern for OR
55bf : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80         ;test pattern for AND
55c3 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f         ;test pattern for EOR
                        ;logical accu operand
55c7 : 00f11f00         absORa_ db  0,$f1,$1f,0             ;test pattern for OR
55cb : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff         ;test pattern for AND
55cf : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f         ;test pattern for EOR
                        ;logical results
55d3 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
55d7 : 02800080         absflo_ db  fz,fn,0,fn
55db :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif
                        
55db :                  vec_init
55db : b152                     dw  nmi_trap
55dd : b752                     dw  res_trap
55df : bf52                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                        
                            if (load_data_direct = 1) & (ROM_vectors = 1)
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
fffa =                          end start
                        
No errors in pass 2.
Wrote binary from address $1300 through $55e0.
Total size 17121 bytes.
Program start address is at $1300 (4864).
