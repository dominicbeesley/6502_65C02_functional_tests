AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65 -------------------------------------------------

3125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013-2017  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 04-dec-2017
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        ;   23-aug-2015  change revoked
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;   28-aug-2015  fixed decimal adc/sbc immediate only testing carry
                        ;   09-feb-2017  fixed RMB/SMB tested when they shouldn't be tested
                        ;   04-dec-2017  fixed BRK not tested for actually going through the IRQ vector
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;                added skip override to undefined opcode as NOP test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $63 (99) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
1100 =                  data_segment = BASE
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
1300 =                  code_segment = BASE + $200
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0001 =                  wdc_op = WDC_OP
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = RKWL_OP
                        
                        ;skip testing all undefined opcodes override
                        ;0=test as NOP, >0=skip
0000 =                  skip_nop = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
005e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0062 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0066 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006c =                          dw  abs1+1
006e =                          dw  abs1+2
0070 =                          dw  abs1+3
0072 =                          dw  abs7f
0074 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0076 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0078 =                          dw  abst+1
007a =                          dw  abst+2
007c =                          dw  abst+3
007e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0080 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0082 =                          dw  absAN+1
0084 =                          dw  absAN+2
0086 =                          dw  absAN+3
0088 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008a =                          dw  absEO+1
008c =                          dw  absEO+2
008e =                          dw  absEO+3
0090 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0092 =                          dw  absOR+1
0094 =                          dw  absOR+2
0096 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0098 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
009e =                  sbiy2   dw  sba2-$ff
00a0 =                  zp_bss_end
                            
1100 =                          org data_segment
1100 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
1102 =                  test_case   ds  1           ;current test number
1103 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
1105 =                  abst                        ;5 bytes store/modify test area
1105 =                  ada2    ds  1               ;operand 2
1106 =                  sba2    ds  1               ;operand 2 complemented for subtract
1107 =                          ds  3               ;fill remaining bytes
110a =                  data_bss
                            if load_data_direct = 1
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
110a =                  ex_adci ds  3
110d =                  ex_sbci ds  3
                            endif
1110 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
1114 =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
1115 =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
1119 =                  rASL                        ;expected result ASL & ROL -carry  
1119 =                  rROL    db  $86,$04,$82,0   ; "
111d =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
1121 =                  rLSR                        ;expected result LSR & ROR -carry
1121 =                  rROR    db  $61,$41,$20,0   ; "
1125 =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
1129 =                  fASL                        ;expected flags for shifts
1129 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
112d =                  fROLc   db  fnc,fc,fn,0     ;carry in
1131 =                  fLSR
1131 =                  fROR    db  fc,0,fc,fz      ;no carry in
1135 =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
1139 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
113e =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
1143 =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
1147 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
114b =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
114f =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
1153 =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
1157 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
115b =                  absrlo  db  0,$ff,$7f,$80
115f =                  absflo  db  fz,fn,0,fn
1163 =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
11f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
11fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
1200 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
1300 =                          org code_segment
1300 : d8               start   cld
1301 : a2ff                     ldx #$ff
1303 : 9a                       txs
1304 : a900                     lda #0          ;*** test 0 = initialize
1306 : 8d0211                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
1309 : 201640                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
130c : a246                     ldx #zp_end-zp_init-1
130e : bdc041           ld_zp   lda zp_init,x
1311 : 9559                     sta zp_bss,x
1313 : ca                       dex
1314 : 10f8                     bpl ld_zp
1316 : a258                     ldx #data_end-data_init-1
1318 : bd0742           ld_data lda data_init,x
131b : 9d0a11                   sta data_bss,x
131e : ca                       dex
131f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
1321 : ad0211          >            lda test_case   ;previous test
1324 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1326 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1328 : 202540          >        jsr report_error
                       >
132b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
132b : a901            >            lda #test_num   ;*** next tests' number
132d : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
1330 : a999                     lda #$99        ;protect a
1332 : a2ff                     ldx #$ff        ;initialize stack
1334 : 9a                       txs
1335 : a255                     ldx #$55
1337 : da                       phx
1338 : a2aa                     ldx #$aa
133a : da                       phx
133b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
133e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
1340 : 202540          >        jsr report_error
                       >
1343 :                 >skip0004
                        
1343 : ba                       tsx
1344 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
1346 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
1348 : 202540          >        jsr report_error
                       >
134b :                 >skip0006
                        
134b : 7a                       ply
134c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
134e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
1350 : 202540          >        jsr report_error
                       >
1353 :                 >skip0008
                        
1353 : 7a                       ply
1354 : c055                     cpy #$55
                                trap_ne
1356 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
1358 : 202540          >        jsr report_error
                       >
135b :                 >skip0010
                        
135b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
135e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
1360 : 202540          >        jsr report_error
                       >
1363 :                 >skip0012
                        
1363 : ba                       tsx
1364 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
1366 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
1368 : 202540          >        jsr report_error
                       >
136b :                 >skip0014
                        
                                
136b : a0a5                     ldy #$a5
136d : 5a                       phy
136e : a05a                     ldy #$5a
1370 : 5a                       phy
1371 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
1374 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
1376 : 202540          >        jsr report_error
                       >
1379 :                 >skip0016
                        
1379 : ba                       tsx
137a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
137c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
137e : 202540          >        jsr report_error
                       >
1381 :                 >skip0018
                        
1381 : fa                       plx
1382 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
1384 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
1386 : 202540          >        jsr report_error
                       >
1389 :                 >skip0020
                        
1389 : fa                       plx
138a : e0a5                     cpx #$a5
                                trap_ne
138c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
138e : 202540          >        jsr report_error
                       >
1391 :                 >skip0022
                        
1391 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
1394 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
1396 : 202540          >        jsr report_error
                       >
1399 :                 >skip0024
                        
1399 : ba                       tsx
139a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
139c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
139e : 202540          >        jsr report_error
                       >
13a1 :                 >skip0026
                        
13a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
13a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
13a5 : 202540          >        jsr report_error
                       >
13a8 :                 >skip0028
                        
                                next_test            
13a8 : ad0211          >            lda test_case   ;previous test
13ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
13ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
13af : 202540          >        jsr report_error
                       >
13b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
13b2 : a902            >            lda #test_num   ;*** next tests' number
13b4 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
13b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
13b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
13bb : 48              >            pha         ;use stack to load status
13bc : a201            >            ldx #1     ;precharge index x
13be : 28              >            plp
                        
13bf : da                       phx
                                tst_x 1,$ff
13c0 : 08              >            php         ;save flags
13c1 : e001            >            cpx #1     ;test result
                       >            trap_ne
13c3 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
13c5 : 202540          >        jsr report_error
                       >
13c8 :                 >skip0036
                       >
13c8 : 68              >            pla         ;load status
13c9 : 48              >            pha
                       >            cmp_flag $ff
13ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
13ce : 202540          >        jsr report_error
                       >
13d1 :                 >skip0039
                       >
13d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
13d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13d4 : 48              >            pha         ;use stack to load status
13d5 : a200            >            ldx #0     ;precharge index x
13d7 : 28              >            plp
                        
13d8 : da                       phx
                                tst_x 0,0
13d9 : 08              >            php         ;save flags
13da : e000            >            cpx #0     ;test result
                       >            trap_ne
13dc : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
13de : 202540          >        jsr report_error
                       >
13e1 :                 >skip0044
                       >
13e1 : 68              >            pla         ;load status
13e2 : 48              >            pha
                       >            cmp_flag 0
13e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
13e7 : 202540          >        jsr report_error
                       >
13ea :                 >skip0047
                       >
13ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
13eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13ed : 48              >            pha         ;use stack to load status
13ee : a2ff            >            ldx #$ff     ;precharge index x
13f0 : 28              >            plp
                        
13f1 : da                       phx
                                tst_x $ff,$ff
13f2 : 08              >            php         ;save flags
13f3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
13f5 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
13f7 : 202540          >        jsr report_error
                       >
13fa :                 >skip0052
                       >
13fa : 68              >            pla         ;load status
13fb : 48              >            pha
                       >            cmp_flag $ff
13fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
1400 : 202540          >        jsr report_error
                       >
1403 :                 >skip0055
                       >
1403 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
1404 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1406 : 48              >            pha         ;use stack to load status
1407 : a201            >            ldx #1     ;precharge index x
1409 : 28              >            plp
                        
140a : da                       phx
                                tst_x 1,0
140b : 08              >            php         ;save flags
140c : e001            >            cpx #1     ;test result
                       >            trap_ne
140e : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
1410 : 202540          >        jsr report_error
                       >
1413 :                 >skip0060
                       >
1413 : 68              >            pla         ;load status
1414 : 48              >            pha
                       >            cmp_flag 0
1415 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1417 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
1419 : 202540          >        jsr report_error
                       >
141c :                 >skip0063
                       >
141c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
141d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
141f : 48              >            pha         ;use stack to load status
1420 : a200            >            ldx #0     ;precharge index x
1422 : 28              >            plp
                        
1423 : da                       phx
                                tst_x 0,$ff
1424 : 08              >            php         ;save flags
1425 : e000            >            cpx #0     ;test result
                       >            trap_ne
1427 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
1429 : 202540          >        jsr report_error
                       >
142c :                 >skip0068
                       >
142c : 68              >            pla         ;load status
142d : 48              >            pha
                       >            cmp_flag $ff
142e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1430 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
1432 : 202540          >        jsr report_error
                       >
1435 :                 >skip0071
                       >
1435 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
1436 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1438 : 48              >            pha         ;use stack to load status
1439 : a2ff            >            ldx #$ff     ;precharge index x
143b : 28              >            plp
                        
143c : da                       phx
                                tst_x $ff,0
143d : 08              >            php         ;save flags
143e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1440 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
1442 : 202540          >        jsr report_error
                       >
1445 :                 >skip0076
                       >
1445 : 68              >            pla         ;load status
1446 : 48              >            pha
                       >            cmp_flag 0
1447 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1449 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
144b : 202540          >        jsr report_error
                       >
144e :                 >skip0079
                       >
144e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
144f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1451 : 48              >            pha         ;use stack to load status
1452 : a200            >            ldx #0     ;precharge index x
1454 : 28              >            plp
                        
1455 : fa                       plx
                                tst_x $ff,$ff-zero
1456 : 08              >            php         ;save flags
1457 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1459 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
145b : 202540          >        jsr report_error
                       >
145e :                 >skip0084
                       >
145e : 68              >            pla         ;load status
145f : 48              >            pha
                       >            cmp_flag $ff-zero
1460 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1462 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
1464 : 202540          >        jsr report_error
                       >
1467 :                 >skip0087
                       >
1467 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
1468 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
146a : 48              >            pha         ;use stack to load status
146b : a2ff            >            ldx #$ff     ;precharge index x
146d : 28              >            plp
                        
146e : fa                       plx
                                tst_x 0,zero
146f : 08              >            php         ;save flags
1470 : e000            >            cpx #0     ;test result
                       >            trap_ne
1472 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
1474 : 202540          >        jsr report_error
                       >
1477 :                 >skip0092
                       >
1477 : 68              >            pla         ;load status
1478 : 48              >            pha
                       >            cmp_flag zero
1479 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
147b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
147d : 202540          >        jsr report_error
                       >
1480 :                 >skip0095
                       >
1480 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
1481 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1483 : 48              >            pha         ;use stack to load status
1484 : a2fe            >            ldx #$fe     ;precharge index x
1486 : 28              >            plp
                        
1487 : fa                       plx
                                tst_x 1,$ff-zero-minus
1488 : 08              >            php         ;save flags
1489 : e001            >            cpx #1     ;test result
                       >            trap_ne
148b : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
148d : 202540          >        jsr report_error
                       >
1490 :                 >skip0100
                       >
1490 : 68              >            pla         ;load status
1491 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
1492 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1494 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
1496 : 202540          >        jsr report_error
                       >
1499 :                 >skip0103
                       >
1499 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
149a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
149c : 48              >            pha         ;use stack to load status
149d : a200            >            ldx #0     ;precharge index x
149f : 28              >            plp
                        
14a0 : fa                       plx
                                tst_x $ff,minus
14a1 : 08              >            php         ;save flags
14a2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
14a4 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
14a6 : 202540          >        jsr report_error
                       >
14a9 :                 >skip0108
                       >
14a9 : 68              >            pla         ;load status
14aa : 48              >            pha
                       >            cmp_flag minus
14ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
14af : 202540          >        jsr report_error
                       >
14b2 :                 >skip0111
                       >
14b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
14b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14b5 : 48              >            pha         ;use stack to load status
14b6 : a2ff            >            ldx #$ff     ;precharge index x
14b8 : 28              >            plp
                        
14b9 : fa                       plx
                                tst_x 0,$ff-minus
14ba : 08              >            php         ;save flags
14bb : e000            >            cpx #0     ;test result
                       >            trap_ne
14bd : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
14bf : 202540          >        jsr report_error
                       >
14c2 :                 >skip0116
                       >
14c2 : 68              >            pla         ;load status
14c3 : 48              >            pha
                       >            cmp_flag $ff-minus
14c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
14c8 : 202540          >        jsr report_error
                       >
14cb :                 >skip0119
                       >
14cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
14cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14ce : 48              >            pha         ;use stack to load status
14cf : a2fe            >            ldx #$fe     ;precharge index x
14d1 : 28              >            plp
                        
14d2 : fa                       plx
                                tst_x 1,0
14d3 : 08              >            php         ;save flags
14d4 : e001            >            cpx #1     ;test result
                       >            trap_ne
14d6 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
14d8 : 202540          >        jsr report_error
                       >
14db :                 >skip0124
                       >
14db : 68              >            pla         ;load status
14dc : 48              >            pha
                       >            cmp_flag 0
14dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
14e1 : 202540          >        jsr report_error
                       >
14e4 :                 >skip0127
                       >
14e4 : 28              >            plp         ;restore status
                        
14e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
14e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
14e9 : 202540          >        jsr report_error
                       >
14ec :                 >skip0129
                        
                                next_test            
14ec : ad0211          >            lda test_case   ;previous test
14ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
14f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
14f3 : 202540          >        jsr report_error
                       >
14f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
14f6 : a903            >            lda #test_num   ;*** next tests' number
14f8 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
14fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
14fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
14ff : 48              >            pha         ;use stack to load status
1500 : a001            >            ldy #1     ;precharge index y
1502 : 28              >            plp
                        
1503 : 5a                       phy
                                tst_y 1,$ff
1504 : 08              >            php         ;save flags
1505 : c001            >            cpy #1     ;test result
                       >            trap_ne
1507 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
1509 : 202540          >        jsr report_error
                       >
150c :                 >skip0137
                       >
150c : 68              >            pla         ;load status
150d : 48              >            pha
                       >            cmp_flag $ff
150e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1510 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
1512 : 202540          >        jsr report_error
                       >
1515 :                 >skip0140
                       >
1515 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
1516 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1518 : 48              >            pha         ;use stack to load status
1519 : a000            >            ldy #0     ;precharge index y
151b : 28              >            plp
                        
151c : 5a                       phy
                                tst_y 0,0
151d : 08              >            php         ;save flags
151e : c000            >            cpy #0     ;test result
                       >            trap_ne
1520 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
1522 : 202540          >        jsr report_error
                       >
1525 :                 >skip0145
                       >
1525 : 68              >            pla         ;load status
1526 : 48              >            pha
                       >            cmp_flag 0
1527 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1529 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
152b : 202540          >        jsr report_error
                       >
152e :                 >skip0148
                       >
152e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
152f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1531 : 48              >            pha         ;use stack to load status
1532 : a0ff            >            ldy #$ff     ;precharge index y
1534 : 28              >            plp
                        
1535 : 5a                       phy
                                tst_y $ff,$ff
1536 : 08              >            php         ;save flags
1537 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1539 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
153b : 202540          >        jsr report_error
                       >
153e :                 >skip0153
                       >
153e : 68              >            pla         ;load status
153f : 48              >            pha
                       >            cmp_flag $ff
1540 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1542 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
1544 : 202540          >        jsr report_error
                       >
1547 :                 >skip0156
                       >
1547 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
1548 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
154a : 48              >            pha         ;use stack to load status
154b : a001            >            ldy #1     ;precharge index y
154d : 28              >            plp
                        
154e : 5a                       phy
                                tst_y 1,0
154f : 08              >            php         ;save flags
1550 : c001            >            cpy #1     ;test result
                       >            trap_ne
1552 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
1554 : 202540          >        jsr report_error
                       >
1557 :                 >skip0161
                       >
1557 : 68              >            pla         ;load status
1558 : 48              >            pha
                       >            cmp_flag 0
1559 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
155b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
155d : 202540          >        jsr report_error
                       >
1560 :                 >skip0164
                       >
1560 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
1561 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1563 : 48              >            pha         ;use stack to load status
1564 : a000            >            ldy #0     ;precharge index y
1566 : 28              >            plp
                        
1567 : 5a                       phy
                                tst_y 0,$ff
1568 : 08              >            php         ;save flags
1569 : c000            >            cpy #0     ;test result
                       >            trap_ne
156b : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
156d : 202540          >        jsr report_error
                       >
1570 :                 >skip0169
                       >
1570 : 68              >            pla         ;load status
1571 : 48              >            pha
                       >            cmp_flag $ff
1572 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1574 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
1576 : 202540          >        jsr report_error
                       >
1579 :                 >skip0172
                       >
1579 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
157a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
157c : 48              >            pha         ;use stack to load status
157d : a0ff            >            ldy #$ff     ;precharge index y
157f : 28              >            plp
                        
1580 : 5a                       phy
                                tst_y $ff,0
1581 : 08              >            php         ;save flags
1582 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1584 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
1586 : 202540          >        jsr report_error
                       >
1589 :                 >skip0177
                       >
1589 : 68              >            pla         ;load status
158a : 48              >            pha
                       >            cmp_flag 0
158b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
158d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
158f : 202540          >        jsr report_error
                       >
1592 :                 >skip0180
                       >
1592 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
1593 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1595 : 48              >            pha         ;use stack to load status
1596 : a000            >            ldy #0     ;precharge index y
1598 : 28              >            plp
                        
1599 : 7a                       ply
                                tst_y $ff,$ff-zero
159a : 08              >            php         ;save flags
159b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
159d : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
159f : 202540          >        jsr report_error
                       >
15a2 :                 >skip0185
                       >
15a2 : 68              >            pla         ;load status
15a3 : 48              >            pha
                       >            cmp_flag $ff-zero
15a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
15a8 : 202540          >        jsr report_error
                       >
15ab :                 >skip0188
                       >
15ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
15ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15ae : 48              >            pha         ;use stack to load status
15af : a0ff            >            ldy #$ff     ;precharge index y
15b1 : 28              >            plp
                        
15b2 : 7a                       ply
                                tst_y 0,zero
15b3 : 08              >            php         ;save flags
15b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
15b6 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
15b8 : 202540          >        jsr report_error
                       >
15bb :                 >skip0193
                       >
15bb : 68              >            pla         ;load status
15bc : 48              >            pha
                       >            cmp_flag zero
15bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
15c1 : 202540          >        jsr report_error
                       >
15c4 :                 >skip0196
                       >
15c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
15c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15c7 : 48              >            pha         ;use stack to load status
15c8 : a0fe            >            ldy #$fe     ;precharge index y
15ca : 28              >            plp
                        
15cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
15cc : 08              >            php         ;save flags
15cd : c001            >            cpy #1     ;test result
                       >            trap_ne
15cf : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
15d1 : 202540          >        jsr report_error
                       >
15d4 :                 >skip0201
                       >
15d4 : 68              >            pla         ;load status
15d5 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
15d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
15da : 202540          >        jsr report_error
                       >
15dd :                 >skip0204
                       >
15dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
15de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15e0 : 48              >            pha         ;use stack to load status
15e1 : a000            >            ldy #0     ;precharge index y
15e3 : 28              >            plp
                        
15e4 : 7a                       ply
                                tst_y $ff,minus
15e5 : 08              >            php         ;save flags
15e6 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
15e8 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
15ea : 202540          >        jsr report_error
                       >
15ed :                 >skip0209
                       >
15ed : 68              >            pla         ;load status
15ee : 48              >            pha
                       >            cmp_flag minus
15ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
15f3 : 202540          >        jsr report_error
                       >
15f6 :                 >skip0212
                       >
15f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
15f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15f9 : 48              >            pha         ;use stack to load status
15fa : a0ff            >            ldy #$ff     ;precharge index y
15fc : 28              >            plp
                        
15fd : 7a                       ply
                                tst_y 0,$ff-minus
15fe : 08              >            php         ;save flags
15ff : c000            >            cpy #0     ;test result
                       >            trap_ne
1601 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
1603 : 202540          >        jsr report_error
                       >
1606 :                 >skip0217
                       >
1606 : 68              >            pla         ;load status
1607 : 48              >            pha
                       >            cmp_flag $ff-minus
1608 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
160a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
160c : 202540          >        jsr report_error
                       >
160f :                 >skip0220
                       >
160f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
1610 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1612 : 48              >            pha         ;use stack to load status
1613 : a0fe            >            ldy #$fe     ;precharge index y
1615 : 28              >            plp
                        
1616 : 7a                       ply
                                tst_y 1,0
1617 : 08              >            php         ;save flags
1618 : c001            >            cpy #1     ;test result
                       >            trap_ne
161a : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
161c : 202540          >        jsr report_error
                       >
161f :                 >skip0225
                       >
161f : 68              >            pla         ;load status
1620 : 48              >            pha
                       >            cmp_flag 0
1621 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1623 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
1625 : 202540          >        jsr report_error
                       >
1628 :                 >skip0228
                       >
1628 : 28              >            plp         ;restore status
                        
1629 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
162b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
162d : 202540          >        jsr report_error
                       >
1630 :                 >skip0230
                        
                                next_test            
1630 : ad0211          >            lda test_case   ;previous test
1633 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1635 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
1637 : 202540          >        jsr report_error
                       >
163a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
163a : a904            >            lda #test_num   ;*** next tests' number
163c : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
163f : a281                     ldx #$81        ;protect unused registers
1641 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
1643 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1645 : 48              >            pha         ;use stack to load status
1646 : a900            >            lda #0     ;precharge accu
1648 : 28              >            plp
                        
1649 : 8003                     bra br1         ;branch should always be taken
                                trap 
164b : 202540          >        jsr report_error
                        
164e :                  br1
                                tst_a 0,$ff
164e : 08              >            php         ;save flags
164f : c900            >            cmp #0     ;test result
                       >            trap_ne
1651 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
1653 : 202540          >        jsr report_error
                       >
1656 :                 >skip0239
                       >
1656 : 68              >            pla         ;load status
1657 : 48              >            pha
                       >            cmp_flag $ff
1658 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
165a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
165c : 202540          >        jsr report_error
                       >
165f :                 >skip0242
                       >
165f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
1660 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1662 : 48              >            pha         ;use stack to load status
1663 : a9ff            >            lda #$ff     ;precharge accu
1665 : 28              >            plp
                        
1666 : 8003                     bra br2         ;branch should always be taken
                                trap 
1668 : 202540          >        jsr report_error
                        
166b :                  br2
                                tst_a $ff,0
166b : 08              >            php         ;save flags
166c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
166e : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
1670 : 202540          >        jsr report_error
                       >
1673 :                 >skip0248
                       >
1673 : 68              >            pla         ;load status
1674 : 48              >            pha
                       >            cmp_flag 0
1675 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1677 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
1679 : 202540          >        jsr report_error
                       >
167c :                 >skip0251
                       >
167c : 28              >            plp         ;restore status
                        
167d : e081                     cpx #$81
                                trap_ne
167f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
1681 : 202540          >        jsr report_error
                       >
1684 :                 >skip0253
                        
1684 : c07e                     cpy #$7e
                                trap_ne
1686 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
1688 : 202540          >        jsr report_error
                       >
168b :                 >skip0255
                        
                                next_test            
168b : ad0211          >            lda test_case   ;previous test
168e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1690 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
1692 : 202540          >        jsr report_error
                       >
1695 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
1695 : a905            >            lda #test_num   ;*** next tests' number
1697 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
169a : a000                     ldy #0          ;branch range test  
169c : 8076                     bra bra0
                                
169e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
16a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
16a2 : 202540          >        jsr report_error
                       >
16a5 :                 >skip0260
                        
16a5 : c8                       iny        
16a6 : 8062                     bra bra2
                                        
16a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
16aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
16ac : 202540          >        jsr report_error
                       >
16af :                 >skip0262
                        
16af : c8                       iny        
16b0 : 804e                     bra bra4
                                        
16b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
16b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
16b6 : 202540          >        jsr report_error
                       >
16b9 :                 >skip0264
                        
16b9 : c8                       iny        
16ba : a000                     ldy #0
16bc : 8004                     bra brf0
                                
16be : c8                       iny
16bf : c8                       iny
16c0 : c8                       iny
16c1 : c8                       iny        
16c2 : 8003             brf0    bra brf1
                        
16c4 : c8                       iny
16c5 : c8                       iny
16c6 : c8                       iny
16c7 : c8               brf1    iny        
16c8 : 8002                     bra brf2
                                
16ca : c8                       iny
16cb : c8                       iny
16cc : c8               brf2    iny
16cd : c8                       iny        
16ce : 8001                     bra brf3
                                
16d0 : c8                       iny
16d1 : c8               brf3    iny
16d2 : c8                       iny
16d3 : c8                       iny        
16d4 : 8000                     bra brf4
                                
16d6 : c8               brf4    iny
16d7 : c8                       iny
16d8 : c8                       iny
16d9 : c8                       iny
16da : c00a                     cpy #10
                                trap_ne     ;short range forward
16dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
16de : 202540          >        jsr report_error
                       >
16e1 :                 >skip0266
                        
16e1 : 8012                     bra brb0
                        
16e3 : 88               brb4    dey
16e4 : 88                       dey
16e5 : 88                       dey
16e6 : 88                       dey
16e7 : 800e                     bra brb5        
                        
16e9 : 88               brb3    dey
16ea : 88                       dey
16eb : 88                       dey
16ec : 80f5                     bra brb4        
                        
16ee : 88               brb2    dey
16ef : 88                       dey
16f0 : 80f7                     bra brb3        
                        
16f2 : 88               brb1    dey
16f3 : 80f9                     bra brb2        
                        
16f5 : 80fb             brb0    bra brb1        
                        
16f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
16f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
16fb : 202540          >        jsr report_error
                       >
16fe :                 >skip0268
                        
16fe : 801e                     bra bra6
                        
1700 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
1702 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
1704 : 202540          >        jsr report_error
                       >
1707 :                 >skip0270
                        
1707 : c8                       iny        
1708 : 80a8                     bra bra5
                                        
170a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
170c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
170e : 202540          >        jsr report_error
                       >
1711 :                 >skip0272
                        
1711 : c8                       iny        
1712 : 8094                     bra bra3
                                        
1714 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
1716 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
1718 : 202540          >        jsr report_error
                       >
171b :                 >skip0274
                        
171b : c8                       iny        
171c : 8080                     bra bra1
                                        
171e :                  bra6
                                next_test
171e : ad0211          >            lda test_case   ;previous test
1721 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1723 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
1725 : 202540          >        jsr report_error
                       >
1728 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
1728 : a906            >            lda #test_num   ;*** next tests' number
172a : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
172d : a211                     ldx #$11        ;test bbr/bbs integrity
172f : a022                     ldy #$22
                                bbt 0
1731 : a901            >        lda #(1<<0)    ;testing 1 bit on
1733 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1735 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1737 : 48              >            pha         ;use stack to load status
1738 : a933            >            lda #$33     ;precharge accu
173a : 28              >            plp
                       >
173b : 0f5206          >        bbr 0,zpt,fail10279
173e : 8f5206          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
1741 : 202540          >        jsr report_error
                       >
1744 :                 >fail10279
                       >        trap            ;bbr branch taken
1744 : 202540          >        jsr report_error
                       >
1747 :                 >ok10279   
                       >        tst_a $33,0
1747 : 08              >            php         ;save flags
1748 : c933            >            cmp #$33     ;test result
                       >            trap_ne
174a : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
174c : 202540          >        jsr report_error
                       >
174f :                 >skip0285
                       >
174f : 68              >            pla         ;load status
1750 : 48              >            pha
                       >            cmp_flag 0
1751 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1753 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
1755 : 202540          >        jsr report_error
                       >
1758 :                 >skip0288
                       >
1758 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1759 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
175b : 48              >            pha         ;use stack to load status
175c : a9cc            >            lda #$cc     ;precharge accu
175e : 28              >            plp
                       >
175f : 0f5206          >        bbr 0,zpt,fail20279
1762 : 8f5206          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
1765 : 202540          >        jsr report_error
                       >
1768 :                 >fail20279 
                       >        trap            ;bbr branch taken
1768 : 202540          >        jsr report_error
                       >
176b :                 >ok20279   
                       >        tst_a $cc,$ff
176b : 08              >            php         ;save flags
176c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
176e : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
1770 : 202540          >        jsr report_error
                       >
1773 :                 >skip0295
                       >
1773 : 68              >            pla         ;load status
1774 : 48              >            pha
                       >            cmp_flag $ff
1775 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1777 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
1779 : 202540          >        jsr report_error
                       >
177c :                 >skip0298
                       >
177c : 28              >            plp         ;restore status
                       >
177d : a552            >        lda zpt
177f : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
1781 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
1783 : 202540          >        jsr report_error
                       >
1786 :                 >skip0300
                       >
1786 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
1788 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
178a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
178c : 48              >            pha         ;use stack to load status
178d : a933            >            lda #$33     ;precharge accu
178f : 28              >            plp
                       >
1790 : 8f5206          >        bbs 0,zpt,fail30279
1793 : 0f5206          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
1796 : 202540          >        jsr report_error
                       >
1799 :                 >fail30279 
                       >        trap            ;bbs branch taken
1799 : 202540          >        jsr report_error
                       >
179c :                 >ok30279   
                       >        tst_a $33,0
179c : 08              >            php         ;save flags
179d : c933            >            cmp #$33     ;test result
                       >            trap_ne
179f : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
17a1 : 202540          >        jsr report_error
                       >
17a4 :                 >skip0307
                       >
17a4 : 68              >            pla         ;load status
17a5 : 48              >            pha
                       >            cmp_flag 0
17a6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17a8 : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
17aa : 202540          >        jsr report_error
                       >
17ad :                 >skip0310
                       >
17ad : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
17ae : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
17b0 : 48              >            pha         ;use stack to load status
17b1 : a9cc            >            lda #$cc     ;precharge accu
17b3 : 28              >            plp
                       >
17b4 : 8f5206          >        bbs 0,zpt,fail40279
17b7 : 0f5206          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
17ba : 202540          >        jsr report_error
                       >
17bd :                 >fail40279 
                       >        trap            ;bbs branch taken
17bd : 202540          >        jsr report_error
                       >
17c0 :                 >ok40279   
                       >        tst_a $cc,$ff
17c0 : 08              >            php         ;save flags
17c1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
17c3 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
17c5 : 202540          >        jsr report_error
                       >
17c8 :                 >skip0317
                       >
17c8 : 68              >            pla         ;load status
17c9 : 48              >            pha
                       >            cmp_flag $ff
17ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17cc : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
17ce : 202540          >        jsr report_error
                       >
17d1 :                 >skip0320
                       >
17d1 : 28              >            plp         ;restore status
                       >
17d2 : a552            >        lda zpt
17d4 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
17d6 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
17d8 : 202540          >        jsr report_error
                       >
17db :                 >skip0322
                       >
                        
                                bbt 1
17db : a902            >        lda #(1<<1)    ;testing 1 bit on
17dd : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
17df : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
17e1 : 48              >            pha         ;use stack to load status
17e2 : a933            >            lda #$33     ;precharge accu
17e4 : 28              >            plp
                       >
17e5 : 1f5206          >        bbr 1,zpt,fail10324
17e8 : 9f5206          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
17eb : 202540          >        jsr report_error
                       >
17ee :                 >fail10324
                       >        trap            ;bbr branch taken
17ee : 202540          >        jsr report_error
                       >
17f1 :                 >ok10324   
                       >        tst_a $33,0
17f1 : 08              >            php         ;save flags
17f2 : c933            >            cmp #$33     ;test result
                       >            trap_ne
17f4 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
17f6 : 202540          >        jsr report_error
                       >
17f9 :                 >skip0330
                       >
17f9 : 68              >            pla         ;load status
17fa : 48              >            pha
                       >            cmp_flag 0
17fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17fd : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
17ff : 202540          >        jsr report_error
                       >
1802 :                 >skip0333
                       >
1802 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1803 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1805 : 48              >            pha         ;use stack to load status
1806 : a9cc            >            lda #$cc     ;precharge accu
1808 : 28              >            plp
                       >
1809 : 1f5206          >        bbr 1,zpt,fail20324
180c : 9f5206          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
180f : 202540          >        jsr report_error
                       >
1812 :                 >fail20324 
                       >        trap            ;bbr branch taken
1812 : 202540          >        jsr report_error
                       >
1815 :                 >ok20324   
                       >        tst_a $cc,$ff
1815 : 08              >            php         ;save flags
1816 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1818 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
181a : 202540          >        jsr report_error
                       >
181d :                 >skip0340
                       >
181d : 68              >            pla         ;load status
181e : 48              >            pha
                       >            cmp_flag $ff
181f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1821 : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
1823 : 202540          >        jsr report_error
                       >
1826 :                 >skip0343
                       >
1826 : 28              >            plp         ;restore status
                       >
1827 : a552            >        lda zpt
1829 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
182b : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
182d : 202540          >        jsr report_error
                       >
1830 :                 >skip0345
                       >
1830 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
1832 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1834 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1836 : 48              >            pha         ;use stack to load status
1837 : a933            >            lda #$33     ;precharge accu
1839 : 28              >            plp
                       >
183a : 9f5206          >        bbs 1,zpt,fail30324
183d : 1f5206          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
1840 : 202540          >        jsr report_error
                       >
1843 :                 >fail30324 
                       >        trap            ;bbs branch taken
1843 : 202540          >        jsr report_error
                       >
1846 :                 >ok30324   
                       >        tst_a $33,0
1846 : 08              >            php         ;save flags
1847 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1849 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
184b : 202540          >        jsr report_error
                       >
184e :                 >skip0352
                       >
184e : 68              >            pla         ;load status
184f : 48              >            pha
                       >            cmp_flag 0
1850 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1852 : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
1854 : 202540          >        jsr report_error
                       >
1857 :                 >skip0355
                       >
1857 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1858 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
185a : 48              >            pha         ;use stack to load status
185b : a9cc            >            lda #$cc     ;precharge accu
185d : 28              >            plp
                       >
185e : 9f5206          >        bbs 1,zpt,fail40324
1861 : 1f5206          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
1864 : 202540          >        jsr report_error
                       >
1867 :                 >fail40324 
                       >        trap            ;bbs branch taken
1867 : 202540          >        jsr report_error
                       >
186a :                 >ok40324   
                       >        tst_a $cc,$ff
186a : 08              >            php         ;save flags
186b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
186d : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
186f : 202540          >        jsr report_error
                       >
1872 :                 >skip0362
                       >
1872 : 68              >            pla         ;load status
1873 : 48              >            pha
                       >            cmp_flag $ff
1874 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1876 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
1878 : 202540          >        jsr report_error
                       >
187b :                 >skip0365
                       >
187b : 28              >            plp         ;restore status
                       >
187c : a552            >        lda zpt
187e : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
1880 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
1882 : 202540          >        jsr report_error
                       >
1885 :                 >skip0367
                       >
                        
                                bbt 2
1885 : a904            >        lda #(1<<2)    ;testing 1 bit on
1887 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1889 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
188b : 48              >            pha         ;use stack to load status
188c : a933            >            lda #$33     ;precharge accu
188e : 28              >            plp
                       >
188f : 2f5206          >        bbr 2,zpt,fail10369
1892 : af5206          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
1895 : 202540          >        jsr report_error
                       >
1898 :                 >fail10369
                       >        trap            ;bbr branch taken
1898 : 202540          >        jsr report_error
                       >
189b :                 >ok10369   
                       >        tst_a $33,0
189b : 08              >            php         ;save flags
189c : c933            >            cmp #$33     ;test result
                       >            trap_ne
189e : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
18a0 : 202540          >        jsr report_error
                       >
18a3 :                 >skip0375
                       >
18a3 : 68              >            pla         ;load status
18a4 : 48              >            pha
                       >            cmp_flag 0
18a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18a7 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
18a9 : 202540          >        jsr report_error
                       >
18ac :                 >skip0378
                       >
18ac : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
18ad : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
18af : 48              >            pha         ;use stack to load status
18b0 : a9cc            >            lda #$cc     ;precharge accu
18b2 : 28              >            plp
                       >
18b3 : 2f5206          >        bbr 2,zpt,fail20369
18b6 : af5206          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
18b9 : 202540          >        jsr report_error
                       >
18bc :                 >fail20369 
                       >        trap            ;bbr branch taken
18bc : 202540          >        jsr report_error
                       >
18bf :                 >ok20369   
                       >        tst_a $cc,$ff
18bf : 08              >            php         ;save flags
18c0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
18c2 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
18c4 : 202540          >        jsr report_error
                       >
18c7 :                 >skip0385
                       >
18c7 : 68              >            pla         ;load status
18c8 : 48              >            pha
                       >            cmp_flag $ff
18c9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18cb : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
18cd : 202540          >        jsr report_error
                       >
18d0 :                 >skip0388
                       >
18d0 : 28              >            plp         ;restore status
                       >
18d1 : a552            >        lda zpt
18d3 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
18d5 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
18d7 : 202540          >        jsr report_error
                       >
18da :                 >skip0390
                       >
18da : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
18dc : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
18de : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
18e0 : 48              >            pha         ;use stack to load status
18e1 : a933            >            lda #$33     ;precharge accu
18e3 : 28              >            plp
                       >
18e4 : af5206          >        bbs 2,zpt,fail30369
18e7 : 2f5206          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
18ea : 202540          >        jsr report_error
                       >
18ed :                 >fail30369 
                       >        trap            ;bbs branch taken
18ed : 202540          >        jsr report_error
                       >
18f0 :                 >ok30369   
                       >        tst_a $33,0
18f0 : 08              >            php         ;save flags
18f1 : c933            >            cmp #$33     ;test result
                       >            trap_ne
18f3 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
18f5 : 202540          >        jsr report_error
                       >
18f8 :                 >skip0397
                       >
18f8 : 68              >            pla         ;load status
18f9 : 48              >            pha
                       >            cmp_flag 0
18fa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18fc : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
18fe : 202540          >        jsr report_error
                       >
1901 :                 >skip0400
                       >
1901 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1902 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1904 : 48              >            pha         ;use stack to load status
1905 : a9cc            >            lda #$cc     ;precharge accu
1907 : 28              >            plp
                       >
1908 : af5206          >        bbs 2,zpt,fail40369
190b : 2f5206          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
190e : 202540          >        jsr report_error
                       >
1911 :                 >fail40369 
                       >        trap            ;bbs branch taken
1911 : 202540          >        jsr report_error
                       >
1914 :                 >ok40369   
                       >        tst_a $cc,$ff
1914 : 08              >            php         ;save flags
1915 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1917 : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
1919 : 202540          >        jsr report_error
                       >
191c :                 >skip0407
                       >
191c : 68              >            pla         ;load status
191d : 48              >            pha
                       >            cmp_flag $ff
191e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1920 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
1922 : 202540          >        jsr report_error
                       >
1925 :                 >skip0410
                       >
1925 : 28              >            plp         ;restore status
                       >
1926 : a552            >        lda zpt
1928 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
192a : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
192c : 202540          >        jsr report_error
                       >
192f :                 >skip0412
                       >
                        
                                bbt 3
192f : a908            >        lda #(1<<3)    ;testing 1 bit on
1931 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1933 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1935 : 48              >            pha         ;use stack to load status
1936 : a933            >            lda #$33     ;precharge accu
1938 : 28              >            plp
                       >
1939 : 3f5206          >        bbr 3,zpt,fail10414
193c : bf5206          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
193f : 202540          >        jsr report_error
                       >
1942 :                 >fail10414
                       >        trap            ;bbr branch taken
1942 : 202540          >        jsr report_error
                       >
1945 :                 >ok10414   
                       >        tst_a $33,0
1945 : 08              >            php         ;save flags
1946 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1948 : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
194a : 202540          >        jsr report_error
                       >
194d :                 >skip0420
                       >
194d : 68              >            pla         ;load status
194e : 48              >            pha
                       >            cmp_flag 0
194f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1951 : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
1953 : 202540          >        jsr report_error
                       >
1956 :                 >skip0423
                       >
1956 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1957 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1959 : 48              >            pha         ;use stack to load status
195a : a9cc            >            lda #$cc     ;precharge accu
195c : 28              >            plp
                       >
195d : 3f5206          >        bbr 3,zpt,fail20414
1960 : bf5206          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
1963 : 202540          >        jsr report_error
                       >
1966 :                 >fail20414 
                       >        trap            ;bbr branch taken
1966 : 202540          >        jsr report_error
                       >
1969 :                 >ok20414   
                       >        tst_a $cc,$ff
1969 : 08              >            php         ;save flags
196a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
196c : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
196e : 202540          >        jsr report_error
                       >
1971 :                 >skip0430
                       >
1971 : 68              >            pla         ;load status
1972 : 48              >            pha
                       >            cmp_flag $ff
1973 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1975 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
1977 : 202540          >        jsr report_error
                       >
197a :                 >skip0433
                       >
197a : 28              >            plp         ;restore status
                       >
197b : a552            >        lda zpt
197d : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
197f : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
1981 : 202540          >        jsr report_error
                       >
1984 :                 >skip0435
                       >
1984 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
1986 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1988 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
198a : 48              >            pha         ;use stack to load status
198b : a933            >            lda #$33     ;precharge accu
198d : 28              >            plp
                       >
198e : bf5206          >        bbs 3,zpt,fail30414
1991 : 3f5206          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
1994 : 202540          >        jsr report_error
                       >
1997 :                 >fail30414 
                       >        trap            ;bbs branch taken
1997 : 202540          >        jsr report_error
                       >
199a :                 >ok30414   
                       >        tst_a $33,0
199a : 08              >            php         ;save flags
199b : c933            >            cmp #$33     ;test result
                       >            trap_ne
199d : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
199f : 202540          >        jsr report_error
                       >
19a2 :                 >skip0442
                       >
19a2 : 68              >            pla         ;load status
19a3 : 48              >            pha
                       >            cmp_flag 0
19a4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19a6 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
19a8 : 202540          >        jsr report_error
                       >
19ab :                 >skip0445
                       >
19ab : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
19ac : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
19ae : 48              >            pha         ;use stack to load status
19af : a9cc            >            lda #$cc     ;precharge accu
19b1 : 28              >            plp
                       >
19b2 : bf5206          >        bbs 3,zpt,fail40414
19b5 : 3f5206          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
19b8 : 202540          >        jsr report_error
                       >
19bb :                 >fail40414 
                       >        trap            ;bbs branch taken
19bb : 202540          >        jsr report_error
                       >
19be :                 >ok40414   
                       >        tst_a $cc,$ff
19be : 08              >            php         ;save flags
19bf : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
19c1 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
19c3 : 202540          >        jsr report_error
                       >
19c6 :                 >skip0452
                       >
19c6 : 68              >            pla         ;load status
19c7 : 48              >            pha
                       >            cmp_flag $ff
19c8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19ca : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
19cc : 202540          >        jsr report_error
                       >
19cf :                 >skip0455
                       >
19cf : 28              >            plp         ;restore status
                       >
19d0 : a552            >        lda zpt
19d2 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
19d4 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
19d6 : 202540          >        jsr report_error
                       >
19d9 :                 >skip0457
                       >
                        
                                bbt 4
19d9 : a910            >        lda #(1<<4)    ;testing 1 bit on
19db : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
19dd : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
19df : 48              >            pha         ;use stack to load status
19e0 : a933            >            lda #$33     ;precharge accu
19e2 : 28              >            plp
                       >
19e3 : 4f5206          >        bbr 4,zpt,fail10459
19e6 : cf5206          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
19e9 : 202540          >        jsr report_error
                       >
19ec :                 >fail10459
                       >        trap            ;bbr branch taken
19ec : 202540          >        jsr report_error
                       >
19ef :                 >ok10459   
                       >        tst_a $33,0
19ef : 08              >            php         ;save flags
19f0 : c933            >            cmp #$33     ;test result
                       >            trap_ne
19f2 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
19f4 : 202540          >        jsr report_error
                       >
19f7 :                 >skip0465
                       >
19f7 : 68              >            pla         ;load status
19f8 : 48              >            pha
                       >            cmp_flag 0
19f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19fb : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
19fd : 202540          >        jsr report_error
                       >
1a00 :                 >skip0468
                       >
1a00 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1a01 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1a03 : 48              >            pha         ;use stack to load status
1a04 : a9cc            >            lda #$cc     ;precharge accu
1a06 : 28              >            plp
                       >
1a07 : 4f5206          >        bbr 4,zpt,fail20459
1a0a : cf5206          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
1a0d : 202540          >        jsr report_error
                       >
1a10 :                 >fail20459 
                       >        trap            ;bbr branch taken
1a10 : 202540          >        jsr report_error
                       >
1a13 :                 >ok20459   
                       >        tst_a $cc,$ff
1a13 : 08              >            php         ;save flags
1a14 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1a16 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
1a18 : 202540          >        jsr report_error
                       >
1a1b :                 >skip0475
                       >
1a1b : 68              >            pla         ;load status
1a1c : 48              >            pha
                       >            cmp_flag $ff
1a1d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a1f : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
1a21 : 202540          >        jsr report_error
                       >
1a24 :                 >skip0478
                       >
1a24 : 28              >            plp         ;restore status
                       >
1a25 : a552            >        lda zpt
1a27 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
1a29 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
1a2b : 202540          >        jsr report_error
                       >
1a2e :                 >skip0480
                       >
1a2e : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
1a30 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1a32 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1a34 : 48              >            pha         ;use stack to load status
1a35 : a933            >            lda #$33     ;precharge accu
1a37 : 28              >            plp
                       >
1a38 : cf5206          >        bbs 4,zpt,fail30459
1a3b : 4f5206          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
1a3e : 202540          >        jsr report_error
                       >
1a41 :                 >fail30459 
                       >        trap            ;bbs branch taken
1a41 : 202540          >        jsr report_error
                       >
1a44 :                 >ok30459   
                       >        tst_a $33,0
1a44 : 08              >            php         ;save flags
1a45 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1a47 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
1a49 : 202540          >        jsr report_error
                       >
1a4c :                 >skip0487
                       >
1a4c : 68              >            pla         ;load status
1a4d : 48              >            pha
                       >            cmp_flag 0
1a4e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a50 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
1a52 : 202540          >        jsr report_error
                       >
1a55 :                 >skip0490
                       >
1a55 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1a56 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1a58 : 48              >            pha         ;use stack to load status
1a59 : a9cc            >            lda #$cc     ;precharge accu
1a5b : 28              >            plp
                       >
1a5c : cf5206          >        bbs 4,zpt,fail40459
1a5f : 4f5206          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
1a62 : 202540          >        jsr report_error
                       >
1a65 :                 >fail40459 
                       >        trap            ;bbs branch taken
1a65 : 202540          >        jsr report_error
                       >
1a68 :                 >ok40459   
                       >        tst_a $cc,$ff
1a68 : 08              >            php         ;save flags
1a69 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1a6b : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
1a6d : 202540          >        jsr report_error
                       >
1a70 :                 >skip0497
                       >
1a70 : 68              >            pla         ;load status
1a71 : 48              >            pha
                       >            cmp_flag $ff
1a72 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a74 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
1a76 : 202540          >        jsr report_error
                       >
1a79 :                 >skip0500
                       >
1a79 : 28              >            plp         ;restore status
                       >
1a7a : a552            >        lda zpt
1a7c : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
1a7e : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
1a80 : 202540          >        jsr report_error
                       >
1a83 :                 >skip0502
                       >
                        
                                bbt 5
1a83 : a920            >        lda #(1<<5)    ;testing 1 bit on
1a85 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1a87 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1a89 : 48              >            pha         ;use stack to load status
1a8a : a933            >            lda #$33     ;precharge accu
1a8c : 28              >            plp
                       >
1a8d : 5f5206          >        bbr 5,zpt,fail10504
1a90 : df5206          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
1a93 : 202540          >        jsr report_error
                       >
1a96 :                 >fail10504
                       >        trap            ;bbr branch taken
1a96 : 202540          >        jsr report_error
                       >
1a99 :                 >ok10504   
                       >        tst_a $33,0
1a99 : 08              >            php         ;save flags
1a9a : c933            >            cmp #$33     ;test result
                       >            trap_ne
1a9c : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
1a9e : 202540          >        jsr report_error
                       >
1aa1 :                 >skip0510
                       >
1aa1 : 68              >            pla         ;load status
1aa2 : 48              >            pha
                       >            cmp_flag 0
1aa3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aa5 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
1aa7 : 202540          >        jsr report_error
                       >
1aaa :                 >skip0513
                       >
1aaa : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1aab : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1aad : 48              >            pha         ;use stack to load status
1aae : a9cc            >            lda #$cc     ;precharge accu
1ab0 : 28              >            plp
                       >
1ab1 : 5f5206          >        bbr 5,zpt,fail20504
1ab4 : df5206          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
1ab7 : 202540          >        jsr report_error
                       >
1aba :                 >fail20504 
                       >        trap            ;bbr branch taken
1aba : 202540          >        jsr report_error
                       >
1abd :                 >ok20504   
                       >        tst_a $cc,$ff
1abd : 08              >            php         ;save flags
1abe : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1ac0 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
1ac2 : 202540          >        jsr report_error
                       >
1ac5 :                 >skip0520
                       >
1ac5 : 68              >            pla         ;load status
1ac6 : 48              >            pha
                       >            cmp_flag $ff
1ac7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ac9 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
1acb : 202540          >        jsr report_error
                       >
1ace :                 >skip0523
                       >
1ace : 28              >            plp         ;restore status
                       >
1acf : a552            >        lda zpt
1ad1 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
1ad3 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
1ad5 : 202540          >        jsr report_error
                       >
1ad8 :                 >skip0525
                       >
1ad8 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
1ada : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1adc : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1ade : 48              >            pha         ;use stack to load status
1adf : a933            >            lda #$33     ;precharge accu
1ae1 : 28              >            plp
                       >
1ae2 : df5206          >        bbs 5,zpt,fail30504
1ae5 : 5f5206          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
1ae8 : 202540          >        jsr report_error
                       >
1aeb :                 >fail30504 
                       >        trap            ;bbs branch taken
1aeb : 202540          >        jsr report_error
                       >
1aee :                 >ok30504   
                       >        tst_a $33,0
1aee : 08              >            php         ;save flags
1aef : c933            >            cmp #$33     ;test result
                       >            trap_ne
1af1 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
1af3 : 202540          >        jsr report_error
                       >
1af6 :                 >skip0532
                       >
1af6 : 68              >            pla         ;load status
1af7 : 48              >            pha
                       >            cmp_flag 0
1af8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1afa : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
1afc : 202540          >        jsr report_error
                       >
1aff :                 >skip0535
                       >
1aff : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1b00 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1b02 : 48              >            pha         ;use stack to load status
1b03 : a9cc            >            lda #$cc     ;precharge accu
1b05 : 28              >            plp
                       >
1b06 : df5206          >        bbs 5,zpt,fail40504
1b09 : 5f5206          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
1b0c : 202540          >        jsr report_error
                       >
1b0f :                 >fail40504 
                       >        trap            ;bbs branch taken
1b0f : 202540          >        jsr report_error
                       >
1b12 :                 >ok40504   
                       >        tst_a $cc,$ff
1b12 : 08              >            php         ;save flags
1b13 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1b15 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
1b17 : 202540          >        jsr report_error
                       >
1b1a :                 >skip0542
                       >
1b1a : 68              >            pla         ;load status
1b1b : 48              >            pha
                       >            cmp_flag $ff
1b1c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b1e : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
1b20 : 202540          >        jsr report_error
                       >
1b23 :                 >skip0545
                       >
1b23 : 28              >            plp         ;restore status
                       >
1b24 : a552            >        lda zpt
1b26 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
1b28 : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
1b2a : 202540          >        jsr report_error
                       >
1b2d :                 >skip0547
                       >
                        
                                bbt 6
1b2d : a940            >        lda #(1<<6)    ;testing 1 bit on
1b2f : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1b31 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1b33 : 48              >            pha         ;use stack to load status
1b34 : a933            >            lda #$33     ;precharge accu
1b36 : 28              >            plp
                       >
1b37 : 6f5206          >        bbr 6,zpt,fail10549
1b3a : ef5206          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
1b3d : 202540          >        jsr report_error
                       >
1b40 :                 >fail10549
                       >        trap            ;bbr branch taken
1b40 : 202540          >        jsr report_error
                       >
1b43 :                 >ok10549   
                       >        tst_a $33,0
1b43 : 08              >            php         ;save flags
1b44 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1b46 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
1b48 : 202540          >        jsr report_error
                       >
1b4b :                 >skip0555
                       >
1b4b : 68              >            pla         ;load status
1b4c : 48              >            pha
                       >            cmp_flag 0
1b4d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b4f : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
1b51 : 202540          >        jsr report_error
                       >
1b54 :                 >skip0558
                       >
1b54 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1b55 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1b57 : 48              >            pha         ;use stack to load status
1b58 : a9cc            >            lda #$cc     ;precharge accu
1b5a : 28              >            plp
                       >
1b5b : 6f5206          >        bbr 6,zpt,fail20549
1b5e : ef5206          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
1b61 : 202540          >        jsr report_error
                       >
1b64 :                 >fail20549 
                       >        trap            ;bbr branch taken
1b64 : 202540          >        jsr report_error
                       >
1b67 :                 >ok20549   
                       >        tst_a $cc,$ff
1b67 : 08              >            php         ;save flags
1b68 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1b6a : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
1b6c : 202540          >        jsr report_error
                       >
1b6f :                 >skip0565
                       >
1b6f : 68              >            pla         ;load status
1b70 : 48              >            pha
                       >            cmp_flag $ff
1b71 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b73 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
1b75 : 202540          >        jsr report_error
                       >
1b78 :                 >skip0568
                       >
1b78 : 28              >            plp         ;restore status
                       >
1b79 : a552            >        lda zpt
1b7b : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
1b7d : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
1b7f : 202540          >        jsr report_error
                       >
1b82 :                 >skip0570
                       >
1b82 : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
1b84 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1b86 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1b88 : 48              >            pha         ;use stack to load status
1b89 : a933            >            lda #$33     ;precharge accu
1b8b : 28              >            plp
                       >
1b8c : ef5206          >        bbs 6,zpt,fail30549
1b8f : 6f5206          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
1b92 : 202540          >        jsr report_error
                       >
1b95 :                 >fail30549 
                       >        trap            ;bbs branch taken
1b95 : 202540          >        jsr report_error
                       >
1b98 :                 >ok30549   
                       >        tst_a $33,0
1b98 : 08              >            php         ;save flags
1b99 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1b9b : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
1b9d : 202540          >        jsr report_error
                       >
1ba0 :                 >skip0577
                       >
1ba0 : 68              >            pla         ;load status
1ba1 : 48              >            pha
                       >            cmp_flag 0
1ba2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ba4 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
1ba6 : 202540          >        jsr report_error
                       >
1ba9 :                 >skip0580
                       >
1ba9 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1baa : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1bac : 48              >            pha         ;use stack to load status
1bad : a9cc            >            lda #$cc     ;precharge accu
1baf : 28              >            plp
                       >
1bb0 : ef5206          >        bbs 6,zpt,fail40549
1bb3 : 6f5206          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
1bb6 : 202540          >        jsr report_error
                       >
1bb9 :                 >fail40549 
                       >        trap            ;bbs branch taken
1bb9 : 202540          >        jsr report_error
                       >
1bbc :                 >ok40549   
                       >        tst_a $cc,$ff
1bbc : 08              >            php         ;save flags
1bbd : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1bbf : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
1bc1 : 202540          >        jsr report_error
                       >
1bc4 :                 >skip0587
                       >
1bc4 : 68              >            pla         ;load status
1bc5 : 48              >            pha
                       >            cmp_flag $ff
1bc6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bc8 : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
1bca : 202540          >        jsr report_error
                       >
1bcd :                 >skip0590
                       >
1bcd : 28              >            plp         ;restore status
                       >
1bce : a552            >        lda zpt
1bd0 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
1bd2 : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
1bd4 : 202540          >        jsr report_error
                       >
1bd7 :                 >skip0592
                       >
                        
                                bbt 7
1bd7 : a980            >        lda #(1<<7)    ;testing 1 bit on
1bd9 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1bdb : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1bdd : 48              >            pha         ;use stack to load status
1bde : a933            >            lda #$33     ;precharge accu
1be0 : 28              >            plp
                       >
1be1 : 7f5206          >        bbr 7,zpt,fail10594
1be4 : ff5206          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
1be7 : 202540          >        jsr report_error
                       >
1bea :                 >fail10594
                       >        trap            ;bbr branch taken
1bea : 202540          >        jsr report_error
                       >
1bed :                 >ok10594   
                       >        tst_a $33,0
1bed : 08              >            php         ;save flags
1bee : c933            >            cmp #$33     ;test result
                       >            trap_ne
1bf0 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
1bf2 : 202540          >        jsr report_error
                       >
1bf5 :                 >skip0600
                       >
1bf5 : 68              >            pla         ;load status
1bf6 : 48              >            pha
                       >            cmp_flag 0
1bf7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bf9 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
1bfb : 202540          >        jsr report_error
                       >
1bfe :                 >skip0603
                       >
1bfe : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1bff : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1c01 : 48              >            pha         ;use stack to load status
1c02 : a9cc            >            lda #$cc     ;precharge accu
1c04 : 28              >            plp
                       >
1c05 : 7f5206          >        bbr 7,zpt,fail20594
1c08 : ff5206          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
1c0b : 202540          >        jsr report_error
                       >
1c0e :                 >fail20594 
                       >        trap            ;bbr branch taken
1c0e : 202540          >        jsr report_error
                       >
1c11 :                 >ok20594   
                       >        tst_a $cc,$ff
1c11 : 08              >            php         ;save flags
1c12 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1c14 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
1c16 : 202540          >        jsr report_error
                       >
1c19 :                 >skip0610
                       >
1c19 : 68              >            pla         ;load status
1c1a : 48              >            pha
                       >            cmp_flag $ff
1c1b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c1d : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
1c1f : 202540          >        jsr report_error
                       >
1c22 :                 >skip0613
                       >
1c22 : 28              >            plp         ;restore status
                       >
1c23 : a552            >        lda zpt
1c25 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
1c27 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
1c29 : 202540          >        jsr report_error
                       >
1c2c :                 >skip0615
                       >
1c2c : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
1c2e : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1c30 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1c32 : 48              >            pha         ;use stack to load status
1c33 : a933            >            lda #$33     ;precharge accu
1c35 : 28              >            plp
                       >
1c36 : ff5206          >        bbs 7,zpt,fail30594
1c39 : 7f5206          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
1c3c : 202540          >        jsr report_error
                       >
1c3f :                 >fail30594 
                       >        trap            ;bbs branch taken
1c3f : 202540          >        jsr report_error
                       >
1c42 :                 >ok30594   
                       >        tst_a $33,0
1c42 : 08              >            php         ;save flags
1c43 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1c45 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
1c47 : 202540          >        jsr report_error
                       >
1c4a :                 >skip0622
                       >
1c4a : 68              >            pla         ;load status
1c4b : 48              >            pha
                       >            cmp_flag 0
1c4c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c4e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
1c50 : 202540          >        jsr report_error
                       >
1c53 :                 >skip0625
                       >
1c53 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1c54 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1c56 : 48              >            pha         ;use stack to load status
1c57 : a9cc            >            lda #$cc     ;precharge accu
1c59 : 28              >            plp
                       >
1c5a : ff5206          >        bbs 7,zpt,fail40594
1c5d : 7f5206          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
1c60 : 202540          >        jsr report_error
                       >
1c63 :                 >fail40594 
                       >        trap            ;bbs branch taken
1c63 : 202540          >        jsr report_error
                       >
1c66 :                 >ok40594   
                       >        tst_a $cc,$ff
1c66 : 08              >            php         ;save flags
1c67 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1c69 : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
1c6b : 202540          >        jsr report_error
                       >
1c6e :                 >skip0632
                       >
1c6e : 68              >            pla         ;load status
1c6f : 48              >            pha
                       >            cmp_flag $ff
1c70 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c72 : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
1c74 : 202540          >        jsr report_error
                       >
1c77 :                 >skip0635
                       >
1c77 : 28              >            plp         ;restore status
                       >
1c78 : a552            >        lda zpt
1c7a : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
1c7c : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
1c7e : 202540          >        jsr report_error
                       >
1c81 :                 >skip0637
                       >
                        
1c81 : e011                     cpx #$11
                                trap_ne         ;x overwritten
1c83 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
1c85 : 202540          >        jsr report_error
                       >
1c88 :                 >skip0639
                        
1c88 : c022                     cpy #$22
                                trap_ne         ;y overwritten
1c8a : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
1c8c : 202540          >        jsr report_error
                       >
1c8f :                 >skip0641
                        
                                next_test 
1c8f : ad0211          >            lda test_case   ;previous test
1c92 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1c94 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
1c96 : 202540          >        jsr report_error
                       >
1c99 :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
1c99 : a907            >            lda #test_num   ;*** next tests' number
1c9b : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
1c9e : a900                     lda #0          ;combined bit test
1ca0 : 8552                     sta zpt
1ca2 : a900             bbcl    lda #0
                                bbrc 0
1ca4 : 0f5202          >        bbr 0,zpt,skip0646
1ca7 : 4901            >        eor #(1<<0)       
1ca9 :                 >skip0646
                        
                                bbrc 1
1ca9 : 1f5202          >        bbr 1,zpt,skip0647
1cac : 4902            >        eor #(1<<1)       
1cae :                 >skip0647
                        
                                bbrc 2
1cae : 2f5202          >        bbr 2,zpt,skip0648
1cb1 : 4904            >        eor #(1<<2)       
1cb3 :                 >skip0648
                        
                                bbrc 3
1cb3 : 3f5202          >        bbr 3,zpt,skip0649
1cb6 : 4908            >        eor #(1<<3)       
1cb8 :                 >skip0649
                        
                                bbrc 4
1cb8 : 4f5202          >        bbr 4,zpt,skip0650
1cbb : 4910            >        eor #(1<<4)       
1cbd :                 >skip0650
                        
                                bbrc 5
1cbd : 5f5202          >        bbr 5,zpt,skip0651
1cc0 : 4920            >        eor #(1<<5)       
1cc2 :                 >skip0651
                        
                                bbrc 6
1cc2 : 6f5202          >        bbr 6,zpt,skip0652
1cc5 : 4940            >        eor #(1<<6)       
1cc7 :                 >skip0652
                        
                                bbrc 7
1cc7 : 7f5202          >        bbr 7,zpt,skip0653
1cca : 4980            >        eor #(1<<7)       
1ccc :                 >skip0653
                        
1ccc : 4552                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
1cce : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
1cd0 : 202540          >        jsr report_error
                       >
1cd3 :                 >skip0654
                        
1cd3 : a9ff                     lda #$ff
                                bbsc 0
1cd5 : 8f5202          >        bbs 0,zpt,skip0656
1cd8 : 4901            >        eor #(1<<0)       
1cda :                 >skip0656
                        
                                bbsc 1
1cda : 9f5202          >        bbs 1,zpt,skip0657
1cdd : 4902            >        eor #(1<<1)       
1cdf :                 >skip0657
                        
                                bbsc 2
1cdf : af5202          >        bbs 2,zpt,skip0658
1ce2 : 4904            >        eor #(1<<2)       
1ce4 :                 >skip0658
                        
                                bbsc 3
1ce4 : bf5202          >        bbs 3,zpt,skip0659
1ce7 : 4908            >        eor #(1<<3)       
1ce9 :                 >skip0659
                        
                                bbsc 4
1ce9 : cf5202          >        bbs 4,zpt,skip0660
1cec : 4910            >        eor #(1<<4)       
1cee :                 >skip0660
                        
                                bbsc 5
1cee : df5202          >        bbs 5,zpt,skip0661
1cf1 : 4920            >        eor #(1<<5)       
1cf3 :                 >skip0661
                        
                                bbsc 6
1cf3 : ef5202          >        bbs 6,zpt,skip0662
1cf6 : 4940            >        eor #(1<<6)       
1cf8 :                 >skip0662
                        
                                bbsc 7
1cf8 : ff5202          >        bbs 7,zpt,skip0663
1cfb : 4980            >        eor #(1<<7)       
1cfd :                 >skip0663
                        
1cfd : 4552                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
1cff : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
1d01 : 202540          >        jsr report_error
                       >
1d04 :                 >skip0664
                        
1d04 : e652                     inc zpt
1d06 : d09a                     bne bbcl
                                next_test            
1d08 : ad0211          >            lda test_case   ;previous test
1d0b : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1d0d : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
1d0f : 202540          >        jsr report_error
                       >
1d12 :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
1d12 : a908            >            lda #test_num   ;*** next tests' number
1d14 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                        
                            if skip_nop = 0
                                nop_test $02,2
1d17 : a042            >            ldy #$42
1d19 : a202            >            ldx #4-2
1d1b : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1d1c : c8              >            iny
1d1d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1d1e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d1f : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
1d21 : 202540          >        jsr report_error
                       >
1d24 :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
1d24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d26 : 48              >            pha         ;use stack to load status
1d27 : a9fd            >            lda #$ff-$02     ;precharge accu
1d29 : 28              >            plp
                       >
1d2a : 02              >            db  $02          ;test nop integrity - flags off
1d2b : ea              >            nop
1d2c : ea              >            nop
                       >            tst_a $ff-$02,0
1d2d : 08              >            php         ;save flags
1d2e : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
1d30 : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
1d32 : 202540          >        jsr report_error
                       >
1d35 :                 >skip0675
                       >
1d35 : 68              >            pla         ;load status
1d36 : 48              >            pha
                       >            cmp_flag 0
1d37 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d39 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
1d3b : 202540          >        jsr report_error
                       >
1d3e :                 >skip0678
                       >
1d3e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
1d3f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d41 : 48              >            pha         ;use stack to load status
1d42 : a9a8            >            lda #$aa-$02     ;precharge accu
1d44 : 28              >            plp
                       >
1d45 : 02              >            db  $02          ;test nop integrity - flags on
1d46 : ea              >            nop
1d47 : ea              >            nop
                       >            tst_a $aa-$02,$ff
1d48 : 08              >            php         ;save flags
1d49 : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
1d4b : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
1d4d : 202540          >        jsr report_error
                       >
1d50 :                 >skip0683
                       >
1d50 : 68              >            pla         ;load status
1d51 : 48              >            pha
                       >            cmp_flag $ff
1d52 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d54 : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
1d56 : 202540          >        jsr report_error
                       >
1d59 :                 >skip0686
                       >
1d59 : 28              >            plp         ;restore status
                       >
1d5a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d5c : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
1d5e : 202540          >        jsr report_error
                       >
1d61 :                 >skip0688
                       >
1d61 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d63 : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
1d65 : 202540          >        jsr report_error
                       >
1d68 :                 >skip0690
                       >
                        
                                nop_test $22,2
1d68 : a042            >            ldy #$42
1d6a : a202            >            ldx #4-2
1d6c : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1d6d : c8              >            iny
1d6e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1d6f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d70 : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
1d72 : 202540          >        jsr report_error
                       >
1d75 :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
1d75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d77 : 48              >            pha         ;use stack to load status
1d78 : a9dd            >            lda #$ff-$22     ;precharge accu
1d7a : 28              >            plp
                       >
1d7b : 22              >            db  $22          ;test nop integrity - flags off
1d7c : ea              >            nop
1d7d : ea              >            nop
                       >            tst_a $ff-$22,0
1d7e : 08              >            php         ;save flags
1d7f : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
1d81 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
1d83 : 202540          >        jsr report_error
                       >
1d86 :                 >skip0698
                       >
1d86 : 68              >            pla         ;load status
1d87 : 48              >            pha
                       >            cmp_flag 0
1d88 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d8a : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
1d8c : 202540          >        jsr report_error
                       >
1d8f :                 >skip0701
                       >
1d8f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
1d90 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d92 : 48              >            pha         ;use stack to load status
1d93 : a988            >            lda #$aa-$22     ;precharge accu
1d95 : 28              >            plp
                       >
1d96 : 22              >            db  $22          ;test nop integrity - flags on
1d97 : ea              >            nop
1d98 : ea              >            nop
                       >            tst_a $aa-$22,$ff
1d99 : 08              >            php         ;save flags
1d9a : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
1d9c : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
1d9e : 202540          >        jsr report_error
                       >
1da1 :                 >skip0706
                       >
1da1 : 68              >            pla         ;load status
1da2 : 48              >            pha
                       >            cmp_flag $ff
1da3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1da5 : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
1da7 : 202540          >        jsr report_error
                       >
1daa :                 >skip0709
                       >
1daa : 28              >            plp         ;restore status
                       >
1dab : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1dad : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
1daf : 202540          >        jsr report_error
                       >
1db2 :                 >skip0711
                       >
1db2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1db4 : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
1db6 : 202540          >        jsr report_error
                       >
1db9 :                 >skip0713
                       >
                        
                                nop_test $42,2
1db9 : a042            >            ldy #$42
1dbb : a202            >            ldx #4-2
1dbd : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1dbe : c8              >            iny
1dbf : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1dc0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1dc1 : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
1dc3 : 202540          >        jsr report_error
                       >
1dc6 :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
1dc6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1dc8 : 48              >            pha         ;use stack to load status
1dc9 : a9bd            >            lda #$ff-$42     ;precharge accu
1dcb : 28              >            plp
                       >
1dcc : 42              >            db  $42          ;test nop integrity - flags off
1dcd : ea              >            nop
1dce : ea              >            nop
                       >            tst_a $ff-$42,0
1dcf : 08              >            php         ;save flags
1dd0 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
1dd2 : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
1dd4 : 202540          >        jsr report_error
                       >
1dd7 :                 >skip0721
                       >
1dd7 : 68              >            pla         ;load status
1dd8 : 48              >            pha
                       >            cmp_flag 0
1dd9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ddb : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
1ddd : 202540          >        jsr report_error
                       >
1de0 :                 >skip0724
                       >
1de0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
1de1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1de3 : 48              >            pha         ;use stack to load status
1de4 : a968            >            lda #$aa-$42     ;precharge accu
1de6 : 28              >            plp
                       >
1de7 : 42              >            db  $42          ;test nop integrity - flags on
1de8 : ea              >            nop
1de9 : ea              >            nop
                       >            tst_a $aa-$42,$ff
1dea : 08              >            php         ;save flags
1deb : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
1ded : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
1def : 202540          >        jsr report_error
                       >
1df2 :                 >skip0729
                       >
1df2 : 68              >            pla         ;load status
1df3 : 48              >            pha
                       >            cmp_flag $ff
1df4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1df6 : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
1df8 : 202540          >        jsr report_error
                       >
1dfb :                 >skip0732
                       >
1dfb : 28              >            plp         ;restore status
                       >
1dfc : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1dfe : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
1e00 : 202540          >        jsr report_error
                       >
1e03 :                 >skip0734
                       >
1e03 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e05 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
1e07 : 202540          >        jsr report_error
                       >
1e0a :                 >skip0736
                       >
                        
                                nop_test $62,2
1e0a : a042            >            ldy #$42
1e0c : a202            >            ldx #4-2
1e0e : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1e0f : c8              >            iny
1e10 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1e11 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e12 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
1e14 : 202540          >        jsr report_error
                       >
1e17 :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
1e17 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e19 : 48              >            pha         ;use stack to load status
1e1a : a99d            >            lda #$ff-$62     ;precharge accu
1e1c : 28              >            plp
                       >
1e1d : 62              >            db  $62          ;test nop integrity - flags off
1e1e : ea              >            nop
1e1f : ea              >            nop
                       >            tst_a $ff-$62,0
1e20 : 08              >            php         ;save flags
1e21 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
1e23 : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
1e25 : 202540          >        jsr report_error
                       >
1e28 :                 >skip0744
                       >
1e28 : 68              >            pla         ;load status
1e29 : 48              >            pha
                       >            cmp_flag 0
1e2a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e2c : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
1e2e : 202540          >        jsr report_error
                       >
1e31 :                 >skip0747
                       >
1e31 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
1e32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e34 : 48              >            pha         ;use stack to load status
1e35 : a948            >            lda #$aa-$62     ;precharge accu
1e37 : 28              >            plp
                       >
1e38 : 62              >            db  $62          ;test nop integrity - flags on
1e39 : ea              >            nop
1e3a : ea              >            nop
                       >            tst_a $aa-$62,$ff
1e3b : 08              >            php         ;save flags
1e3c : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
1e3e : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
1e40 : 202540          >        jsr report_error
                       >
1e43 :                 >skip0752
                       >
1e43 : 68              >            pla         ;load status
1e44 : 48              >            pha
                       >            cmp_flag $ff
1e45 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e47 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
1e49 : 202540          >        jsr report_error
                       >
1e4c :                 >skip0755
                       >
1e4c : 28              >            plp         ;restore status
                       >
1e4d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e4f : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
1e51 : 202540          >        jsr report_error
                       >
1e54 :                 >skip0757
                       >
1e54 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e56 : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
1e58 : 202540          >        jsr report_error
                       >
1e5b :                 >skip0759
                       >
                        
                                nop_test $82,2
1e5b : a042            >            ldy #$42
1e5d : a202            >            ldx #4-2
1e5f : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1e60 : c8              >            iny
1e61 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1e62 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e63 : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
1e65 : 202540          >        jsr report_error
                       >
1e68 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
1e68 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e6a : 48              >            pha         ;use stack to load status
1e6b : a97d            >            lda #$ff-$82     ;precharge accu
1e6d : 28              >            plp
                       >
1e6e : 82              >            db  $82          ;test nop integrity - flags off
1e6f : ea              >            nop
1e70 : ea              >            nop
                       >            tst_a $ff-$82,0
1e71 : 08              >            php         ;save flags
1e72 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
1e74 : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
1e76 : 202540          >        jsr report_error
                       >
1e79 :                 >skip0767
                       >
1e79 : 68              >            pla         ;load status
1e7a : 48              >            pha
                       >            cmp_flag 0
1e7b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e7d : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
1e7f : 202540          >        jsr report_error
                       >
1e82 :                 >skip0770
                       >
1e82 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
1e83 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e85 : 48              >            pha         ;use stack to load status
1e86 : a928            >            lda #$aa-$82     ;precharge accu
1e88 : 28              >            plp
                       >
1e89 : 82              >            db  $82          ;test nop integrity - flags on
1e8a : ea              >            nop
1e8b : ea              >            nop
                       >            tst_a $aa-$82,$ff
1e8c : 08              >            php         ;save flags
1e8d : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
1e8f : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
1e91 : 202540          >        jsr report_error
                       >
1e94 :                 >skip0775
                       >
1e94 : 68              >            pla         ;load status
1e95 : 48              >            pha
                       >            cmp_flag $ff
1e96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e98 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
1e9a : 202540          >        jsr report_error
                       >
1e9d :                 >skip0778
                       >
1e9d : 28              >            plp         ;restore status
                       >
1e9e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ea0 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
1ea2 : 202540          >        jsr report_error
                       >
1ea5 :                 >skip0780
                       >
1ea5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ea7 : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
1ea9 : 202540          >        jsr report_error
                       >
1eac :                 >skip0782
                       >
                        
                                nop_test $c2,2
1eac : a042            >            ldy #$42
1eae : a202            >            ldx #4-2
1eb0 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1eb1 : c8              >            iny
1eb2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1eb3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1eb4 : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
1eb6 : 202540          >        jsr report_error
                       >
1eb9 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
1eb9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ebb : 48              >            pha         ;use stack to load status
1ebc : a93d            >            lda #$ff-$c2     ;precharge accu
1ebe : 28              >            plp
                       >
1ebf : c2              >            db  $c2          ;test nop integrity - flags off
1ec0 : ea              >            nop
1ec1 : ea              >            nop
                       >            tst_a $ff-$c2,0
1ec2 : 08              >            php         ;save flags
1ec3 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
1ec5 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
1ec7 : 202540          >        jsr report_error
                       >
1eca :                 >skip0790
                       >
1eca : 68              >            pla         ;load status
1ecb : 48              >            pha
                       >            cmp_flag 0
1ecc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ece : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
1ed0 : 202540          >        jsr report_error
                       >
1ed3 :                 >skip0793
                       >
1ed3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
1ed4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ed6 : 48              >            pha         ;use stack to load status
1ed7 : a9e8            >            lda #$aa-$c2     ;precharge accu
1ed9 : 28              >            plp
                       >
1eda : c2              >            db  $c2          ;test nop integrity - flags on
1edb : ea              >            nop
1edc : ea              >            nop
                       >            tst_a $aa-$c2,$ff
1edd : 08              >            php         ;save flags
1ede : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
1ee0 : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
1ee2 : 202540          >        jsr report_error
                       >
1ee5 :                 >skip0798
                       >
1ee5 : 68              >            pla         ;load status
1ee6 : 48              >            pha
                       >            cmp_flag $ff
1ee7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ee9 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
1eeb : 202540          >        jsr report_error
                       >
1eee :                 >skip0801
                       >
1eee : 28              >            plp         ;restore status
                       >
1eef : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ef1 : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
1ef3 : 202540          >        jsr report_error
                       >
1ef6 :                 >skip0803
                       >
1ef6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ef8 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
1efa : 202540          >        jsr report_error
                       >
1efd :                 >skip0805
                       >
                        
                                nop_test $e2,2
1efd : a042            >            ldy #$42
1eff : a202            >            ldx #4-2
1f01 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1f02 : c8              >            iny
1f03 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1f04 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f05 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
1f07 : 202540          >        jsr report_error
                       >
1f0a :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
1f0a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f0c : 48              >            pha         ;use stack to load status
1f0d : a91d            >            lda #$ff-$e2     ;precharge accu
1f0f : 28              >            plp
                       >
1f10 : e2              >            db  $e2          ;test nop integrity - flags off
1f11 : ea              >            nop
1f12 : ea              >            nop
                       >            tst_a $ff-$e2,0
1f13 : 08              >            php         ;save flags
1f14 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
1f16 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
1f18 : 202540          >        jsr report_error
                       >
1f1b :                 >skip0813
                       >
1f1b : 68              >            pla         ;load status
1f1c : 48              >            pha
                       >            cmp_flag 0
1f1d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f1f : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
1f21 : 202540          >        jsr report_error
                       >
1f24 :                 >skip0816
                       >
1f24 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
1f25 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f27 : 48              >            pha         ;use stack to load status
1f28 : a9c8            >            lda #$aa-$e2     ;precharge accu
1f2a : 28              >            plp
                       >
1f2b : e2              >            db  $e2          ;test nop integrity - flags on
1f2c : ea              >            nop
1f2d : ea              >            nop
                       >            tst_a $aa-$e2,$ff
1f2e : 08              >            php         ;save flags
1f2f : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
1f31 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
1f33 : 202540          >        jsr report_error
                       >
1f36 :                 >skip0821
                       >
1f36 : 68              >            pla         ;load status
1f37 : 48              >            pha
                       >            cmp_flag $ff
1f38 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f3a : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
1f3c : 202540          >        jsr report_error
                       >
1f3f :                 >skip0824
                       >
1f3f : 28              >            plp         ;restore status
                       >
1f40 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f42 : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
1f44 : 202540          >        jsr report_error
                       >
1f47 :                 >skip0826
                       >
1f47 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f49 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
1f4b : 202540          >        jsr report_error
                       >
1f4e :                 >skip0828
                       >
                        
                                nop_test $44,2
1f4e : a042            >            ldy #$42
1f50 : a202            >            ldx #4-2
1f52 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1f53 : c8              >            iny
1f54 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1f55 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f56 : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
1f58 : 202540          >        jsr report_error
                       >
1f5b :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
1f5b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f5d : 48              >            pha         ;use stack to load status
1f5e : a9bb            >            lda #$ff-$44     ;precharge accu
1f60 : 28              >            plp
                       >
1f61 : 44              >            db  $44          ;test nop integrity - flags off
1f62 : ea              >            nop
1f63 : ea              >            nop
                       >            tst_a $ff-$44,0
1f64 : 08              >            php         ;save flags
1f65 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
1f67 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
1f69 : 202540          >        jsr report_error
                       >
1f6c :                 >skip0836
                       >
1f6c : 68              >            pla         ;load status
1f6d : 48              >            pha
                       >            cmp_flag 0
1f6e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f70 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
1f72 : 202540          >        jsr report_error
                       >
1f75 :                 >skip0839
                       >
1f75 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
1f76 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f78 : 48              >            pha         ;use stack to load status
1f79 : a966            >            lda #$aa-$44     ;precharge accu
1f7b : 28              >            plp
                       >
1f7c : 44              >            db  $44          ;test nop integrity - flags on
1f7d : ea              >            nop
1f7e : ea              >            nop
                       >            tst_a $aa-$44,$ff
1f7f : 08              >            php         ;save flags
1f80 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
1f82 : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
1f84 : 202540          >        jsr report_error
                       >
1f87 :                 >skip0844
                       >
1f87 : 68              >            pla         ;load status
1f88 : 48              >            pha
                       >            cmp_flag $ff
1f89 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f8b : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
1f8d : 202540          >        jsr report_error
                       >
1f90 :                 >skip0847
                       >
1f90 : 28              >            plp         ;restore status
                       >
1f91 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f93 : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
1f95 : 202540          >        jsr report_error
                       >
1f98 :                 >skip0849
                       >
1f98 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f9a : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
1f9c : 202540          >        jsr report_error
                       >
1f9f :                 >skip0851
                       >
                        
                                nop_test $54,2
1f9f : a042            >            ldy #$42
1fa1 : a202            >            ldx #4-2
1fa3 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1fa4 : c8              >            iny
1fa5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1fa6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1fa7 : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
1fa9 : 202540          >        jsr report_error
                       >
1fac :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
1fac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fae : 48              >            pha         ;use stack to load status
1faf : a9ab            >            lda #$ff-$54     ;precharge accu
1fb1 : 28              >            plp
                       >
1fb2 : 54              >            db  $54          ;test nop integrity - flags off
1fb3 : ea              >            nop
1fb4 : ea              >            nop
                       >            tst_a $ff-$54,0
1fb5 : 08              >            php         ;save flags
1fb6 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
1fb8 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
1fba : 202540          >        jsr report_error
                       >
1fbd :                 >skip0859
                       >
1fbd : 68              >            pla         ;load status
1fbe : 48              >            pha
                       >            cmp_flag 0
1fbf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fc1 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
1fc3 : 202540          >        jsr report_error
                       >
1fc6 :                 >skip0862
                       >
1fc6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
1fc7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fc9 : 48              >            pha         ;use stack to load status
1fca : a956            >            lda #$aa-$54     ;precharge accu
1fcc : 28              >            plp
                       >
1fcd : 54              >            db  $54          ;test nop integrity - flags on
1fce : ea              >            nop
1fcf : ea              >            nop
                       >            tst_a $aa-$54,$ff
1fd0 : 08              >            php         ;save flags
1fd1 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
1fd3 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
1fd5 : 202540          >        jsr report_error
                       >
1fd8 :                 >skip0867
                       >
1fd8 : 68              >            pla         ;load status
1fd9 : 48              >            pha
                       >            cmp_flag $ff
1fda : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fdc : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
1fde : 202540          >        jsr report_error
                       >
1fe1 :                 >skip0870
                       >
1fe1 : 28              >            plp         ;restore status
                       >
1fe2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1fe4 : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
1fe6 : 202540          >        jsr report_error
                       >
1fe9 :                 >skip0872
                       >
1fe9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1feb : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
1fed : 202540          >        jsr report_error
                       >
1ff0 :                 >skip0874
                       >
                        
                                nop_test $d4,2
1ff0 : a042            >            ldy #$42
1ff2 : a202            >            ldx #4-2
1ff4 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1ff5 : c8              >            iny
1ff6 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1ff7 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ff8 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
1ffa : 202540          >        jsr report_error
                       >
1ffd :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
1ffd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fff : 48              >            pha         ;use stack to load status
2000 : a92b            >            lda #$ff-$d4     ;precharge accu
2002 : 28              >            plp
                       >
2003 : d4              >            db  $d4          ;test nop integrity - flags off
2004 : ea              >            nop
2005 : ea              >            nop
                       >            tst_a $ff-$d4,0
2006 : 08              >            php         ;save flags
2007 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
2009 : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
200b : 202540          >        jsr report_error
                       >
200e :                 >skip0882
                       >
200e : 68              >            pla         ;load status
200f : 48              >            pha
                       >            cmp_flag 0
2010 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2012 : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
2014 : 202540          >        jsr report_error
                       >
2017 :                 >skip0885
                       >
2017 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
2018 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
201a : 48              >            pha         ;use stack to load status
201b : a9d6            >            lda #$aa-$d4     ;precharge accu
201d : 28              >            plp
                       >
201e : d4              >            db  $d4          ;test nop integrity - flags on
201f : ea              >            nop
2020 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
2021 : 08              >            php         ;save flags
2022 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
2024 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
2026 : 202540          >        jsr report_error
                       >
2029 :                 >skip0890
                       >
2029 : 68              >            pla         ;load status
202a : 48              >            pha
                       >            cmp_flag $ff
202b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
202d : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
202f : 202540          >        jsr report_error
                       >
2032 :                 >skip0893
                       >
2032 : 28              >            plp         ;restore status
                       >
2033 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2035 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
2037 : 202540          >        jsr report_error
                       >
203a :                 >skip0895
                       >
203a : e000            >            cpx #0
                       >            trap_ne         ;x changed
203c : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
203e : 202540          >        jsr report_error
                       >
2041 :                 >skip0897
                       >
                        
                                nop_test $f4,2
2041 : a042            >            ldy #$42
2043 : a202            >            ldx #4-2
2045 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
2046 : c8              >            iny
2047 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
2048 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2049 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
204b : 202540          >        jsr report_error
                       >
204e :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
204e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2050 : 48              >            pha         ;use stack to load status
2051 : a90b            >            lda #$ff-$f4     ;precharge accu
2053 : 28              >            plp
                       >
2054 : f4              >            db  $f4          ;test nop integrity - flags off
2055 : ea              >            nop
2056 : ea              >            nop
                       >            tst_a $ff-$f4,0
2057 : 08              >            php         ;save flags
2058 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
205a : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
205c : 202540          >        jsr report_error
                       >
205f :                 >skip0905
                       >
205f : 68              >            pla         ;load status
2060 : 48              >            pha
                       >            cmp_flag 0
2061 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2063 : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
2065 : 202540          >        jsr report_error
                       >
2068 :                 >skip0908
                       >
2068 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
2069 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
206b : 48              >            pha         ;use stack to load status
206c : a9b6            >            lda #$aa-$f4     ;precharge accu
206e : 28              >            plp
                       >
206f : f4              >            db  $f4          ;test nop integrity - flags on
2070 : ea              >            nop
2071 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
2072 : 08              >            php         ;save flags
2073 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
2075 : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
2077 : 202540          >        jsr report_error
                       >
207a :                 >skip0913
                       >
207a : 68              >            pla         ;load status
207b : 48              >            pha
                       >            cmp_flag $ff
207c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
207e : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
2080 : 202540          >        jsr report_error
                       >
2083 :                 >skip0916
                       >
2083 : 28              >            plp         ;restore status
                       >
2084 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2086 : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
2088 : 202540          >        jsr report_error
                       >
208b :                 >skip0918
                       >
208b : e000            >            cpx #0
                       >            trap_ne         ;x changed
208d : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
208f : 202540          >        jsr report_error
                       >
2092 :                 >skip0920
                       >
                        
                                nop_test $5c,3
2092 : a042            >            ldy #$42
2094 : a201            >            ldx #4-3
2096 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
2097 : c8              >            iny
2098 : c8              >            iny
                       >        endif
2099 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
209a : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
209c : 202540          >        jsr report_error
                       >
209f :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
209f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20a1 : 48              >            pha         ;use stack to load status
20a2 : a9a3            >            lda #$ff-$5c     ;precharge accu
20a4 : 28              >            plp
                       >
20a5 : 5c              >            db  $5c          ;test nop integrity - flags off
20a6 : ea              >            nop
20a7 : ea              >            nop
                       >            tst_a $ff-$5c,0
20a8 : 08              >            php         ;save flags
20a9 : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
20ab : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
20ad : 202540          >        jsr report_error
                       >
20b0 :                 >skip0928
                       >
20b0 : 68              >            pla         ;load status
20b1 : 48              >            pha
                       >            cmp_flag 0
20b2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20b4 : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
20b6 : 202540          >        jsr report_error
                       >
20b9 :                 >skip0931
                       >
20b9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
20ba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20bc : 48              >            pha         ;use stack to load status
20bd : a94e            >            lda #$aa-$5c     ;precharge accu
20bf : 28              >            plp
                       >
20c0 : 5c              >            db  $5c          ;test nop integrity - flags on
20c1 : ea              >            nop
20c2 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
20c3 : 08              >            php         ;save flags
20c4 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
20c6 : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
20c8 : 202540          >        jsr report_error
                       >
20cb :                 >skip0936
                       >
20cb : 68              >            pla         ;load status
20cc : 48              >            pha
                       >            cmp_flag $ff
20cd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20cf : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
20d1 : 202540          >        jsr report_error
                       >
20d4 :                 >skip0939
                       >
20d4 : 28              >            plp         ;restore status
                       >
20d5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
20d7 : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
20d9 : 202540          >        jsr report_error
                       >
20dc :                 >skip0941
                       >
20dc : e000            >            cpx #0
                       >            trap_ne         ;x changed
20de : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
20e0 : 202540          >        jsr report_error
                       >
20e3 :                 >skip0943
                       >
                        
                                nop_test $dc,3
20e3 : a042            >            ldy #$42
20e5 : a201            >            ldx #4-3
20e7 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
20e8 : c8              >            iny
20e9 : c8              >            iny
                       >        endif
20ea : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
20eb : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
20ed : 202540          >        jsr report_error
                       >
20f0 :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
20f0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20f2 : 48              >            pha         ;use stack to load status
20f3 : a923            >            lda #$ff-$dc     ;precharge accu
20f5 : 28              >            plp
                       >
20f6 : dc              >            db  $dc          ;test nop integrity - flags off
20f7 : ea              >            nop
20f8 : ea              >            nop
                       >            tst_a $ff-$dc,0
20f9 : 08              >            php         ;save flags
20fa : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
20fc : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
20fe : 202540          >        jsr report_error
                       >
2101 :                 >skip0951
                       >
2101 : 68              >            pla         ;load status
2102 : 48              >            pha
                       >            cmp_flag 0
2103 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2105 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
2107 : 202540          >        jsr report_error
                       >
210a :                 >skip0954
                       >
210a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
210b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
210d : 48              >            pha         ;use stack to load status
210e : a9ce            >            lda #$aa-$dc     ;precharge accu
2110 : 28              >            plp
                       >
2111 : dc              >            db  $dc          ;test nop integrity - flags on
2112 : ea              >            nop
2113 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
2114 : 08              >            php         ;save flags
2115 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
2117 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
2119 : 202540          >        jsr report_error
                       >
211c :                 >skip0959
                       >
211c : 68              >            pla         ;load status
211d : 48              >            pha
                       >            cmp_flag $ff
211e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2120 : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
2122 : 202540          >        jsr report_error
                       >
2125 :                 >skip0962
                       >
2125 : 28              >            plp         ;restore status
                       >
2126 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2128 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
212a : 202540          >        jsr report_error
                       >
212d :                 >skip0964
                       >
212d : e000            >            cpx #0
                       >            trap_ne         ;x changed
212f : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
2131 : 202540          >        jsr report_error
                       >
2134 :                 >skip0966
                       >
                        
                                nop_test $fc,3
2134 : a042            >            ldy #$42
2136 : a201            >            ldx #4-3
2138 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
2139 : c8              >            iny
213a : c8              >            iny
                       >        endif
213b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
213c : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
213e : 202540          >        jsr report_error
                       >
2141 :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
2141 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2143 : 48              >            pha         ;use stack to load status
2144 : a903            >            lda #$ff-$fc     ;precharge accu
2146 : 28              >            plp
                       >
2147 : fc              >            db  $fc          ;test nop integrity - flags off
2148 : ea              >            nop
2149 : ea              >            nop
                       >            tst_a $ff-$fc,0
214a : 08              >            php         ;save flags
214b : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
214d : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
214f : 202540          >        jsr report_error
                       >
2152 :                 >skip0974
                       >
2152 : 68              >            pla         ;load status
2153 : 48              >            pha
                       >            cmp_flag 0
2154 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2156 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
2158 : 202540          >        jsr report_error
                       >
215b :                 >skip0977
                       >
215b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
215c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
215e : 48              >            pha         ;use stack to load status
215f : a9ae            >            lda #$aa-$fc     ;precharge accu
2161 : 28              >            plp
                       >
2162 : fc              >            db  $fc          ;test nop integrity - flags on
2163 : ea              >            nop
2164 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
2165 : 08              >            php         ;save flags
2166 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
2168 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
216a : 202540          >        jsr report_error
                       >
216d :                 >skip0982
                       >
216d : 68              >            pla         ;load status
216e : 48              >            pha
                       >            cmp_flag $ff
216f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2171 : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
2173 : 202540          >        jsr report_error
                       >
2176 :                 >skip0985
                       >
2176 : 28              >            plp         ;restore status
                       >
2177 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2179 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
217b : 202540          >        jsr report_error
                       >
217e :                 >skip0987
                       >
217e : e000            >            cpx #0
                       >            trap_ne         ;x changed
2180 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
2182 : 202540          >        jsr report_error
                       >
2185 :                 >skip0989
                       >
                        
                                nop_test $03,1
2185 : a042            >            ldy #$42
2187 : a203            >            ldx #4-1
2189 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
218a : ca              >            dex
218b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
218c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
218d : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
218f : 202540          >        jsr report_error
                       >
2192 :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
2192 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2194 : 48              >            pha         ;use stack to load status
2195 : a9fc            >            lda #$ff-$03     ;precharge accu
2197 : 28              >            plp
                       >
2198 : 03              >            db  $03          ;test nop integrity - flags off
2199 : ea              >            nop
219a : ea              >            nop
                       >            tst_a $ff-$03,0
219b : 08              >            php         ;save flags
219c : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
219e : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
21a0 : 202540          >        jsr report_error
                       >
21a3 :                 >skip0997
                       >
21a3 : 68              >            pla         ;load status
21a4 : 48              >            pha
                       >            cmp_flag 0
21a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21a7 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
21a9 : 202540          >        jsr report_error
                       >
21ac :                 >skip1000
                       >
21ac : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
21ad : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21af : 48              >            pha         ;use stack to load status
21b0 : a9a7            >            lda #$aa-$03     ;precharge accu
21b2 : 28              >            plp
                       >
21b3 : 03              >            db  $03          ;test nop integrity - flags on
21b4 : ea              >            nop
21b5 : ea              >            nop
                       >            tst_a $aa-$03,$ff
21b6 : 08              >            php         ;save flags
21b7 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
21b9 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
21bb : 202540          >        jsr report_error
                       >
21be :                 >skip1005
                       >
21be : 68              >            pla         ;load status
21bf : 48              >            pha
                       >            cmp_flag $ff
21c0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21c2 : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
21c4 : 202540          >        jsr report_error
                       >
21c7 :                 >skip1008
                       >
21c7 : 28              >            plp         ;restore status
                       >
21c8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
21ca : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
21cc : 202540          >        jsr report_error
                       >
21cf :                 >skip1010
                       >
21cf : e000            >            cpx #0
                       >            trap_ne         ;x changed
21d1 : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
21d3 : 202540          >        jsr report_error
                       >
21d6 :                 >skip1012
                       >
                        
                                nop_test $13,1
21d6 : a042            >            ldy #$42
21d8 : a203            >            ldx #4-1
21da : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
21db : ca              >            dex
21dc : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
21dd : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21de : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
21e0 : 202540          >        jsr report_error
                       >
21e3 :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
21e3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21e5 : 48              >            pha         ;use stack to load status
21e6 : a9ec            >            lda #$ff-$13     ;precharge accu
21e8 : 28              >            plp
                       >
21e9 : 13              >            db  $13          ;test nop integrity - flags off
21ea : ea              >            nop
21eb : ea              >            nop
                       >            tst_a $ff-$13,0
21ec : 08              >            php         ;save flags
21ed : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
21ef : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
21f1 : 202540          >        jsr report_error
                       >
21f4 :                 >skip1020
                       >
21f4 : 68              >            pla         ;load status
21f5 : 48              >            pha
                       >            cmp_flag 0
21f6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21f8 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
21fa : 202540          >        jsr report_error
                       >
21fd :                 >skip1023
                       >
21fd : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
21fe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2200 : 48              >            pha         ;use stack to load status
2201 : a997            >            lda #$aa-$13     ;precharge accu
2203 : 28              >            plp
                       >
2204 : 13              >            db  $13          ;test nop integrity - flags on
2205 : ea              >            nop
2206 : ea              >            nop
                       >            tst_a $aa-$13,$ff
2207 : 08              >            php         ;save flags
2208 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
220a : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
220c : 202540          >        jsr report_error
                       >
220f :                 >skip1028
                       >
220f : 68              >            pla         ;load status
2210 : 48              >            pha
                       >            cmp_flag $ff
2211 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2213 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
2215 : 202540          >        jsr report_error
                       >
2218 :                 >skip1031
                       >
2218 : 28              >            plp         ;restore status
                       >
2219 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
221b : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
221d : 202540          >        jsr report_error
                       >
2220 :                 >skip1033
                       >
2220 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2222 : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
2224 : 202540          >        jsr report_error
                       >
2227 :                 >skip1035
                       >
                        
                                nop_test $23,1
2227 : a042            >            ldy #$42
2229 : a203            >            ldx #4-1
222b : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
222c : ca              >            dex
222d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
222e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
222f : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
2231 : 202540          >        jsr report_error
                       >
2234 :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
2234 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2236 : 48              >            pha         ;use stack to load status
2237 : a9dc            >            lda #$ff-$23     ;precharge accu
2239 : 28              >            plp
                       >
223a : 23              >            db  $23          ;test nop integrity - flags off
223b : ea              >            nop
223c : ea              >            nop
                       >            tst_a $ff-$23,0
223d : 08              >            php         ;save flags
223e : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
2240 : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
2242 : 202540          >        jsr report_error
                       >
2245 :                 >skip1043
                       >
2245 : 68              >            pla         ;load status
2246 : 48              >            pha
                       >            cmp_flag 0
2247 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2249 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
224b : 202540          >        jsr report_error
                       >
224e :                 >skip1046
                       >
224e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
224f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2251 : 48              >            pha         ;use stack to load status
2252 : a987            >            lda #$aa-$23     ;precharge accu
2254 : 28              >            plp
                       >
2255 : 23              >            db  $23          ;test nop integrity - flags on
2256 : ea              >            nop
2257 : ea              >            nop
                       >            tst_a $aa-$23,$ff
2258 : 08              >            php         ;save flags
2259 : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
225b : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
225d : 202540          >        jsr report_error
                       >
2260 :                 >skip1051
                       >
2260 : 68              >            pla         ;load status
2261 : 48              >            pha
                       >            cmp_flag $ff
2262 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2264 : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
2266 : 202540          >        jsr report_error
                       >
2269 :                 >skip1054
                       >
2269 : 28              >            plp         ;restore status
                       >
226a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
226c : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
226e : 202540          >        jsr report_error
                       >
2271 :                 >skip1056
                       >
2271 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2273 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
2275 : 202540          >        jsr report_error
                       >
2278 :                 >skip1058
                       >
                        
                                nop_test $33,1
2278 : a042            >            ldy #$42
227a : a203            >            ldx #4-1
227c : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
227d : ca              >            dex
227e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
227f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2280 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
2282 : 202540          >        jsr report_error
                       >
2285 :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
2285 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2287 : 48              >            pha         ;use stack to load status
2288 : a9cc            >            lda #$ff-$33     ;precharge accu
228a : 28              >            plp
                       >
228b : 33              >            db  $33          ;test nop integrity - flags off
228c : ea              >            nop
228d : ea              >            nop
                       >            tst_a $ff-$33,0
228e : 08              >            php         ;save flags
228f : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
2291 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
2293 : 202540          >        jsr report_error
                       >
2296 :                 >skip1066
                       >
2296 : 68              >            pla         ;load status
2297 : 48              >            pha
                       >            cmp_flag 0
2298 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
229a : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
229c : 202540          >        jsr report_error
                       >
229f :                 >skip1069
                       >
229f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
22a0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22a2 : 48              >            pha         ;use stack to load status
22a3 : a977            >            lda #$aa-$33     ;precharge accu
22a5 : 28              >            plp
                       >
22a6 : 33              >            db  $33          ;test nop integrity - flags on
22a7 : ea              >            nop
22a8 : ea              >            nop
                       >            tst_a $aa-$33,$ff
22a9 : 08              >            php         ;save flags
22aa : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
22ac : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
22ae : 202540          >        jsr report_error
                       >
22b1 :                 >skip1074
                       >
22b1 : 68              >            pla         ;load status
22b2 : 48              >            pha
                       >            cmp_flag $ff
22b3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22b5 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
22b7 : 202540          >        jsr report_error
                       >
22ba :                 >skip1077
                       >
22ba : 28              >            plp         ;restore status
                       >
22bb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22bd : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
22bf : 202540          >        jsr report_error
                       >
22c2 :                 >skip1079
                       >
22c2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
22c4 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
22c6 : 202540          >        jsr report_error
                       >
22c9 :                 >skip1081
                       >
                        
                                nop_test $43,1
22c9 : a042            >            ldy #$42
22cb : a203            >            ldx #4-1
22cd : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
22ce : ca              >            dex
22cf : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
22d0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
22d1 : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
22d3 : 202540          >        jsr report_error
                       >
22d6 :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
22d6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22d8 : 48              >            pha         ;use stack to load status
22d9 : a9bc            >            lda #$ff-$43     ;precharge accu
22db : 28              >            plp
                       >
22dc : 43              >            db  $43          ;test nop integrity - flags off
22dd : ea              >            nop
22de : ea              >            nop
                       >            tst_a $ff-$43,0
22df : 08              >            php         ;save flags
22e0 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
22e2 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
22e4 : 202540          >        jsr report_error
                       >
22e7 :                 >skip1089
                       >
22e7 : 68              >            pla         ;load status
22e8 : 48              >            pha
                       >            cmp_flag 0
22e9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22eb : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
22ed : 202540          >        jsr report_error
                       >
22f0 :                 >skip1092
                       >
22f0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
22f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22f3 : 48              >            pha         ;use stack to load status
22f4 : a967            >            lda #$aa-$43     ;precharge accu
22f6 : 28              >            plp
                       >
22f7 : 43              >            db  $43          ;test nop integrity - flags on
22f8 : ea              >            nop
22f9 : ea              >            nop
                       >            tst_a $aa-$43,$ff
22fa : 08              >            php         ;save flags
22fb : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
22fd : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
22ff : 202540          >        jsr report_error
                       >
2302 :                 >skip1097
                       >
2302 : 68              >            pla         ;load status
2303 : 48              >            pha
                       >            cmp_flag $ff
2304 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2306 : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
2308 : 202540          >        jsr report_error
                       >
230b :                 >skip1100
                       >
230b : 28              >            plp         ;restore status
                       >
230c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
230e : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
2310 : 202540          >        jsr report_error
                       >
2313 :                 >skip1102
                       >
2313 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2315 : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
2317 : 202540          >        jsr report_error
                       >
231a :                 >skip1104
                       >
                        
                                nop_test $53,1
231a : a042            >            ldy #$42
231c : a203            >            ldx #4-1
231e : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
231f : ca              >            dex
2320 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2321 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2322 : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
2324 : 202540          >        jsr report_error
                       >
2327 :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
2327 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2329 : 48              >            pha         ;use stack to load status
232a : a9ac            >            lda #$ff-$53     ;precharge accu
232c : 28              >            plp
                       >
232d : 53              >            db  $53          ;test nop integrity - flags off
232e : ea              >            nop
232f : ea              >            nop
                       >            tst_a $ff-$53,0
2330 : 08              >            php         ;save flags
2331 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
2333 : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
2335 : 202540          >        jsr report_error
                       >
2338 :                 >skip1112
                       >
2338 : 68              >            pla         ;load status
2339 : 48              >            pha
                       >            cmp_flag 0
233a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
233c : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
233e : 202540          >        jsr report_error
                       >
2341 :                 >skip1115
                       >
2341 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
2342 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2344 : 48              >            pha         ;use stack to load status
2345 : a957            >            lda #$aa-$53     ;precharge accu
2347 : 28              >            plp
                       >
2348 : 53              >            db  $53          ;test nop integrity - flags on
2349 : ea              >            nop
234a : ea              >            nop
                       >            tst_a $aa-$53,$ff
234b : 08              >            php         ;save flags
234c : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
234e : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
2350 : 202540          >        jsr report_error
                       >
2353 :                 >skip1120
                       >
2353 : 68              >            pla         ;load status
2354 : 48              >            pha
                       >            cmp_flag $ff
2355 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2357 : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
2359 : 202540          >        jsr report_error
                       >
235c :                 >skip1123
                       >
235c : 28              >            plp         ;restore status
                       >
235d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
235f : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
2361 : 202540          >        jsr report_error
                       >
2364 :                 >skip1125
                       >
2364 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2366 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
2368 : 202540          >        jsr report_error
                       >
236b :                 >skip1127
                       >
                        
                                nop_test $63,1
236b : a042            >            ldy #$42
236d : a203            >            ldx #4-1
236f : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
2370 : ca              >            dex
2371 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2372 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2373 : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
2375 : 202540          >        jsr report_error
                       >
2378 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
2378 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
237a : 48              >            pha         ;use stack to load status
237b : a99c            >            lda #$ff-$63     ;precharge accu
237d : 28              >            plp
                       >
237e : 63              >            db  $63          ;test nop integrity - flags off
237f : ea              >            nop
2380 : ea              >            nop
                       >            tst_a $ff-$63,0
2381 : 08              >            php         ;save flags
2382 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
2384 : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
2386 : 202540          >        jsr report_error
                       >
2389 :                 >skip1135
                       >
2389 : 68              >            pla         ;load status
238a : 48              >            pha
                       >            cmp_flag 0
238b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
238d : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
238f : 202540          >        jsr report_error
                       >
2392 :                 >skip1138
                       >
2392 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
2393 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2395 : 48              >            pha         ;use stack to load status
2396 : a947            >            lda #$aa-$63     ;precharge accu
2398 : 28              >            plp
                       >
2399 : 63              >            db  $63          ;test nop integrity - flags on
239a : ea              >            nop
239b : ea              >            nop
                       >            tst_a $aa-$63,$ff
239c : 08              >            php         ;save flags
239d : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
239f : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
23a1 : 202540          >        jsr report_error
                       >
23a4 :                 >skip1143
                       >
23a4 : 68              >            pla         ;load status
23a5 : 48              >            pha
                       >            cmp_flag $ff
23a6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23a8 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
23aa : 202540          >        jsr report_error
                       >
23ad :                 >skip1146
                       >
23ad : 28              >            plp         ;restore status
                       >
23ae : c042            >            cpy #$42
                       >            trap_ne         ;y changed
23b0 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
23b2 : 202540          >        jsr report_error
                       >
23b5 :                 >skip1148
                       >
23b5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
23b7 : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
23b9 : 202540          >        jsr report_error
                       >
23bc :                 >skip1150
                       >
                        
                                nop_test $73,1
23bc : a042            >            ldy #$42
23be : a203            >            ldx #4-1
23c0 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
23c1 : ca              >            dex
23c2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
23c3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
23c4 : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
23c6 : 202540          >        jsr report_error
                       >
23c9 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
23c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23cb : 48              >            pha         ;use stack to load status
23cc : a98c            >            lda #$ff-$73     ;precharge accu
23ce : 28              >            plp
                       >
23cf : 73              >            db  $73          ;test nop integrity - flags off
23d0 : ea              >            nop
23d1 : ea              >            nop
                       >            tst_a $ff-$73,0
23d2 : 08              >            php         ;save flags
23d3 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
23d5 : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
23d7 : 202540          >        jsr report_error
                       >
23da :                 >skip1158
                       >
23da : 68              >            pla         ;load status
23db : 48              >            pha
                       >            cmp_flag 0
23dc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23de : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
23e0 : 202540          >        jsr report_error
                       >
23e3 :                 >skip1161
                       >
23e3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
23e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23e6 : 48              >            pha         ;use stack to load status
23e7 : a937            >            lda #$aa-$73     ;precharge accu
23e9 : 28              >            plp
                       >
23ea : 73              >            db  $73          ;test nop integrity - flags on
23eb : ea              >            nop
23ec : ea              >            nop
                       >            tst_a $aa-$73,$ff
23ed : 08              >            php         ;save flags
23ee : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
23f0 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
23f2 : 202540          >        jsr report_error
                       >
23f5 :                 >skip1166
                       >
23f5 : 68              >            pla         ;load status
23f6 : 48              >            pha
                       >            cmp_flag $ff
23f7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23f9 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
23fb : 202540          >        jsr report_error
                       >
23fe :                 >skip1169
                       >
23fe : 28              >            plp         ;restore status
                       >
23ff : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2401 : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
2403 : 202540          >        jsr report_error
                       >
2406 :                 >skip1171
                       >
2406 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2408 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
240a : 202540          >        jsr report_error
                       >
240d :                 >skip1173
                       >
                        
                                nop_test $83,1
240d : a042            >            ldy #$42
240f : a203            >            ldx #4-1
2411 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
2412 : ca              >            dex
2413 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2414 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2415 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
2417 : 202540          >        jsr report_error
                       >
241a :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
241a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
241c : 48              >            pha         ;use stack to load status
241d : a97c            >            lda #$ff-$83     ;precharge accu
241f : 28              >            plp
                       >
2420 : 83              >            db  $83          ;test nop integrity - flags off
2421 : ea              >            nop
2422 : ea              >            nop
                       >            tst_a $ff-$83,0
2423 : 08              >            php         ;save flags
2424 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
2426 : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
2428 : 202540          >        jsr report_error
                       >
242b :                 >skip1181
                       >
242b : 68              >            pla         ;load status
242c : 48              >            pha
                       >            cmp_flag 0
242d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
242f : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
2431 : 202540          >        jsr report_error
                       >
2434 :                 >skip1184
                       >
2434 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
2435 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2437 : 48              >            pha         ;use stack to load status
2438 : a927            >            lda #$aa-$83     ;precharge accu
243a : 28              >            plp
                       >
243b : 83              >            db  $83          ;test nop integrity - flags on
243c : ea              >            nop
243d : ea              >            nop
                       >            tst_a $aa-$83,$ff
243e : 08              >            php         ;save flags
243f : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
2441 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
2443 : 202540          >        jsr report_error
                       >
2446 :                 >skip1189
                       >
2446 : 68              >            pla         ;load status
2447 : 48              >            pha
                       >            cmp_flag $ff
2448 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
244a : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
244c : 202540          >        jsr report_error
                       >
244f :                 >skip1192
                       >
244f : 28              >            plp         ;restore status
                       >
2450 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2452 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
2454 : 202540          >        jsr report_error
                       >
2457 :                 >skip1194
                       >
2457 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2459 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
245b : 202540          >        jsr report_error
                       >
245e :                 >skip1196
                       >
                        
                                nop_test $93,1
245e : a042            >            ldy #$42
2460 : a203            >            ldx #4-1
2462 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
2463 : ca              >            dex
2464 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2465 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2466 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
2468 : 202540          >        jsr report_error
                       >
246b :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
246b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
246d : 48              >            pha         ;use stack to load status
246e : a96c            >            lda #$ff-$93     ;precharge accu
2470 : 28              >            plp
                       >
2471 : 93              >            db  $93          ;test nop integrity - flags off
2472 : ea              >            nop
2473 : ea              >            nop
                       >            tst_a $ff-$93,0
2474 : 08              >            php         ;save flags
2475 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
2477 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
2479 : 202540          >        jsr report_error
                       >
247c :                 >skip1204
                       >
247c : 68              >            pla         ;load status
247d : 48              >            pha
                       >            cmp_flag 0
247e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2480 : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
2482 : 202540          >        jsr report_error
                       >
2485 :                 >skip1207
                       >
2485 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
2486 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2488 : 48              >            pha         ;use stack to load status
2489 : a917            >            lda #$aa-$93     ;precharge accu
248b : 28              >            plp
                       >
248c : 93              >            db  $93          ;test nop integrity - flags on
248d : ea              >            nop
248e : ea              >            nop
                       >            tst_a $aa-$93,$ff
248f : 08              >            php         ;save flags
2490 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
2492 : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
2494 : 202540          >        jsr report_error
                       >
2497 :                 >skip1212
                       >
2497 : 68              >            pla         ;load status
2498 : 48              >            pha
                       >            cmp_flag $ff
2499 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
249b : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
249d : 202540          >        jsr report_error
                       >
24a0 :                 >skip1215
                       >
24a0 : 28              >            plp         ;restore status
                       >
24a1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
24a3 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
24a5 : 202540          >        jsr report_error
                       >
24a8 :                 >skip1217
                       >
24a8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
24aa : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
24ac : 202540          >        jsr report_error
                       >
24af :                 >skip1219
                       >
                        
                                nop_test $a3,1
24af : a042            >            ldy #$42
24b1 : a203            >            ldx #4-1
24b3 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
24b4 : ca              >            dex
24b5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24b6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24b7 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
24b9 : 202540          >        jsr report_error
                       >
24bc :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
24bc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24be : 48              >            pha         ;use stack to load status
24bf : a95c            >            lda #$ff-$a3     ;precharge accu
24c1 : 28              >            plp
                       >
24c2 : a3              >            db  $a3          ;test nop integrity - flags off
24c3 : ea              >            nop
24c4 : ea              >            nop
                       >            tst_a $ff-$a3,0
24c5 : 08              >            php         ;save flags
24c6 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
24c8 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
24ca : 202540          >        jsr report_error
                       >
24cd :                 >skip1227
                       >
24cd : 68              >            pla         ;load status
24ce : 48              >            pha
                       >            cmp_flag 0
24cf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24d1 : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
24d3 : 202540          >        jsr report_error
                       >
24d6 :                 >skip1230
                       >
24d6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
24d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24d9 : 48              >            pha         ;use stack to load status
24da : a907            >            lda #$aa-$a3     ;precharge accu
24dc : 28              >            plp
                       >
24dd : a3              >            db  $a3          ;test nop integrity - flags on
24de : ea              >            nop
24df : ea              >            nop
                       >            tst_a $aa-$a3,$ff
24e0 : 08              >            php         ;save flags
24e1 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
24e3 : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
24e5 : 202540          >        jsr report_error
                       >
24e8 :                 >skip1235
                       >
24e8 : 68              >            pla         ;load status
24e9 : 48              >            pha
                       >            cmp_flag $ff
24ea : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24ec : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
24ee : 202540          >        jsr report_error
                       >
24f1 :                 >skip1238
                       >
24f1 : 28              >            plp         ;restore status
                       >
24f2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
24f4 : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
24f6 : 202540          >        jsr report_error
                       >
24f9 :                 >skip1240
                       >
24f9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
24fb : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
24fd : 202540          >        jsr report_error
                       >
2500 :                 >skip1242
                       >
                        
                                nop_test $b3,1
2500 : a042            >            ldy #$42
2502 : a203            >            ldx #4-1
2504 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
2505 : ca              >            dex
2506 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2507 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2508 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
250a : 202540          >        jsr report_error
                       >
250d :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
250d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
250f : 48              >            pha         ;use stack to load status
2510 : a94c            >            lda #$ff-$b3     ;precharge accu
2512 : 28              >            plp
                       >
2513 : b3              >            db  $b3          ;test nop integrity - flags off
2514 : ea              >            nop
2515 : ea              >            nop
                       >            tst_a $ff-$b3,0
2516 : 08              >            php         ;save flags
2517 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
2519 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
251b : 202540          >        jsr report_error
                       >
251e :                 >skip1250
                       >
251e : 68              >            pla         ;load status
251f : 48              >            pha
                       >            cmp_flag 0
2520 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2522 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
2524 : 202540          >        jsr report_error
                       >
2527 :                 >skip1253
                       >
2527 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
2528 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
252a : 48              >            pha         ;use stack to load status
252b : a9f7            >            lda #$aa-$b3     ;precharge accu
252d : 28              >            plp
                       >
252e : b3              >            db  $b3          ;test nop integrity - flags on
252f : ea              >            nop
2530 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
2531 : 08              >            php         ;save flags
2532 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
2534 : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
2536 : 202540          >        jsr report_error
                       >
2539 :                 >skip1258
                       >
2539 : 68              >            pla         ;load status
253a : 48              >            pha
                       >            cmp_flag $ff
253b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
253d : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
253f : 202540          >        jsr report_error
                       >
2542 :                 >skip1261
                       >
2542 : 28              >            plp         ;restore status
                       >
2543 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2545 : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
2547 : 202540          >        jsr report_error
                       >
254a :                 >skip1263
                       >
254a : e000            >            cpx #0
                       >            trap_ne         ;x changed
254c : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
254e : 202540          >        jsr report_error
                       >
2551 :                 >skip1265
                       >
                        
                                nop_test $c3,1
2551 : a042            >            ldy #$42
2553 : a203            >            ldx #4-1
2555 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
2556 : ca              >            dex
2557 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2558 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2559 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
255b : 202540          >        jsr report_error
                       >
255e :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
255e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2560 : 48              >            pha         ;use stack to load status
2561 : a93c            >            lda #$ff-$c3     ;precharge accu
2563 : 28              >            plp
                       >
2564 : c3              >            db  $c3          ;test nop integrity - flags off
2565 : ea              >            nop
2566 : ea              >            nop
                       >            tst_a $ff-$c3,0
2567 : 08              >            php         ;save flags
2568 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
256a : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
256c : 202540          >        jsr report_error
                       >
256f :                 >skip1273
                       >
256f : 68              >            pla         ;load status
2570 : 48              >            pha
                       >            cmp_flag 0
2571 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2573 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
2575 : 202540          >        jsr report_error
                       >
2578 :                 >skip1276
                       >
2578 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
2579 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
257b : 48              >            pha         ;use stack to load status
257c : a9e7            >            lda #$aa-$c3     ;precharge accu
257e : 28              >            plp
                       >
257f : c3              >            db  $c3          ;test nop integrity - flags on
2580 : ea              >            nop
2581 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
2582 : 08              >            php         ;save flags
2583 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
2585 : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
2587 : 202540          >        jsr report_error
                       >
258a :                 >skip1281
                       >
258a : 68              >            pla         ;load status
258b : 48              >            pha
                       >            cmp_flag $ff
258c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
258e : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
2590 : 202540          >        jsr report_error
                       >
2593 :                 >skip1284
                       >
2593 : 28              >            plp         ;restore status
                       >
2594 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2596 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
2598 : 202540          >        jsr report_error
                       >
259b :                 >skip1286
                       >
259b : e000            >            cpx #0
                       >            trap_ne         ;x changed
259d : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
259f : 202540          >        jsr report_error
                       >
25a2 :                 >skip1288
                       >
                        
                                nop_test $d3,1
25a2 : a042            >            ldy #$42
25a4 : a203            >            ldx #4-1
25a6 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
25a7 : ca              >            dex
25a8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
25a9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
25aa : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
25ac : 202540          >        jsr report_error
                       >
25af :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
25af : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25b1 : 48              >            pha         ;use stack to load status
25b2 : a92c            >            lda #$ff-$d3     ;precharge accu
25b4 : 28              >            plp
                       >
25b5 : d3              >            db  $d3          ;test nop integrity - flags off
25b6 : ea              >            nop
25b7 : ea              >            nop
                       >            tst_a $ff-$d3,0
25b8 : 08              >            php         ;save flags
25b9 : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
25bb : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
25bd : 202540          >        jsr report_error
                       >
25c0 :                 >skip1296
                       >
25c0 : 68              >            pla         ;load status
25c1 : 48              >            pha
                       >            cmp_flag 0
25c2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25c4 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
25c6 : 202540          >        jsr report_error
                       >
25c9 :                 >skip1299
                       >
25c9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
25ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25cc : 48              >            pha         ;use stack to load status
25cd : a9d7            >            lda #$aa-$d3     ;precharge accu
25cf : 28              >            plp
                       >
25d0 : d3              >            db  $d3          ;test nop integrity - flags on
25d1 : ea              >            nop
25d2 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
25d3 : 08              >            php         ;save flags
25d4 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
25d6 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
25d8 : 202540          >        jsr report_error
                       >
25db :                 >skip1304
                       >
25db : 68              >            pla         ;load status
25dc : 48              >            pha
                       >            cmp_flag $ff
25dd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25df : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
25e1 : 202540          >        jsr report_error
                       >
25e4 :                 >skip1307
                       >
25e4 : 28              >            plp         ;restore status
                       >
25e5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
25e7 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
25e9 : 202540          >        jsr report_error
                       >
25ec :                 >skip1309
                       >
25ec : e000            >            cpx #0
                       >            trap_ne         ;x changed
25ee : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
25f0 : 202540          >        jsr report_error
                       >
25f3 :                 >skip1311
                       >
                        
                                nop_test $e3,1
25f3 : a042            >            ldy #$42
25f5 : a203            >            ldx #4-1
25f7 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
25f8 : ca              >            dex
25f9 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
25fa : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
25fb : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
25fd : 202540          >        jsr report_error
                       >
2600 :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
2600 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2602 : 48              >            pha         ;use stack to load status
2603 : a91c            >            lda #$ff-$e3     ;precharge accu
2605 : 28              >            plp
                       >
2606 : e3              >            db  $e3          ;test nop integrity - flags off
2607 : ea              >            nop
2608 : ea              >            nop
                       >            tst_a $ff-$e3,0
2609 : 08              >            php         ;save flags
260a : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
260c : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
260e : 202540          >        jsr report_error
                       >
2611 :                 >skip1319
                       >
2611 : 68              >            pla         ;load status
2612 : 48              >            pha
                       >            cmp_flag 0
2613 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2615 : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
2617 : 202540          >        jsr report_error
                       >
261a :                 >skip1322
                       >
261a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
261b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
261d : 48              >            pha         ;use stack to load status
261e : a9c7            >            lda #$aa-$e3     ;precharge accu
2620 : 28              >            plp
                       >
2621 : e3              >            db  $e3          ;test nop integrity - flags on
2622 : ea              >            nop
2623 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
2624 : 08              >            php         ;save flags
2625 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
2627 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
2629 : 202540          >        jsr report_error
                       >
262c :                 >skip1327
                       >
262c : 68              >            pla         ;load status
262d : 48              >            pha
                       >            cmp_flag $ff
262e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2630 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
2632 : 202540          >        jsr report_error
                       >
2635 :                 >skip1330
                       >
2635 : 28              >            plp         ;restore status
                       >
2636 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2638 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
263a : 202540          >        jsr report_error
                       >
263d :                 >skip1332
                       >
263d : e000            >            cpx #0
                       >            trap_ne         ;x changed
263f : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
2641 : 202540          >        jsr report_error
                       >
2644 :                 >skip1334
                       >
                        
                                nop_test $f3,1
2644 : a042            >            ldy #$42
2646 : a203            >            ldx #4-1
2648 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
2649 : ca              >            dex
264a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
264b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
264c : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
264e : 202540          >        jsr report_error
                       >
2651 :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
2651 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2653 : 48              >            pha         ;use stack to load status
2654 : a90c            >            lda #$ff-$f3     ;precharge accu
2656 : 28              >            plp
                       >
2657 : f3              >            db  $f3          ;test nop integrity - flags off
2658 : ea              >            nop
2659 : ea              >            nop
                       >            tst_a $ff-$f3,0
265a : 08              >            php         ;save flags
265b : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
265d : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
265f : 202540          >        jsr report_error
                       >
2662 :                 >skip1342
                       >
2662 : 68              >            pla         ;load status
2663 : 48              >            pha
                       >            cmp_flag 0
2664 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2666 : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
2668 : 202540          >        jsr report_error
                       >
266b :                 >skip1345
                       >
266b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
266c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
266e : 48              >            pha         ;use stack to load status
266f : a9b7            >            lda #$aa-$f3     ;precharge accu
2671 : 28              >            plp
                       >
2672 : f3              >            db  $f3          ;test nop integrity - flags on
2673 : ea              >            nop
2674 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
2675 : 08              >            php         ;save flags
2676 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
2678 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
267a : 202540          >        jsr report_error
                       >
267d :                 >skip1350
                       >
267d : 68              >            pla         ;load status
267e : 48              >            pha
                       >            cmp_flag $ff
267f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2681 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
2683 : 202540          >        jsr report_error
                       >
2686 :                 >skip1353
                       >
2686 : 28              >            plp         ;restore status
                       >
2687 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2689 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
268b : 202540          >        jsr report_error
                       >
268e :                 >skip1355
                       >
268e : e000            >            cpx #0
                       >            trap_ne         ;x changed
2690 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
2692 : 202540          >        jsr report_error
                       >
2695 :                 >skip1357
                       >
                        
                                nop_test $0b,1
2695 : a042            >            ldy #$42
2697 : a203            >            ldx #4-1
2699 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
269a : ca              >            dex
269b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
269c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
269d : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
269f : 202540          >        jsr report_error
                       >
26a2 :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
26a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26a4 : 48              >            pha         ;use stack to load status
26a5 : a9f4            >            lda #$ff-$0b     ;precharge accu
26a7 : 28              >            plp
                       >
26a8 : 0b              >            db  $0b          ;test nop integrity - flags off
26a9 : ea              >            nop
26aa : ea              >            nop
                       >            tst_a $ff-$0b,0
26ab : 08              >            php         ;save flags
26ac : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
26ae : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
26b0 : 202540          >        jsr report_error
                       >
26b3 :                 >skip1365
                       >
26b3 : 68              >            pla         ;load status
26b4 : 48              >            pha
                       >            cmp_flag 0
26b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26b7 : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
26b9 : 202540          >        jsr report_error
                       >
26bc :                 >skip1368
                       >
26bc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
26bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26bf : 48              >            pha         ;use stack to load status
26c0 : a99f            >            lda #$aa-$0b     ;precharge accu
26c2 : 28              >            plp
                       >
26c3 : 0b              >            db  $0b          ;test nop integrity - flags on
26c4 : ea              >            nop
26c5 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
26c6 : 08              >            php         ;save flags
26c7 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
26c9 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
26cb : 202540          >        jsr report_error
                       >
26ce :                 >skip1373
                       >
26ce : 68              >            pla         ;load status
26cf : 48              >            pha
                       >            cmp_flag $ff
26d0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26d2 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
26d4 : 202540          >        jsr report_error
                       >
26d7 :                 >skip1376
                       >
26d7 : 28              >            plp         ;restore status
                       >
26d8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
26da : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
26dc : 202540          >        jsr report_error
                       >
26df :                 >skip1378
                       >
26df : e000            >            cpx #0
                       >            trap_ne         ;x changed
26e1 : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
26e3 : 202540          >        jsr report_error
                       >
26e6 :                 >skip1380
                       >
                        
                                nop_test $1b,1
26e6 : a042            >            ldy #$42
26e8 : a203            >            ldx #4-1
26ea : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
26eb : ca              >            dex
26ec : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
26ed : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
26ee : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
26f0 : 202540          >        jsr report_error
                       >
26f3 :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
26f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26f5 : 48              >            pha         ;use stack to load status
26f6 : a9e4            >            lda #$ff-$1b     ;precharge accu
26f8 : 28              >            plp
                       >
26f9 : 1b              >            db  $1b          ;test nop integrity - flags off
26fa : ea              >            nop
26fb : ea              >            nop
                       >            tst_a $ff-$1b,0
26fc : 08              >            php         ;save flags
26fd : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
26ff : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
2701 : 202540          >        jsr report_error
                       >
2704 :                 >skip1388
                       >
2704 : 68              >            pla         ;load status
2705 : 48              >            pha
                       >            cmp_flag 0
2706 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2708 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
270a : 202540          >        jsr report_error
                       >
270d :                 >skip1391
                       >
270d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
270e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2710 : 48              >            pha         ;use stack to load status
2711 : a98f            >            lda #$aa-$1b     ;precharge accu
2713 : 28              >            plp
                       >
2714 : 1b              >            db  $1b          ;test nop integrity - flags on
2715 : ea              >            nop
2716 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
2717 : 08              >            php         ;save flags
2718 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
271a : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
271c : 202540          >        jsr report_error
                       >
271f :                 >skip1396
                       >
271f : 68              >            pla         ;load status
2720 : 48              >            pha
                       >            cmp_flag $ff
2721 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2723 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
2725 : 202540          >        jsr report_error
                       >
2728 :                 >skip1399
                       >
2728 : 28              >            plp         ;restore status
                       >
2729 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
272b : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
272d : 202540          >        jsr report_error
                       >
2730 :                 >skip1401
                       >
2730 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2732 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
2734 : 202540          >        jsr report_error
                       >
2737 :                 >skip1403
                       >
                        
                                nop_test $2b,1
2737 : a042            >            ldy #$42
2739 : a203            >            ldx #4-1
273b : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
273c : ca              >            dex
273d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
273e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
273f : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
2741 : 202540          >        jsr report_error
                       >
2744 :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
2744 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2746 : 48              >            pha         ;use stack to load status
2747 : a9d4            >            lda #$ff-$2b     ;precharge accu
2749 : 28              >            plp
                       >
274a : 2b              >            db  $2b          ;test nop integrity - flags off
274b : ea              >            nop
274c : ea              >            nop
                       >            tst_a $ff-$2b,0
274d : 08              >            php         ;save flags
274e : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
2750 : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
2752 : 202540          >        jsr report_error
                       >
2755 :                 >skip1411
                       >
2755 : 68              >            pla         ;load status
2756 : 48              >            pha
                       >            cmp_flag 0
2757 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2759 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
275b : 202540          >        jsr report_error
                       >
275e :                 >skip1414
                       >
275e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
275f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2761 : 48              >            pha         ;use stack to load status
2762 : a97f            >            lda #$aa-$2b     ;precharge accu
2764 : 28              >            plp
                       >
2765 : 2b              >            db  $2b          ;test nop integrity - flags on
2766 : ea              >            nop
2767 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
2768 : 08              >            php         ;save flags
2769 : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
276b : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
276d : 202540          >        jsr report_error
                       >
2770 :                 >skip1419
                       >
2770 : 68              >            pla         ;load status
2771 : 48              >            pha
                       >            cmp_flag $ff
2772 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2774 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
2776 : 202540          >        jsr report_error
                       >
2779 :                 >skip1422
                       >
2779 : 28              >            plp         ;restore status
                       >
277a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
277c : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
277e : 202540          >        jsr report_error
                       >
2781 :                 >skip1424
                       >
2781 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2783 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
2785 : 202540          >        jsr report_error
                       >
2788 :                 >skip1426
                       >
                        
                                nop_test $3b,1
2788 : a042            >            ldy #$42
278a : a203            >            ldx #4-1
278c : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
278d : ca              >            dex
278e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
278f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2790 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
2792 : 202540          >        jsr report_error
                       >
2795 :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
2795 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2797 : 48              >            pha         ;use stack to load status
2798 : a9c4            >            lda #$ff-$3b     ;precharge accu
279a : 28              >            plp
                       >
279b : 3b              >            db  $3b          ;test nop integrity - flags off
279c : ea              >            nop
279d : ea              >            nop
                       >            tst_a $ff-$3b,0
279e : 08              >            php         ;save flags
279f : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
27a1 : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
27a3 : 202540          >        jsr report_error
                       >
27a6 :                 >skip1434
                       >
27a6 : 68              >            pla         ;load status
27a7 : 48              >            pha
                       >            cmp_flag 0
27a8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27aa : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
27ac : 202540          >        jsr report_error
                       >
27af :                 >skip1437
                       >
27af : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
27b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27b2 : 48              >            pha         ;use stack to load status
27b3 : a96f            >            lda #$aa-$3b     ;precharge accu
27b5 : 28              >            plp
                       >
27b6 : 3b              >            db  $3b          ;test nop integrity - flags on
27b7 : ea              >            nop
27b8 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
27b9 : 08              >            php         ;save flags
27ba : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
27bc : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
27be : 202540          >        jsr report_error
                       >
27c1 :                 >skip1442
                       >
27c1 : 68              >            pla         ;load status
27c2 : 48              >            pha
                       >            cmp_flag $ff
27c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27c5 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
27c7 : 202540          >        jsr report_error
                       >
27ca :                 >skip1445
                       >
27ca : 28              >            plp         ;restore status
                       >
27cb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
27cd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
27cf : 202540          >        jsr report_error
                       >
27d2 :                 >skip1447
                       >
27d2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
27d4 : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
27d6 : 202540          >        jsr report_error
                       >
27d9 :                 >skip1449
                       >
                        
                                nop_test $4b,1
27d9 : a042            >            ldy #$42
27db : a203            >            ldx #4-1
27dd : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
27de : ca              >            dex
27df : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27e0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27e1 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
27e3 : 202540          >        jsr report_error
                       >
27e6 :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
27e6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27e8 : 48              >            pha         ;use stack to load status
27e9 : a9b4            >            lda #$ff-$4b     ;precharge accu
27eb : 28              >            plp
                       >
27ec : 4b              >            db  $4b          ;test nop integrity - flags off
27ed : ea              >            nop
27ee : ea              >            nop
                       >            tst_a $ff-$4b,0
27ef : 08              >            php         ;save flags
27f0 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
27f2 : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
27f4 : 202540          >        jsr report_error
                       >
27f7 :                 >skip1457
                       >
27f7 : 68              >            pla         ;load status
27f8 : 48              >            pha
                       >            cmp_flag 0
27f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27fb : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
27fd : 202540          >        jsr report_error
                       >
2800 :                 >skip1460
                       >
2800 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
2801 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2803 : 48              >            pha         ;use stack to load status
2804 : a95f            >            lda #$aa-$4b     ;precharge accu
2806 : 28              >            plp
                       >
2807 : 4b              >            db  $4b          ;test nop integrity - flags on
2808 : ea              >            nop
2809 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
280a : 08              >            php         ;save flags
280b : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
280d : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
280f : 202540          >        jsr report_error
                       >
2812 :                 >skip1465
                       >
2812 : 68              >            pla         ;load status
2813 : 48              >            pha
                       >            cmp_flag $ff
2814 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2816 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
2818 : 202540          >        jsr report_error
                       >
281b :                 >skip1468
                       >
281b : 28              >            plp         ;restore status
                       >
281c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
281e : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
2820 : 202540          >        jsr report_error
                       >
2823 :                 >skip1470
                       >
2823 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2825 : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
2827 : 202540          >        jsr report_error
                       >
282a :                 >skip1472
                       >
                        
                                nop_test $5b,1
282a : a042            >            ldy #$42
282c : a203            >            ldx #4-1
282e : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
282f : ca              >            dex
2830 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2831 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2832 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
2834 : 202540          >        jsr report_error
                       >
2837 :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
2837 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2839 : 48              >            pha         ;use stack to load status
283a : a9a4            >            lda #$ff-$5b     ;precharge accu
283c : 28              >            plp
                       >
283d : 5b              >            db  $5b          ;test nop integrity - flags off
283e : ea              >            nop
283f : ea              >            nop
                       >            tst_a $ff-$5b,0
2840 : 08              >            php         ;save flags
2841 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
2843 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
2845 : 202540          >        jsr report_error
                       >
2848 :                 >skip1480
                       >
2848 : 68              >            pla         ;load status
2849 : 48              >            pha
                       >            cmp_flag 0
284a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
284c : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
284e : 202540          >        jsr report_error
                       >
2851 :                 >skip1483
                       >
2851 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
2852 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2854 : 48              >            pha         ;use stack to load status
2855 : a94f            >            lda #$aa-$5b     ;precharge accu
2857 : 28              >            plp
                       >
2858 : 5b              >            db  $5b          ;test nop integrity - flags on
2859 : ea              >            nop
285a : ea              >            nop
                       >            tst_a $aa-$5b,$ff
285b : 08              >            php         ;save flags
285c : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
285e : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
2860 : 202540          >        jsr report_error
                       >
2863 :                 >skip1488
                       >
2863 : 68              >            pla         ;load status
2864 : 48              >            pha
                       >            cmp_flag $ff
2865 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2867 : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
2869 : 202540          >        jsr report_error
                       >
286c :                 >skip1491
                       >
286c : 28              >            plp         ;restore status
                       >
286d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
286f : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
2871 : 202540          >        jsr report_error
                       >
2874 :                 >skip1493
                       >
2874 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2876 : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
2878 : 202540          >        jsr report_error
                       >
287b :                 >skip1495
                       >
                        
                                nop_test $6b,1
287b : a042            >            ldy #$42
287d : a203            >            ldx #4-1
287f : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
2880 : ca              >            dex
2881 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2882 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2883 : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
2885 : 202540          >        jsr report_error
                       >
2888 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
2888 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
288a : 48              >            pha         ;use stack to load status
288b : a994            >            lda #$ff-$6b     ;precharge accu
288d : 28              >            plp
                       >
288e : 6b              >            db  $6b          ;test nop integrity - flags off
288f : ea              >            nop
2890 : ea              >            nop
                       >            tst_a $ff-$6b,0
2891 : 08              >            php         ;save flags
2892 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
2894 : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
2896 : 202540          >        jsr report_error
                       >
2899 :                 >skip1503
                       >
2899 : 68              >            pla         ;load status
289a : 48              >            pha
                       >            cmp_flag 0
289b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
289d : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
289f : 202540          >        jsr report_error
                       >
28a2 :                 >skip1506
                       >
28a2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
28a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28a5 : 48              >            pha         ;use stack to load status
28a6 : a93f            >            lda #$aa-$6b     ;precharge accu
28a8 : 28              >            plp
                       >
28a9 : 6b              >            db  $6b          ;test nop integrity - flags on
28aa : ea              >            nop
28ab : ea              >            nop
                       >            tst_a $aa-$6b,$ff
28ac : 08              >            php         ;save flags
28ad : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
28af : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
28b1 : 202540          >        jsr report_error
                       >
28b4 :                 >skip1511
                       >
28b4 : 68              >            pla         ;load status
28b5 : 48              >            pha
                       >            cmp_flag $ff
28b6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28b8 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
28ba : 202540          >        jsr report_error
                       >
28bd :                 >skip1514
                       >
28bd : 28              >            plp         ;restore status
                       >
28be : c042            >            cpy #$42
                       >            trap_ne         ;y changed
28c0 : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
28c2 : 202540          >        jsr report_error
                       >
28c5 :                 >skip1516
                       >
28c5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
28c7 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
28c9 : 202540          >        jsr report_error
                       >
28cc :                 >skip1518
                       >
                        
                                nop_test $7b,1
28cc : a042            >            ldy #$42
28ce : a203            >            ldx #4-1
28d0 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
28d1 : ca              >            dex
28d2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
28d3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
28d4 : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
28d6 : 202540          >        jsr report_error
                       >
28d9 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
28d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28db : 48              >            pha         ;use stack to load status
28dc : a984            >            lda #$ff-$7b     ;precharge accu
28de : 28              >            plp
                       >
28df : 7b              >            db  $7b          ;test nop integrity - flags off
28e0 : ea              >            nop
28e1 : ea              >            nop
                       >            tst_a $ff-$7b,0
28e2 : 08              >            php         ;save flags
28e3 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
28e5 : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
28e7 : 202540          >        jsr report_error
                       >
28ea :                 >skip1526
                       >
28ea : 68              >            pla         ;load status
28eb : 48              >            pha
                       >            cmp_flag 0
28ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28ee : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
28f0 : 202540          >        jsr report_error
                       >
28f3 :                 >skip1529
                       >
28f3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
28f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28f6 : 48              >            pha         ;use stack to load status
28f7 : a92f            >            lda #$aa-$7b     ;precharge accu
28f9 : 28              >            plp
                       >
28fa : 7b              >            db  $7b          ;test nop integrity - flags on
28fb : ea              >            nop
28fc : ea              >            nop
                       >            tst_a $aa-$7b,$ff
28fd : 08              >            php         ;save flags
28fe : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
2900 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
2902 : 202540          >        jsr report_error
                       >
2905 :                 >skip1534
                       >
2905 : 68              >            pla         ;load status
2906 : 48              >            pha
                       >            cmp_flag $ff
2907 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2909 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
290b : 202540          >        jsr report_error
                       >
290e :                 >skip1537
                       >
290e : 28              >            plp         ;restore status
                       >
290f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2911 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
2913 : 202540          >        jsr report_error
                       >
2916 :                 >skip1539
                       >
2916 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2918 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
291a : 202540          >        jsr report_error
                       >
291d :                 >skip1541
                       >
                        
                                nop_test $8b,1
291d : a042            >            ldy #$42
291f : a203            >            ldx #4-1
2921 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
2922 : ca              >            dex
2923 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2924 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2925 : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
2927 : 202540          >        jsr report_error
                       >
292a :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
292a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
292c : 48              >            pha         ;use stack to load status
292d : a974            >            lda #$ff-$8b     ;precharge accu
292f : 28              >            plp
                       >
2930 : 8b              >            db  $8b          ;test nop integrity - flags off
2931 : ea              >            nop
2932 : ea              >            nop
                       >            tst_a $ff-$8b,0
2933 : 08              >            php         ;save flags
2934 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
2936 : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
2938 : 202540          >        jsr report_error
                       >
293b :                 >skip1549
                       >
293b : 68              >            pla         ;load status
293c : 48              >            pha
                       >            cmp_flag 0
293d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
293f : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
2941 : 202540          >        jsr report_error
                       >
2944 :                 >skip1552
                       >
2944 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
2945 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2947 : 48              >            pha         ;use stack to load status
2948 : a91f            >            lda #$aa-$8b     ;precharge accu
294a : 28              >            plp
                       >
294b : 8b              >            db  $8b          ;test nop integrity - flags on
294c : ea              >            nop
294d : ea              >            nop
                       >            tst_a $aa-$8b,$ff
294e : 08              >            php         ;save flags
294f : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
2951 : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
2953 : 202540          >        jsr report_error
                       >
2956 :                 >skip1557
                       >
2956 : 68              >            pla         ;load status
2957 : 48              >            pha
                       >            cmp_flag $ff
2958 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
295a : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
295c : 202540          >        jsr report_error
                       >
295f :                 >skip1560
                       >
295f : 28              >            plp         ;restore status
                       >
2960 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2962 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
2964 : 202540          >        jsr report_error
                       >
2967 :                 >skip1562
                       >
2967 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2969 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
296b : 202540          >        jsr report_error
                       >
296e :                 >skip1564
                       >
                        
                                nop_test $9b,1
296e : a042            >            ldy #$42
2970 : a203            >            ldx #4-1
2972 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
2973 : ca              >            dex
2974 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2975 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2976 : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
2978 : 202540          >        jsr report_error
                       >
297b :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
297b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
297d : 48              >            pha         ;use stack to load status
297e : a964            >            lda #$ff-$9b     ;precharge accu
2980 : 28              >            plp
                       >
2981 : 9b              >            db  $9b          ;test nop integrity - flags off
2982 : ea              >            nop
2983 : ea              >            nop
                       >            tst_a $ff-$9b,0
2984 : 08              >            php         ;save flags
2985 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
2987 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
2989 : 202540          >        jsr report_error
                       >
298c :                 >skip1572
                       >
298c : 68              >            pla         ;load status
298d : 48              >            pha
                       >            cmp_flag 0
298e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2990 : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
2992 : 202540          >        jsr report_error
                       >
2995 :                 >skip1575
                       >
2995 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
2996 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2998 : 48              >            pha         ;use stack to load status
2999 : a90f            >            lda #$aa-$9b     ;precharge accu
299b : 28              >            plp
                       >
299c : 9b              >            db  $9b          ;test nop integrity - flags on
299d : ea              >            nop
299e : ea              >            nop
                       >            tst_a $aa-$9b,$ff
299f : 08              >            php         ;save flags
29a0 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
29a2 : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
29a4 : 202540          >        jsr report_error
                       >
29a7 :                 >skip1580
                       >
29a7 : 68              >            pla         ;load status
29a8 : 48              >            pha
                       >            cmp_flag $ff
29a9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29ab : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
29ad : 202540          >        jsr report_error
                       >
29b0 :                 >skip1583
                       >
29b0 : 28              >            plp         ;restore status
                       >
29b1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
29b3 : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
29b5 : 202540          >        jsr report_error
                       >
29b8 :                 >skip1585
                       >
29b8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
29ba : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
29bc : 202540          >        jsr report_error
                       >
29bf :                 >skip1587
                       >
                        
                                nop_test $ab,1
29bf : a042            >            ldy #$42
29c1 : a203            >            ldx #4-1
29c3 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
29c4 : ca              >            dex
29c5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
29c6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
29c7 : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
29c9 : 202540          >        jsr report_error
                       >
29cc :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
29cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29ce : 48              >            pha         ;use stack to load status
29cf : a954            >            lda #$ff-$ab     ;precharge accu
29d1 : 28              >            plp
                       >
29d2 : ab              >            db  $ab          ;test nop integrity - flags off
29d3 : ea              >            nop
29d4 : ea              >            nop
                       >            tst_a $ff-$ab,0
29d5 : 08              >            php         ;save flags
29d6 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
29d8 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
29da : 202540          >        jsr report_error
                       >
29dd :                 >skip1595
                       >
29dd : 68              >            pla         ;load status
29de : 48              >            pha
                       >            cmp_flag 0
29df : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29e1 : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
29e3 : 202540          >        jsr report_error
                       >
29e6 :                 >skip1598
                       >
29e6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
29e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29e9 : 48              >            pha         ;use stack to load status
29ea : a9ff            >            lda #$aa-$ab     ;precharge accu
29ec : 28              >            plp
                       >
29ed : ab              >            db  $ab          ;test nop integrity - flags on
29ee : ea              >            nop
29ef : ea              >            nop
                       >            tst_a $aa-$ab,$ff
29f0 : 08              >            php         ;save flags
29f1 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
29f3 : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
29f5 : 202540          >        jsr report_error
                       >
29f8 :                 >skip1603
                       >
29f8 : 68              >            pla         ;load status
29f9 : 48              >            pha
                       >            cmp_flag $ff
29fa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29fc : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
29fe : 202540          >        jsr report_error
                       >
2a01 :                 >skip1606
                       >
2a01 : 28              >            plp         ;restore status
                       >
2a02 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2a04 : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
2a06 : 202540          >        jsr report_error
                       >
2a09 :                 >skip1608
                       >
2a09 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2a0b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
2a0d : 202540          >        jsr report_error
                       >
2a10 :                 >skip1610
                       >
                        
                                nop_test $bb,1
2a10 : a042            >            ldy #$42
2a12 : a203            >            ldx #4-1
2a14 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
2a15 : ca              >            dex
2a16 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2a17 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2a18 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
2a1a : 202540          >        jsr report_error
                       >
2a1d :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
2a1d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a1f : 48              >            pha         ;use stack to load status
2a20 : a944            >            lda #$ff-$bb     ;precharge accu
2a22 : 28              >            plp
                       >
2a23 : bb              >            db  $bb          ;test nop integrity - flags off
2a24 : ea              >            nop
2a25 : ea              >            nop
                       >            tst_a $ff-$bb,0
2a26 : 08              >            php         ;save flags
2a27 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
2a29 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
2a2b : 202540          >        jsr report_error
                       >
2a2e :                 >skip1618
                       >
2a2e : 68              >            pla         ;load status
2a2f : 48              >            pha
                       >            cmp_flag 0
2a30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a32 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
2a34 : 202540          >        jsr report_error
                       >
2a37 :                 >skip1621
                       >
2a37 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
2a38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a3a : 48              >            pha         ;use stack to load status
2a3b : a9ef            >            lda #$aa-$bb     ;precharge accu
2a3d : 28              >            plp
                       >
2a3e : bb              >            db  $bb          ;test nop integrity - flags on
2a3f : ea              >            nop
2a40 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
2a41 : 08              >            php         ;save flags
2a42 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
2a44 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
2a46 : 202540          >        jsr report_error
                       >
2a49 :                 >skip1626
                       >
2a49 : 68              >            pla         ;load status
2a4a : 48              >            pha
                       >            cmp_flag $ff
2a4b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a4d : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
2a4f : 202540          >        jsr report_error
                       >
2a52 :                 >skip1629
                       >
2a52 : 28              >            plp         ;restore status
                       >
2a53 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2a55 : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
2a57 : 202540          >        jsr report_error
                       >
2a5a :                 >skip1631
                       >
2a5a : e000            >            cpx #0
                       >            trap_ne         ;x changed
2a5c : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
2a5e : 202540          >        jsr report_error
                       >
2a61 :                 >skip1633
                       >
                        
                                nop_test $eb,1
2a61 : a042            >            ldy #$42
2a63 : a203            >            ldx #4-1
2a65 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
2a66 : ca              >            dex
2a67 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2a68 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2a69 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
2a6b : 202540          >        jsr report_error
                       >
2a6e :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
2a6e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a70 : 48              >            pha         ;use stack to load status
2a71 : a914            >            lda #$ff-$eb     ;precharge accu
2a73 : 28              >            plp
                       >
2a74 : eb              >            db  $eb          ;test nop integrity - flags off
2a75 : ea              >            nop
2a76 : ea              >            nop
                       >            tst_a $ff-$eb,0
2a77 : 08              >            php         ;save flags
2a78 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
2a7a : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
2a7c : 202540          >        jsr report_error
                       >
2a7f :                 >skip1641
                       >
2a7f : 68              >            pla         ;load status
2a80 : 48              >            pha
                       >            cmp_flag 0
2a81 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a83 : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
2a85 : 202540          >        jsr report_error
                       >
2a88 :                 >skip1644
                       >
2a88 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
2a89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a8b : 48              >            pha         ;use stack to load status
2a8c : a9bf            >            lda #$aa-$eb     ;precharge accu
2a8e : 28              >            plp
                       >
2a8f : eb              >            db  $eb          ;test nop integrity - flags on
2a90 : ea              >            nop
2a91 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
2a92 : 08              >            php         ;save flags
2a93 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
2a95 : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
2a97 : 202540          >        jsr report_error
                       >
2a9a :                 >skip1649
                       >
2a9a : 68              >            pla         ;load status
2a9b : 48              >            pha
                       >            cmp_flag $ff
2a9c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a9e : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
2aa0 : 202540          >        jsr report_error
                       >
2aa3 :                 >skip1652
                       >
2aa3 : 28              >            plp         ;restore status
                       >
2aa4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2aa6 : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
2aa8 : 202540          >        jsr report_error
                       >
2aab :                 >skip1654
                       >
2aab : e000            >            cpx #0
                       >            trap_ne         ;x changed
2aad : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
2aaf : 202540          >        jsr report_error
                       >
2ab2 :                 >skip1656
                       >
                        
                                nop_test $fb,1
2ab2 : a042            >            ldy #$42
2ab4 : a203            >            ldx #4-1
2ab6 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
2ab7 : ca              >            dex
2ab8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2ab9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2aba : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
2abc : 202540          >        jsr report_error
                       >
2abf :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
2abf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ac1 : 48              >            pha         ;use stack to load status
2ac2 : a904            >            lda #$ff-$fb     ;precharge accu
2ac4 : 28              >            plp
                       >
2ac5 : fb              >            db  $fb          ;test nop integrity - flags off
2ac6 : ea              >            nop
2ac7 : ea              >            nop
                       >            tst_a $ff-$fb,0
2ac8 : 08              >            php         ;save flags
2ac9 : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
2acb : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
2acd : 202540          >        jsr report_error
                       >
2ad0 :                 >skip1664
                       >
2ad0 : 68              >            pla         ;load status
2ad1 : 48              >            pha
                       >            cmp_flag 0
2ad2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ad4 : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
2ad6 : 202540          >        jsr report_error
                       >
2ad9 :                 >skip1667
                       >
2ad9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
2ada : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2adc : 48              >            pha         ;use stack to load status
2add : a9af            >            lda #$aa-$fb     ;precharge accu
2adf : 28              >            plp
                       >
2ae0 : fb              >            db  $fb          ;test nop integrity - flags on
2ae1 : ea              >            nop
2ae2 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
2ae3 : 08              >            php         ;save flags
2ae4 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
2ae6 : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
2ae8 : 202540          >        jsr report_error
                       >
2aeb :                 >skip1672
                       >
2aeb : 68              >            pla         ;load status
2aec : 48              >            pha
                       >            cmp_flag $ff
2aed : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2aef : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
2af1 : 202540          >        jsr report_error
                       >
2af4 :                 >skip1675
                       >
2af4 : 28              >            plp         ;restore status
                       >
2af5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2af7 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
2af9 : 202540          >        jsr report_error
                       >
2afc :                 >skip1677
                       >
2afc : e000            >            cpx #0
                       >            trap_ne         ;x changed
2afe : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
2b00 : 202540          >        jsr report_error
                       >
2b03 :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
                                nop_test $db,1
                            endif
                                next_test
2b03 : ad0211          >            lda test_case   ;previous test
2b06 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2b08 : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
2b0a : 202540          >        jsr report_error
                       >
2b0d :                 >skip1682
                       >
0009 =                 >test_num = test_num + 1
2b0d : a909            >            lda #test_num   ;*** next tests' number
2b0f : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                                    
                        ; jump indirect (test page cross bug is fixed)
2b12 : a203                     ldx #3          ;prepare table
2b14 : bd203f           ji1     lda ji_adr,x
2b17 : 9dfd11                   sta ji_tab,x
2b1a : ca                       dex
2b1b : 10f7                     bpl ji1
2b1d : a943                     lda #hi(ji_px) ;high address if page cross bug
2b1f : 8d0011                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2b22 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b24 : 48              >            pha         ;use stack to load status
2b25 : 28              >            plp
                        
2b26 : a949                     lda #'I'
2b28 : a24e                     ldx #'N'
2b2a : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
2b2c : 6cfd11                   jmp (ji_tab)
2b2f : ea                       nop
                                trap_ne         ;runover protection
2b30 : f003            >        beq skip1686
                       >        trap            ;failed not equal (non zero)
2b32 : 202540          >        jsr report_error
                       >
2b35 :                 >skip1686
                        
                        
2b35 : 88                       dey
2b36 : 88                       dey
2b37 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
2b38 : 88                       dey
2b39 : 88                       dey
2b3a : 88                       dey
2b3b : 28                       plp
                                trap_eq         ;returned flags OK?
2b3c : d003            >        bne skip1688
                       >        trap           ;failed equal (zero)
2b3e : 202540          >        jsr report_error
                       >
2b41 :                 >skip1688
                        
                                trap_pl
2b41 : 3003            >        bmi skip1690
                       >        trap            ;failed plus (bit 7 clear)
2b43 : 202540          >        jsr report_error
                       >
2b46 :                 >skip1690
                        
                                trap_cc
2b46 : b003            >        bcs skip1692
                       >        trap            ;failed carry clear
2b48 : 202540          >        jsr report_error
                       >
2b4b :                 >skip1692
                        
                                trap_vc
2b4b : 7003            >        bvs skip1694
                       >        trap            ;failed overflow clear
2b4d : 202540          >        jsr report_error
                       >
2b50 :                 >skip1694
                        
2b50 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
2b52 : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
2b54 : 202540          >        jsr report_error
                       >
2b57 :                 >skip1696
                        
2b57 : e04f                     cpx #('N'+1)
                                trap_ne
2b59 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
2b5b : 202540          >        jsr report_error
                       >
2b5e :                 >skip1698
                        
2b5e : c03e                     cpy #('D'-6)
                                trap_ne
2b60 : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
2b62 : 202540          >        jsr report_error
                       >
2b65 :                 >skip1700
                        
2b65 : ba                       tsx             ;SP check
2b66 : e0ff                     cpx #$ff
                                trap_ne
2b68 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
2b6a : 202540          >        jsr report_error
                       >
2b6d :                 >skip1702
                        
                                next_test
2b6d : ad0211          >            lda test_case   ;previous test
2b70 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2b72 : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
2b74 : 202540          >        jsr report_error
                       >
2b77 :                 >skip1705
                       >
000a =                 >test_num = test_num + 1
2b77 : a90a            >            lda #test_num   ;*** next tests' number
2b79 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
2b7c : a20b                     ldx #11         ;prepare table
2b7e : bd743f           jxi1    lda jxi_adr,x
2b81 : 9df911                   sta jxi_tab,x
2b84 : ca                       dex
2b85 : 10f7                     bpl jxi1
2b87 : a942                     lda #hi(jxi_px) ;high address if page cross bug
2b89 : 8d0011                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2b8c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b8e : 48              >            pha         ;use stack to load status
2b8f : 28              >            plp
                        
2b90 : a958                     lda #'X'
2b92 : a204                     ldx #4
2b94 : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
2b96 : 7cf911                   jmp (jxi_tab,x)
2b99 : ea                       nop
                                trap_ne         ;runover protection
2b9a : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
2b9c : 202540          >        jsr report_error
                       >
2b9f :                 >skip1709
                        
                        
2b9f : 88                       dey
2ba0 : 88                       dey
2ba1 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
2ba2 : 88                       dey
2ba3 : 88                       dey
2ba4 : 88                       dey
2ba5 : 28                       plp
                                trap_eq         ;returned flags OK?
2ba6 : d003            >        bne skip1711
                       >        trap           ;failed equal (zero)
2ba8 : 202540          >        jsr report_error
                       >
2bab :                 >skip1711
                        
                                trap_pl
2bab : 3003            >        bmi skip1713
                       >        trap            ;failed plus (bit 7 clear)
2bad : 202540          >        jsr report_error
                       >
2bb0 :                 >skip1713
                        
                                trap_cc
2bb0 : b003            >        bcs skip1715
                       >        trap            ;failed carry clear
2bb2 : 202540          >        jsr report_error
                       >
2bb5 :                 >skip1715
                        
                                trap_vc
2bb5 : 7003            >        bvs skip1717
                       >        trap            ;failed overflow clear
2bb7 : 202540          >        jsr report_error
                       >
2bba :                 >skip1717
                        
2bba : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
2bbc : f003            >        beq skip1719
                       >        trap            ;failed not equal (non zero)
2bbe : 202540          >        jsr report_error
                       >
2bc1 :                 >skip1719
                        
2bc1 : e006                     cpx #6
                                trap_ne
2bc3 : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
2bc5 : 202540          >        jsr report_error
                       >
2bc8 :                 >skip1721
                        
2bc8 : c043                     cpy #('I'-6)
                                trap_ne
2bca : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
2bcc : 202540          >        jsr report_error
                       >
2bcf :                 >skip1723
                        
2bcf : ba                       tsx             ;SP check
2bd0 : e0ff                     cpx #$ff
                                trap_ne
2bd2 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
2bd4 : 202540          >        jsr report_error
                       >
2bd7 :                 >skip1725
                        
                        
2bd7 : a9f3                     lda #lo(jxp_ok) ;test with index causing a page cross
2bd9 : 8d0012                   sta jxp_tab
2bdc : a92b                     lda #hi(jxp_ok)
2bde : 8d0112                   sta jxp_tab+1
2be1 : a9f0                     lda #lo(jxp_px)
2be3 : 8d0011                   sta pg_x
2be6 : a92b                     lda #hi(jxp_px)
2be8 : 8d0111                   sta pg_x+1
2beb : a2ff                     ldx #$ff
2bed : 7c0111                   jmp (jxp_tab-$ff,x)
                                
2bf0 :                  jxp_px  
                                trap            ;page cross by index to wrong page
2bf0 : 202540          >        jsr report_error
                        
                        
2bf3 :                  jxp_ok
                                next_test
2bf3 : ad0211          >            lda test_case   ;previous test
2bf6 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2bf8 : f003            >        beq skip1729
                       >        trap            ;failed not equal (non zero)
2bfa : 202540          >        jsr report_error
                       >
2bfd :                 >skip1729
                       >
000b =                 >test_num = test_num + 1
2bfd : a90b            >            lda #test_num   ;*** next tests' number
2bff : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                                dey             ;should not be executed
                        brk_ret0                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #'R'+1
                                trap_ne
                                cpy #'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                        ;pass 2
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                                dey             ;should not be executed
                        brk_ret1                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #$ff-'R'+1
                                trap_ne
                                cpy #$ff-'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
2c02 : a2ac                     ldx #$ac    ;protect x & y
2c04 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
2c06 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c08 : 48              >            pha         ;use stack to load status
2c09 : a9fe            >            lda #$fe     ;precharge accu
2c0b : 28              >            plp
                        
2c0c : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
2c0d : 48              >            pha
2c0e : 08              >            php         ;save flags
2c0f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2c11 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
2c13 : 202540          >        jsr report_error
                       >
2c16 :                 >skip1734
                       >
2c16 : 68              >            pla         ;load status
2c17 : 48              >            pha
                       >            cmp_flag $ff-zero
2c18 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c1a : f003            >        beq skip1737
                       >        trap            ;failed not equal (non zero)
2c1c : 202540          >        jsr report_error
                       >
2c1f :                 >skip1737
                       >
2c1f : 28              >            plp         ;restore status
2c20 : 68              >            pla
                        
2c21 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
2c22 : 48              >            pha
2c23 : 08              >            php         ;save flags
2c24 : c900            >            cmp #0     ;test result
                       >            trap_ne
2c26 : f003            >        beq skip1740
                       >        trap            ;failed not equal (non zero)
2c28 : 202540          >        jsr report_error
                       >
2c2b :                 >skip1740
                       >
2c2b : 68              >            pla         ;load status
2c2c : 48              >            pha
                       >            cmp_flag $ff-minus
2c2d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c2f : f003            >        beq skip1743
                       >        trap            ;failed not equal (non zero)
2c31 : 202540          >        jsr report_error
                       >
2c34 :                 >skip1743
                       >
2c34 : 28              >            plp         ;restore status
2c35 : 68              >            pla
                        
2c36 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
2c37 : 48              >            pha
2c38 : 08              >            php         ;save flags
2c39 : c901            >            cmp #1     ;test result
                       >            trap_ne
2c3b : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
2c3d : 202540          >        jsr report_error
                       >
2c40 :                 >skip1746
                       >
2c40 : 68              >            pla         ;load status
2c41 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
2c42 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c44 : f003            >        beq skip1749
                       >        trap            ;failed not equal (non zero)
2c46 : 202540          >        jsr report_error
                       >
2c49 :                 >skip1749
                       >
2c49 : 28              >            plp         ;restore status
2c4a : 68              >            pla
                        
2c4b : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
2c4c : 48              >            pha
2c4d : 08              >            php         ;save flags
2c4e : c900            >            cmp #0     ;test result
                       >            trap_ne
2c50 : f003            >        beq skip1752
                       >        trap            ;failed not equal (non zero)
2c52 : 202540          >        jsr report_error
                       >
2c55 :                 >skip1752
                       >
2c55 : 68              >            pla         ;load status
2c56 : 48              >            pha
                       >            cmp_flag $ff-minus
2c57 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c59 : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
2c5b : 202540          >        jsr report_error
                       >
2c5e :                 >skip1755
                       >
2c5e : 28              >            plp         ;restore status
2c5f : 68              >            pla
                        
2c60 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
2c61 : 48              >            pha
2c62 : 08              >            php         ;save flags
2c63 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2c65 : f003            >        beq skip1758
                       >        trap            ;failed not equal (non zero)
2c67 : 202540          >        jsr report_error
                       >
2c6a :                 >skip1758
                       >
2c6a : 68              >            pla         ;load status
2c6b : 48              >            pha
                       >            cmp_flag $ff-zero
2c6c : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c6e : f003            >        beq skip1761
                       >        trap            ;failed not equal (non zero)
2c70 : 202540          >        jsr report_error
                       >
2c73 :                 >skip1761
                       >
2c73 : 28              >            plp         ;restore status
2c74 : 68              >            pla
                        
2c75 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
2c76 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c78 : 48              >            pha         ;use stack to load status
2c79 : a9fe            >            lda #$fe     ;precharge accu
2c7b : 28              >            plp
                        
2c7c : 1a                       inc a           ;ff
                                tst_as $ff,minus
2c7d : 48              >            pha
2c7e : 08              >            php         ;save flags
2c7f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2c81 : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
2c83 : 202540          >        jsr report_error
                       >
2c86 :                 >skip1766
                       >
2c86 : 68              >            pla         ;load status
2c87 : 48              >            pha
                       >            cmp_flag minus
2c88 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c8a : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
2c8c : 202540          >        jsr report_error
                       >
2c8f :                 >skip1769
                       >
2c8f : 28              >            plp         ;restore status
2c90 : 68              >            pla
                        
2c91 : 1a                       inc a           ;00
                                tst_as 0,zero
2c92 : 48              >            pha
2c93 : 08              >            php         ;save flags
2c94 : c900            >            cmp #0     ;test result
                       >            trap_ne
2c96 : f003            >        beq skip1772
                       >        trap            ;failed not equal (non zero)
2c98 : 202540          >        jsr report_error
                       >
2c9b :                 >skip1772
                       >
2c9b : 68              >            pla         ;load status
2c9c : 48              >            pha
                       >            cmp_flag zero
2c9d : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c9f : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
2ca1 : 202540          >        jsr report_error
                       >
2ca4 :                 >skip1775
                       >
2ca4 : 28              >            plp         ;restore status
2ca5 : 68              >            pla
                        
2ca6 : 1a                       inc a           ;01
                                tst_as 1,0
2ca7 : 48              >            pha
2ca8 : 08              >            php         ;save flags
2ca9 : c901            >            cmp #1     ;test result
                       >            trap_ne
2cab : f003            >        beq skip1778
                       >        trap            ;failed not equal (non zero)
2cad : 202540          >        jsr report_error
                       >
2cb0 :                 >skip1778
                       >
2cb0 : 68              >            pla         ;load status
2cb1 : 48              >            pha
                       >            cmp_flag 0
2cb2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2cb4 : f003            >        beq skip1781
                       >        trap            ;failed not equal (non zero)
2cb6 : 202540          >        jsr report_error
                       >
2cb9 :                 >skip1781
                       >
2cb9 : 28              >            plp         ;restore status
2cba : 68              >            pla
                        
2cbb : 3a                       dec a           ;00
                                tst_as 0,zero
2cbc : 48              >            pha
2cbd : 08              >            php         ;save flags
2cbe : c900            >            cmp #0     ;test result
                       >            trap_ne
2cc0 : f003            >        beq skip1784
                       >        trap            ;failed not equal (non zero)
2cc2 : 202540          >        jsr report_error
                       >
2cc5 :                 >skip1784
                       >
2cc5 : 68              >            pla         ;load status
2cc6 : 48              >            pha
                       >            cmp_flag zero
2cc7 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2cc9 : f003            >        beq skip1787
                       >        trap            ;failed not equal (non zero)
2ccb : 202540          >        jsr report_error
                       >
2cce :                 >skip1787
                       >
2cce : 28              >            plp         ;restore status
2ccf : 68              >            pla
                        
2cd0 : 3a                       dec a           ;ff
                                tst_as $ff,minus
2cd1 : 48              >            pha
2cd2 : 08              >            php         ;save flags
2cd3 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2cd5 : f003            >        beq skip1790
                       >        trap            ;failed not equal (non zero)
2cd7 : 202540          >        jsr report_error
                       >
2cda :                 >skip1790
                       >
2cda : 68              >            pla         ;load status
2cdb : 48              >            pha
                       >            cmp_flag minus
2cdc : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2cde : f003            >        beq skip1793
                       >        trap            ;failed not equal (non zero)
2ce0 : 202540          >        jsr report_error
                       >
2ce3 :                 >skip1793
                       >
2ce3 : 28              >            plp         ;restore status
2ce4 : 68              >            pla
                        
2ce5 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
2ce7 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
2ce9 : 202540          >        jsr report_error
                       >
2cec :                 >skip1795
                        
2cec : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
2cee : f003            >        beq skip1797
                       >        trap            ;failed not equal (non zero)
2cf0 : 202540          >        jsr report_error
                       >
2cf3 :                 >skip1797
                        
2cf3 : ba                       tsx
2cf4 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2cf6 : f003            >        beq skip1799
                       >        trap            ;failed not equal (non zero)
2cf8 : 202540          >        jsr report_error
                       >
2cfb :                 >skip1799
                        
                                next_test
2cfb : ad0211          >            lda test_case   ;previous test
2cfe : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2d00 : f003            >        beq skip1802
                       >        trap            ;failed not equal (non zero)
2d02 : 202540          >        jsr report_error
                       >
2d05 :                 >skip1802
                       >
000c =                 >test_num = test_num + 1
2d05 : a90c            >            lda #test_num   ;*** next tests' number
2d07 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
2d0a : a299                     ldx #$99    ;protect x & y
2d0c : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
2d0e : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
2d10 : 48              >            pha         ;use stack to load status
2d11 : 28              >            plp
                        
2d12 : b26a                     lda (ind1)
2d14 : 08                       php         ;test stores do not alter flags
2d15 : 49c3                     eor #$c3
2d17 : 28                       plp
2d18 : 9276                     sta (indt)
2d1a : 08                       php         ;flags after load/store sequence
2d1b : 49c3                     eor #$c3
2d1d : c9c3                     cmp #$c3    ;test result
                                trap_ne
2d1f : f003            >        beq skip1806
                       >        trap            ;failed not equal (non zero)
2d21 : 202540          >        jsr report_error
                       >
2d24 :                 >skip1806
                        
2d24 : 68                       pla         ;load status
                                eor_flag 0
2d25 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2d27 : cd1511                   cmp fLDx    ;test flags
                                trap_ne
2d2a : f003            >        beq skip1809
                       >        trap            ;failed not equal (non zero)
2d2c : 202540          >        jsr report_error
                       >
2d2f :                 >skip1809
                        
                                set_stat 0
                       >            load_flag 0
2d2f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d31 : 48              >            pha         ;use stack to load status
2d32 : 28              >            plp
                        
2d33 : b26c                     lda (ind1+2)
2d35 : 08                       php         ;test stores do not alter flags
2d36 : 49c3                     eor #$c3
2d38 : 28                       plp
2d39 : 9278                     sta (indt+2)
2d3b : 08                       php         ;flags after load/store sequence
2d3c : 49c3                     eor #$c3
2d3e : c982                     cmp #$82    ;test result
                                trap_ne
2d40 : f003            >        beq skip1813
                       >        trap            ;failed not equal (non zero)
2d42 : 202540          >        jsr report_error
                       >
2d45 :                 >skip1813
                        
2d45 : 68                       pla         ;load status
                                eor_flag 0
2d46 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2d48 : cd1611                   cmp fLDx+1  ;test flags
                                trap_ne
2d4b : f003            >        beq skip1816
                       >        trap            ;failed not equal (non zero)
2d4d : 202540          >        jsr report_error
                       >
2d50 :                 >skip1816
                        
                                set_stat 0
                       >            load_flag 0
2d50 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d52 : 48              >            pha         ;use stack to load status
2d53 : 28              >            plp
                        
2d54 : b26e                     lda (ind1+4)
2d56 : 08                       php         ;test stores do not alter flags
2d57 : 49c3                     eor #$c3
2d59 : 28                       plp
2d5a : 927a                     sta (indt+4)
2d5c : 08                       php         ;flags after load/store sequence
2d5d : 49c3                     eor #$c3
2d5f : c941                     cmp #$41    ;test result
                                trap_ne
2d61 : f003            >        beq skip1820
                       >        trap            ;failed not equal (non zero)
2d63 : 202540          >        jsr report_error
                       >
2d66 :                 >skip1820
                        
2d66 : 68                       pla         ;load status
                                eor_flag 0
2d67 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2d69 : cd1711                   cmp fLDx+2  ;test flags
                                trap_ne
2d6c : f003            >        beq skip1823
                       >        trap            ;failed not equal (non zero)
2d6e : 202540          >        jsr report_error
                       >
2d71 :                 >skip1823
                        
                                set_stat 0
                       >            load_flag 0
2d71 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d73 : 48              >            pha         ;use stack to load status
2d74 : 28              >            plp
                        
2d75 : b270                     lda (ind1+6)
2d77 : 08                       php         ;test stores do not alter flags
2d78 : 49c3                     eor #$c3
2d7a : 28                       plp
2d7b : 927c                     sta (indt+6)
2d7d : 08                       php         ;flags after load/store sequence
2d7e : 49c3                     eor #$c3
2d80 : c900                     cmp #0      ;test result
                                trap_ne
2d82 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
2d84 : 202540          >        jsr report_error
                       >
2d87 :                 >skip1827
                        
2d87 : 68                       pla         ;load status
                                eor_flag 0
2d88 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2d8a : cd1811                   cmp fLDx+3  ;test flags
                                trap_ne
2d8d : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
2d8f : 202540          >        jsr report_error
                       >
2d92 :                 >skip1830
                        
2d92 : e099                     cpx #$99
                                trap_ne     ;x altered during test
2d94 : f003            >        beq skip1832
                       >        trap            ;failed not equal (non zero)
2d96 : 202540          >        jsr report_error
                       >
2d99 :                 >skip1832
                        
2d99 : c066                     cpy #$66
                                trap_ne     ;y altered during test
2d9b : f003            >        beq skip1834
                       >        trap            ;failed not equal (non zero)
2d9d : 202540          >        jsr report_error
                       >
2da0 :                 >skip1834
                        
                        
2da0 : a003                     ldy #3      ;testing store result
2da2 : a200                     ldx #0
2da4 : b90511           tstai1  lda abst,y
2da7 : 49c3                     eor #$c3
2da9 : d91011                   cmp abs1,y
                                trap_ne     ;store to indirect data
2dac : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
2dae : 202540          >        jsr report_error
                       >
2db1 :                 >skip1836
                        
2db1 : 8a                       txa
2db2 : 990511                   sta abst,y  ;clear                
2db5 : 88                       dey
2db6 : 10ec                     bpl tstai1
                        
2db8 : a299                     ldx #$99    ;protect x & y
2dba : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
2dbc : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
2dbe : 48              >            pha         ;use stack to load status
2dbf : 28              >            plp
                        
2dc0 : b26a                     lda (ind1)
2dc2 : 08                       php         ;test stores do not alter flags
2dc3 : 49c3                     eor #$c3
2dc5 : 28                       plp
2dc6 : 9276                     sta (indt)
2dc8 : 08                       php         ;flags after load/store sequence
2dc9 : 49c3                     eor #$c3
2dcb : c9c3                     cmp #$c3    ;test result
                                trap_ne
2dcd : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
2dcf : 202540          >        jsr report_error
                       >
2dd2 :                 >skip1840
                        
2dd2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2dd3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2dd5 : cd1511                   cmp fLDx    ;test flags
                                trap_ne
2dd8 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
2dda : 202540          >        jsr report_error
                       >
2ddd :                 >skip1843
                        
                                set_stat $ff
                       >            load_flag $ff
2ddd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ddf : 48              >            pha         ;use stack to load status
2de0 : 28              >            plp
                        
2de1 : b26c                     lda (ind1+2)
2de3 : 08                       php         ;test stores do not alter flags
2de4 : 49c3                     eor #$c3
2de6 : 28                       plp
2de7 : 9278                     sta (indt+2)
2de9 : 08                       php         ;flags after load/store sequence
2dea : 49c3                     eor #$c3
2dec : c982                     cmp #$82    ;test result
                                trap_ne
2dee : f003            >        beq skip1847
                       >        trap            ;failed not equal (non zero)
2df0 : 202540          >        jsr report_error
                       >
2df3 :                 >skip1847
                        
2df3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2df4 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2df6 : cd1611                   cmp fLDx+1  ;test flags
                                trap_ne
2df9 : f003            >        beq skip1850
                       >        trap            ;failed not equal (non zero)
2dfb : 202540          >        jsr report_error
                       >
2dfe :                 >skip1850
                        
                                set_stat $ff
                       >            load_flag $ff
2dfe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e00 : 48              >            pha         ;use stack to load status
2e01 : 28              >            plp
                        
2e02 : b26e                     lda (ind1+4)
2e04 : 08                       php         ;test stores do not alter flags
2e05 : 49c3                     eor #$c3
2e07 : 28                       plp
2e08 : 927a                     sta (indt+4)
2e0a : 08                       php         ;flags after load/store sequence
2e0b : 49c3                     eor #$c3
2e0d : c941                     cmp #$41    ;test result
                                trap_ne
2e0f : f003            >        beq skip1854
                       >        trap            ;failed not equal (non zero)
2e11 : 202540          >        jsr report_error
                       >
2e14 :                 >skip1854
                        
2e14 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2e15 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2e17 : cd1711                   cmp fLDx+2  ;test flags
                                trap_ne
2e1a : f003            >        beq skip1857
                       >        trap            ;failed not equal (non zero)
2e1c : 202540          >        jsr report_error
                       >
2e1f :                 >skip1857
                        
                                set_stat $ff
                       >            load_flag $ff
2e1f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e21 : 48              >            pha         ;use stack to load status
2e22 : 28              >            plp
                        
2e23 : b270                     lda (ind1+6)
2e25 : 08                       php         ;test stores do not alter flags
2e26 : 49c3                     eor #$c3
2e28 : 28                       plp
2e29 : 927c                     sta (indt+6)
2e2b : 08                       php         ;flags after load/store sequence
2e2c : 49c3                     eor #$c3
2e2e : c900                     cmp #0      ;test result
                                trap_ne
2e30 : f003            >        beq skip1861
                       >        trap            ;failed not equal (non zero)
2e32 : 202540          >        jsr report_error
                       >
2e35 :                 >skip1861
                        
2e35 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2e36 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2e38 : cd1811                   cmp fLDx+3  ;test flags
                                trap_ne
2e3b : f003            >        beq skip1864
                       >        trap            ;failed not equal (non zero)
2e3d : 202540          >        jsr report_error
                       >
2e40 :                 >skip1864
                        
2e40 : e099                     cpx #$99
                                trap_ne     ;x altered during test
2e42 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
2e44 : 202540          >        jsr report_error
                       >
2e47 :                 >skip1866
                        
2e47 : c066                     cpy #$66
                                trap_ne     ;y altered during test
2e49 : f003            >        beq skip1868
                       >        trap            ;failed not equal (non zero)
2e4b : 202540          >        jsr report_error
                       >
2e4e :                 >skip1868
                        
                        
2e4e : a003                     ldy #3      ;testing store result
2e50 : a200                     ldx #0
2e52 : b90511           tstai2  lda abst,y
2e55 : 49c3                     eor #$c3
2e57 : d91011                   cmp abs1,y
                                trap_ne     ;store to indirect data
2e5a : f003            >        beq skip1870
                       >        trap            ;failed not equal (non zero)
2e5c : 202540          >        jsr report_error
                       >
2e5f :                 >skip1870
                        
2e5f : 8a                       txa
2e60 : 990511                   sta abst,y  ;clear                
2e63 : 88                       dey
2e64 : 10ec                     bpl tstai2
2e66 : ba                       tsx
2e67 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2e69 : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
2e6b : 202540          >        jsr report_error
                       >
2e6e :                 >skip1872
                        
                                next_test
2e6e : ad0211          >            lda test_case   ;previous test
2e71 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2e73 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
2e75 : 202540          >        jsr report_error
                       >
2e78 :                 >skip1875
                       >
000d =                 >test_num = test_num + 1
2e78 : a90d            >            lda #test_num   ;*** next tests' number
2e7a : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
2e7d : a07b                     ldy #123    ;protect y
2e7f : a204                     ldx #4      ;precharge test area
2e81 : a907                     lda #7
2e83 : 9552             tstz1   sta zpt,x
2e85 : 0a                       asl a
2e86 : ca                       dex
2e87 : 10fa                     bpl tstz1
2e89 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
2e8b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e8d : 48              >            pha         ;use stack to load status
2e8e : a955            >            lda #$55     ;precharge accu
2e90 : 28              >            plp
                        
2e91 : 6452                     stz zpt     
2e93 : 6453                     stz zpt+1
2e95 : 6454                     stz zpt+2
2e97 : 6455                     stz zpt+3
2e99 : 6456                     stz zpt+4
                                tst_a $55,$ff
2e9b : 08              >            php         ;save flags
2e9c : c955            >            cmp #$55     ;test result
                       >            trap_ne
2e9e : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
2ea0 : 202540          >        jsr report_error
                       >
2ea3 :                 >skip1880
                       >
2ea3 : 68              >            pla         ;load status
2ea4 : 48              >            pha
                       >            cmp_flag $ff
2ea5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ea7 : f003            >        beq skip1883
                       >        trap            ;failed not equal (non zero)
2ea9 : 202540          >        jsr report_error
                       >
2eac :                 >skip1883
                       >
2eac : 28              >            plp         ;restore status
                        
2ead : b552             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2eaf : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
2eb1 : 202540          >        jsr report_error
                       >
2eb4 :                 >skip1885
                        
2eb4 : ca                       dex
2eb5 : 10f6                     bpl tstz2
2eb7 : a204                     ldx #4      ;precharge test area
2eb9 : a907                     lda #7
2ebb : 9552             tstz3   sta zpt,x
2ebd : 0a                       asl a
2ebe : ca                       dex
2ebf : 10fa                     bpl tstz3
2ec1 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2ec3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ec5 : 48              >            pha         ;use stack to load status
2ec6 : a9aa            >            lda #$aa     ;precharge accu
2ec8 : 28              >            plp
                        
2ec9 : 6452                     stz zpt     
2ecb : 6453                     stz zpt+1
2ecd : 6454                     stz zpt+2
2ecf : 6455                     stz zpt+3
2ed1 : 6456                     stz zpt+4
                                tst_a $aa,0
2ed3 : 08              >            php         ;save flags
2ed4 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2ed6 : f003            >        beq skip1890
                       >        trap            ;failed not equal (non zero)
2ed8 : 202540          >        jsr report_error
                       >
2edb :                 >skip1890
                       >
2edb : 68              >            pla         ;load status
2edc : 48              >            pha
                       >            cmp_flag 0
2edd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2edf : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
2ee1 : 202540          >        jsr report_error
                       >
2ee4 :                 >skip1893
                       >
2ee4 : 28              >            plp         ;restore status
                        
2ee5 : b552             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2ee7 : f003            >        beq skip1895
                       >        trap            ;failed not equal (non zero)
2ee9 : 202540          >        jsr report_error
                       >
2eec :                 >skip1895
                        
2eec : ca                       dex
2eed : 10f6                     bpl tstz4
                                
2eef : a204                     ldx #4      ;precharge test area
2ef1 : a907                     lda #7
2ef3 : 9d0511           tstz5   sta abst,x
2ef6 : 0a                       asl a
2ef7 : ca                       dex
2ef8 : 10f9                     bpl tstz5
2efa : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
2efc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2efe : 48              >            pha         ;use stack to load status
2eff : a955            >            lda #$55     ;precharge accu
2f01 : 28              >            plp
                        
2f02 : 9c0511                   stz abst     
2f05 : 9c0611                   stz abst+1
2f08 : 9c0711                   stz abst+2
2f0b : 9c0811                   stz abst+3
2f0e : 9c0911                   stz abst+4
                                tst_a $55,$ff
2f11 : 08              >            php         ;save flags
2f12 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2f14 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
2f16 : 202540          >        jsr report_error
                       >
2f19 :                 >skip1900
                       >
2f19 : 68              >            pla         ;load status
2f1a : 48              >            pha
                       >            cmp_flag $ff
2f1b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f1d : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
2f1f : 202540          >        jsr report_error
                       >
2f22 :                 >skip1903
                       >
2f22 : 28              >            plp         ;restore status
                        
2f23 : bd0511           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2f26 : f003            >        beq skip1905
                       >        trap            ;failed not equal (non zero)
2f28 : 202540          >        jsr report_error
                       >
2f2b :                 >skip1905
                        
2f2b : ca                       dex
2f2c : 10f5                     bpl tstz6
2f2e : a204                     ldx #4      ;precharge test area
2f30 : a907                     lda #7
2f32 : 9d0511           tstz7   sta abst,x
2f35 : 0a                       asl a
2f36 : ca                       dex
2f37 : 10f9                     bpl tstz7
2f39 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2f3b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f3d : 48              >            pha         ;use stack to load status
2f3e : a9aa            >            lda #$aa     ;precharge accu
2f40 : 28              >            plp
                        
2f41 : 9c0511                   stz abst     
2f44 : 9c0611                   stz abst+1
2f47 : 9c0711                   stz abst+2
2f4a : 9c0811                   stz abst+3
2f4d : 9c0911                   stz abst+4
                                tst_a $aa,0
2f50 : 08              >            php         ;save flags
2f51 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2f53 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
2f55 : 202540          >        jsr report_error
                       >
2f58 :                 >skip1910
                       >
2f58 : 68              >            pla         ;load status
2f59 : 48              >            pha
                       >            cmp_flag 0
2f5a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f5c : f003            >        beq skip1913
                       >        trap            ;failed not equal (non zero)
2f5e : 202540          >        jsr report_error
                       >
2f61 :                 >skip1913
                       >
2f61 : 28              >            plp         ;restore status
                        
2f62 : bd0511           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2f65 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
2f67 : 202540          >        jsr report_error
                       >
2f6a :                 >skip1915
                        
2f6a : ca                       dex
2f6b : 10f5                     bpl tstz8
                                
2f6d : a204                     ldx #4      ;precharge test area
2f6f : a907                     lda #7
2f71 : 9552             tstz11  sta zpt,x
2f73 : 0a                       asl a
2f74 : ca                       dex
2f75 : 10fa                     bpl tstz11
2f77 : a204                     ldx #4
2f79 :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
2f79 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f7b : 48              >            pha         ;use stack to load status
2f7c : a955            >            lda #$55     ;precharge accu
2f7e : 28              >            plp
                        
2f7f : 7452                     stz zpt,x     
                                tst_a $55,$ff
2f81 : 08              >            php         ;save flags
2f82 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2f84 : f003            >        beq skip1920
                       >        trap            ;failed not equal (non zero)
2f86 : 202540          >        jsr report_error
                       >
2f89 :                 >skip1920
                       >
2f89 : 68              >            pla         ;load status
2f8a : 48              >            pha
                       >            cmp_flag $ff
2f8b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f8d : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
2f8f : 202540          >        jsr report_error
                       >
2f92 :                 >skip1923
                       >
2f92 : 28              >            plp         ;restore status
                        
2f93 : ca                       dex
2f94 : 10e3                     bpl tstz15
2f96 : a204                     ldx #4
2f98 : b552             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2f9a : f003            >        beq skip1925
                       >        trap            ;failed not equal (non zero)
2f9c : 202540          >        jsr report_error
                       >
2f9f :                 >skip1925
                        
2f9f : ca                       dex
2fa0 : 10f6                     bpl tstz12
2fa2 : a204                     ldx #4      ;precharge test area
2fa4 : a907                     lda #7
2fa6 : 9552             tstz13  sta zpt,x
2fa8 : 0a                       asl a
2fa9 : ca                       dex
2faa : 10fa                     bpl tstz13
2fac : a204                     ldx #4
2fae :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
2fae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2fb0 : 48              >            pha         ;use stack to load status
2fb1 : a9aa            >            lda #$aa     ;precharge accu
2fb3 : 28              >            plp
                        
2fb4 : 7452                     stz zpt,x
                                tst_a $aa,0
2fb6 : 08              >            php         ;save flags
2fb7 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2fb9 : f003            >        beq skip1930
                       >        trap            ;failed not equal (non zero)
2fbb : 202540          >        jsr report_error
                       >
2fbe :                 >skip1930
                       >
2fbe : 68              >            pla         ;load status
2fbf : 48              >            pha
                       >            cmp_flag 0
2fc0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fc2 : f003            >        beq skip1933
                       >        trap            ;failed not equal (non zero)
2fc4 : 202540          >        jsr report_error
                       >
2fc7 :                 >skip1933
                       >
2fc7 : 28              >            plp         ;restore status
                        
2fc8 : ca                       dex
2fc9 : 10e3                     bpl tstz16
2fcb : a204                     ldx #4
2fcd : b552             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2fcf : f003            >        beq skip1935
                       >        trap            ;failed not equal (non zero)
2fd1 : 202540          >        jsr report_error
                       >
2fd4 :                 >skip1935
                        
2fd4 : ca                       dex
2fd5 : 10f6                     bpl tstz14
                                
2fd7 : a204                     ldx #4      ;precharge test area
2fd9 : a907                     lda #7
2fdb : 9d0511           tstz21  sta abst,x
2fde : 0a                       asl a
2fdf : ca                       dex
2fe0 : 10f9                     bpl tstz21
2fe2 : a204                     ldx #4
2fe4 :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
2fe4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fe6 : 48              >            pha         ;use stack to load status
2fe7 : a955            >            lda #$55     ;precharge accu
2fe9 : 28              >            plp
                        
2fea : 9e0511                   stz abst,x     
                                tst_a $55,$ff
2fed : 08              >            php         ;save flags
2fee : c955            >            cmp #$55     ;test result
                       >            trap_ne
2ff0 : f003            >        beq skip1940
                       >        trap            ;failed not equal (non zero)
2ff2 : 202540          >        jsr report_error
                       >
2ff5 :                 >skip1940
                       >
2ff5 : 68              >            pla         ;load status
2ff6 : 48              >            pha
                       >            cmp_flag $ff
2ff7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ff9 : f003            >        beq skip1943
                       >        trap            ;failed not equal (non zero)
2ffb : 202540          >        jsr report_error
                       >
2ffe :                 >skip1943
                       >
2ffe : 28              >            plp         ;restore status
                        
2fff : ca                       dex
3000 : 10e2                     bpl tstz25
3002 : a204                     ldx #4
3004 : bd0511           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3007 : f003            >        beq skip1945
                       >        trap            ;failed not equal (non zero)
3009 : 202540          >        jsr report_error
                       >
300c :                 >skip1945
                        
300c : ca                       dex
300d : 10f5                     bpl tstz22
300f : a204                     ldx #4      ;precharge test area
3011 : a907                     lda #7
3013 : 9d0511           tstz23  sta abst,x
3016 : 0a                       asl a
3017 : ca                       dex
3018 : 10f9                     bpl tstz23
301a : a204                     ldx #4
301c :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
301c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
301e : 48              >            pha         ;use stack to load status
301f : a9aa            >            lda #$aa     ;precharge accu
3021 : 28              >            plp
                        
3022 : 9e0511                   stz abst,x
                                tst_a $aa,0
3025 : 08              >            php         ;save flags
3026 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
3028 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
302a : 202540          >        jsr report_error
                       >
302d :                 >skip1950
                       >
302d : 68              >            pla         ;load status
302e : 48              >            pha
                       >            cmp_flag 0
302f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3031 : f003            >        beq skip1953
                       >        trap            ;failed not equal (non zero)
3033 : 202540          >        jsr report_error
                       >
3036 :                 >skip1953
                       >
3036 : 28              >            plp         ;restore status
                        
3037 : ca                       dex
3038 : 10e2                     bpl tstz26
303a : a204                     ldx #4
303c : bd0511           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
303f : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
3041 : 202540          >        jsr report_error
                       >
3044 :                 >skip1955
                        
3044 : ca                       dex
3045 : 10f5                     bpl tstz24
                                
3047 : c07b                     cpy #123
                                trap_ne     ;y altered during test 
3049 : f003            >        beq skip1957
                       >        trap            ;failed not equal (non zero)
304b : 202540          >        jsr report_error
                       >
304e :                 >skip1957
                        
304e : ba                       tsx
304f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3051 : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
3053 : 202540          >        jsr report_error
                       >
3056 :                 >skip1959
                        
                                next_test
3056 : ad0211          >            lda test_case   ;previous test
3059 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
305b : f003            >        beq skip1962
                       >        trap            ;failed not equal (non zero)
305d : 202540          >        jsr report_error
                       >
3060 :                 >skip1962
                       >
000e =                 >test_num = test_num + 1
3060 : a90e            >            lda #test_num   ;*** next tests' number
3062 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
3065 : a042                     ldy #$42
3067 : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
3069 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
306b : 48              >            pha         ;use stack to load status
306c : a9ff            >            lda #$ff     ;precharge accu
306e : 28              >            plp
                        
306f : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
3071 : 08              >            php         ;save flags
3072 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3074 : f003            >        beq skip1967
                       >        trap            ;failed not equal (non zero)
3076 : 202540          >        jsr report_error
                       >
3079 :                 >skip1967
                       >
3079 : 68              >            pla         ;load status
307a : 48              >            pha
                       >            cmp_flag fz 
307b : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
307d : f003            >        beq skip1970
                       >        trap            ;failed not equal (non zero)
307f : 202540          >        jsr report_error
                       >
3082 :                 >skip1970
                       >
3082 : 28              >            plp         ;restore status
                        
3083 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3084 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3086 : 48              >            pha         ;use stack to load status
3087 : a901            >            lda #1     ;precharge accu
3089 : 28              >            plp
                        
308a : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
308c : 08              >            php         ;save flags
308d : c901            >            cmp #1     ;test result
                       >            trap_ne
308f : f003            >        beq skip1975
                       >        trap            ;failed not equal (non zero)
3091 : 202540          >        jsr report_error
                       >
3094 :                 >skip1975
                       >
3094 : 68              >            pla         ;load status
3095 : 48              >            pha
                       >            cmp_flag fv
3096 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3098 : f003            >        beq skip1978
                       >        trap            ;failed not equal (non zero)
309a : 202540          >        jsr report_error
                       >
309d :                 >skip1978
                       >
309d : 28              >            plp         ;restore status
                        
309e : ca                       dex
                                set_a 1,0
                       >            load_flag 0
309f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30a1 : 48              >            pha         ;use stack to load status
30a2 : a901            >            lda #1     ;precharge accu
30a4 : 28              >            plp
                        
30a5 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
30a7 : 08              >            php         ;save flags
30a8 : c901            >            cmp #1     ;test result
                       >            trap_ne
30aa : f003            >        beq skip1983
                       >        trap            ;failed not equal (non zero)
30ac : 202540          >        jsr report_error
                       >
30af :                 >skip1983
                       >
30af : 68              >            pla         ;load status
30b0 : 48              >            pha
                       >            cmp_flag fnz
30b1 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30b3 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
30b5 : 202540          >        jsr report_error
                       >
30b8 :                 >skip1986
                       >
30b8 : 28              >            plp         ;restore status
                        
30b9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
30ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30bc : 48              >            pha         ;use stack to load status
30bd : a901            >            lda #1     ;precharge accu
30bf : 28              >            plp
                        
30c0 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
30c2 : 08              >            php         ;save flags
30c3 : c901            >            cmp #1     ;test result
                       >            trap_ne
30c5 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
30c7 : 202540          >        jsr report_error
                       >
30ca :                 >skip1991
                       >
30ca : 68              >            pla         ;load status
30cb : 48              >            pha
                       >            cmp_flag fnv
30cc : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30ce : f003            >        beq skip1994
                       >        trap            ;failed not equal (non zero)
30d0 : 202540          >        jsr report_error
                       >
30d3 :                 >skip1994
                       >
30d3 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
30d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30d6 : 48              >            pha         ;use stack to load status
30d7 : a901            >            lda #1     ;precharge accu
30d9 : 28              >            plp
                        
30da : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
30dc : 08              >            php         ;save flags
30dd : c901            >            cmp #1     ;test result
                       >            trap_ne
30df : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
30e1 : 202540          >        jsr report_error
                       >
30e4 :                 >skip1999
                       >
30e4 : 68              >            pla         ;load status
30e5 : 48              >            pha
                       >            cmp_flag ~fz
30e6 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30e8 : f003            >        beq skip2002
                       >        trap            ;failed not equal (non zero)
30ea : 202540          >        jsr report_error
                       >
30ed :                 >skip2002
                       >
30ed : 28              >            plp         ;restore status
                        
30ee : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
30ef : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30f1 : 48              >            pha         ;use stack to load status
30f2 : a901            >            lda #1     ;precharge accu
30f4 : 28              >            plp
                        
30f5 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
30f7 : 08              >            php         ;save flags
30f8 : c901            >            cmp #1     ;test result
                       >            trap_ne
30fa : f003            >        beq skip2007
                       >        trap            ;failed not equal (non zero)
30fc : 202540          >        jsr report_error
                       >
30ff :                 >skip2007
                       >
30ff : 68              >            pla         ;load status
3100 : 48              >            pha
                       >            cmp_flag ~fv
3101 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3103 : f003            >        beq skip2010
                       >        trap            ;failed not equal (non zero)
3105 : 202540          >        jsr report_error
                       >
3108 :                 >skip2010
                       >
3108 : 28              >            plp         ;restore status
                        
3109 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
310a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
310c : 48              >            pha         ;use stack to load status
310d : a901            >            lda #1     ;precharge accu
310f : 28              >            plp
                        
3110 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3112 : 08              >            php         ;save flags
3113 : c901            >            cmp #1     ;test result
                       >            trap_ne
3115 : f003            >        beq skip2015
                       >        trap            ;failed not equal (non zero)
3117 : 202540          >        jsr report_error
                       >
311a :                 >skip2015
                       >
311a : 68              >            pla         ;load status
311b : 48              >            pha
                       >            cmp_flag ~fnz
311c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
311e : f003            >        beq skip2018
                       >        trap            ;failed not equal (non zero)
3120 : 202540          >        jsr report_error
                       >
3123 :                 >skip2018
                       >
3123 : 28              >            plp         ;restore status
                        
3124 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
3125 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3127 : 48              >            pha         ;use stack to load status
3128 : a9ff            >            lda #$ff     ;precharge accu
312a : 28              >            plp
                        
312b : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
312d : 08              >            php         ;save flags
312e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3130 : f003            >        beq skip2023
                       >        trap            ;failed not equal (non zero)
3132 : 202540          >        jsr report_error
                       >
3135 :                 >skip2023
                       >
3135 : 68              >            pla         ;load status
3136 : 48              >            pha
                       >            cmp_flag ~fnv 
3137 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3139 : f003            >        beq skip2026
                       >        trap            ;failed not equal (non zero)
313b : 202540          >        jsr report_error
                       >
313e :                 >skip2026
                       >
313e : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
313f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3141 : 48              >            pha         ;use stack to load status
3142 : a9ff            >            lda #$ff     ;precharge accu
3144 : 28              >            plp
                        
3145 : 3c1011                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
3148 : 08              >            php         ;save flags
3149 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
314b : f003            >        beq skip2031
                       >        trap            ;failed not equal (non zero)
314d : 202540          >        jsr report_error
                       >
3150 :                 >skip2031
                       >
3150 : 68              >            pla         ;load status
3151 : 48              >            pha
                       >            cmp_flag fz 
3152 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3154 : f003            >        beq skip2034
                       >        trap            ;failed not equal (non zero)
3156 : 202540          >        jsr report_error
                       >
3159 :                 >skip2034
                       >
3159 : 28              >            plp         ;restore status
                        
315a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
315b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
315d : 48              >            pha         ;use stack to load status
315e : a901            >            lda #1     ;precharge accu
3160 : 28              >            plp
                        
3161 : 3c1011                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
3164 : 08              >            php         ;save flags
3165 : c901            >            cmp #1     ;test result
                       >            trap_ne
3167 : f003            >        beq skip2039
                       >        trap            ;failed not equal (non zero)
3169 : 202540          >        jsr report_error
                       >
316c :                 >skip2039
                       >
316c : 68              >            pla         ;load status
316d : 48              >            pha
                       >            cmp_flag fv
316e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3170 : f003            >        beq skip2042
                       >        trap            ;failed not equal (non zero)
3172 : 202540          >        jsr report_error
                       >
3175 :                 >skip2042
                       >
3175 : 28              >            plp         ;restore status
                        
3176 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3177 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3179 : 48              >            pha         ;use stack to load status
317a : a901            >            lda #1     ;precharge accu
317c : 28              >            plp
                        
317d : 3c1011                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
3180 : 08              >            php         ;save flags
3181 : c901            >            cmp #1     ;test result
                       >            trap_ne
3183 : f003            >        beq skip2047
                       >        trap            ;failed not equal (non zero)
3185 : 202540          >        jsr report_error
                       >
3188 :                 >skip2047
                       >
3188 : 68              >            pla         ;load status
3189 : 48              >            pha
                       >            cmp_flag fnz
318a : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
318c : f003            >        beq skip2050
                       >        trap            ;failed not equal (non zero)
318e : 202540          >        jsr report_error
                       >
3191 :                 >skip2050
                       >
3191 : 28              >            plp         ;restore status
                        
3192 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3193 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3195 : 48              >            pha         ;use stack to load status
3196 : a901            >            lda #1     ;precharge accu
3198 : 28              >            plp
                        
3199 : 3c1011                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
319c : 08              >            php         ;save flags
319d : c901            >            cmp #1     ;test result
                       >            trap_ne
319f : f003            >        beq skip2055
                       >        trap            ;failed not equal (non zero)
31a1 : 202540          >        jsr report_error
                       >
31a4 :                 >skip2055
                       >
31a4 : 68              >            pla         ;load status
31a5 : 48              >            pha
                       >            cmp_flag fnv
31a6 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31a8 : f003            >        beq skip2058
                       >        trap            ;failed not equal (non zero)
31aa : 202540          >        jsr report_error
                       >
31ad :                 >skip2058
                       >
31ad : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
31ae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31b0 : 48              >            pha         ;use stack to load status
31b1 : a901            >            lda #1     ;precharge accu
31b3 : 28              >            plp
                        
31b4 : 3c1011                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
31b7 : 08              >            php         ;save flags
31b8 : c901            >            cmp #1     ;test result
                       >            trap_ne
31ba : f003            >        beq skip2063
                       >        trap            ;failed not equal (non zero)
31bc : 202540          >        jsr report_error
                       >
31bf :                 >skip2063
                       >
31bf : 68              >            pla         ;load status
31c0 : 48              >            pha
                       >            cmp_flag ~fz
31c1 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31c3 : f003            >        beq skip2066
                       >        trap            ;failed not equal (non zero)
31c5 : 202540          >        jsr report_error
                       >
31c8 :                 >skip2066
                       >
31c8 : 28              >            plp         ;restore status
                        
31c9 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
31ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31cc : 48              >            pha         ;use stack to load status
31cd : a901            >            lda #1     ;precharge accu
31cf : 28              >            plp
                        
31d0 : 3c1011                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
31d3 : 08              >            php         ;save flags
31d4 : c901            >            cmp #1     ;test result
                       >            trap_ne
31d6 : f003            >        beq skip2071
                       >        trap            ;failed not equal (non zero)
31d8 : 202540          >        jsr report_error
                       >
31db :                 >skip2071
                       >
31db : 68              >            pla         ;load status
31dc : 48              >            pha
                       >            cmp_flag ~fv
31dd : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31df : f003            >        beq skip2074
                       >        trap            ;failed not equal (non zero)
31e1 : 202540          >        jsr report_error
                       >
31e4 :                 >skip2074
                       >
31e4 : 28              >            plp         ;restore status
                        
31e5 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
31e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31e8 : 48              >            pha         ;use stack to load status
31e9 : a901            >            lda #1     ;precharge accu
31eb : 28              >            plp
                        
31ec : 3c1011                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
31ef : 08              >            php         ;save flags
31f0 : c901            >            cmp #1     ;test result
                       >            trap_ne
31f2 : f003            >        beq skip2079
                       >        trap            ;failed not equal (non zero)
31f4 : 202540          >        jsr report_error
                       >
31f7 :                 >skip2079
                       >
31f7 : 68              >            pla         ;load status
31f8 : 48              >            pha
                       >            cmp_flag ~fnz
31f9 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31fb : f003            >        beq skip2082
                       >        trap            ;failed not equal (non zero)
31fd : 202540          >        jsr report_error
                       >
3200 :                 >skip2082
                       >
3200 : 28              >            plp         ;restore status
                        
3201 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
3202 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3204 : 48              >            pha         ;use stack to load status
3205 : a9ff            >            lda #$ff     ;precharge accu
3207 : 28              >            plp
                        
3208 : 3c1011                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
320b : 08              >            php         ;save flags
320c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
320e : f003            >        beq skip2087
                       >        trap            ;failed not equal (non zero)
3210 : 202540          >        jsr report_error
                       >
3213 :                 >skip2087
                       >
3213 : 68              >            pla         ;load status
3214 : 48              >            pha
                       >            cmp_flag ~fnv 
3215 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3217 : f003            >        beq skip2090
                       >        trap            ;failed not equal (non zero)
3219 : 202540          >        jsr report_error
                       >
321c :                 >skip2090
                       >
321c : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
321d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
321f : 48              >            pha         ;use stack to load status
3220 : a9ff            >            lda #$ff     ;precharge accu
3222 : 28              >            plp
                        
3223 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
3225 : 08              >            php         ;save flags
3226 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3228 : f003            >        beq skip2095
                       >        trap            ;failed not equal (non zero)
322a : 202540          >        jsr report_error
                       >
322d :                 >skip2095
                       >
322d : 68              >            pla         ;load status
322e : 48              >            pha
                       >            cmp_flag fz 
322f : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3231 : f003            >        beq skip2098
                       >        trap            ;failed not equal (non zero)
3233 : 202540          >        jsr report_error
                       >
3236 :                 >skip2098
                       >
3236 : 28              >            plp         ;restore status
                        
3237 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3238 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
323a : 48              >            pha         ;use stack to load status
323b : a901            >            lda #1     ;precharge accu
323d : 28              >            plp
                        
323e : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
3240 : 08              >            php         ;save flags
3241 : c901            >            cmp #1     ;test result
                       >            trap_ne
3243 : f003            >        beq skip2103
                       >        trap            ;failed not equal (non zero)
3245 : 202540          >        jsr report_error
                       >
3248 :                 >skip2103
                       >
3248 : 68              >            pla         ;load status
3249 : 48              >            pha
                       >            cmp_flag 0
324a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
324c : f003            >        beq skip2106
                       >        trap            ;failed not equal (non zero)
324e : 202540          >        jsr report_error
                       >
3251 :                 >skip2106
                       >
3251 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
3252 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3253 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3255 : 48              >            pha         ;use stack to load status
3256 : a901            >            lda #1     ;precharge accu
3258 : 28              >            plp
                        
3259 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
325b : 08              >            php         ;save flags
325c : c901            >            cmp #1     ;test result
                       >            trap_ne
325e : f003            >        beq skip2111
                       >        trap            ;failed not equal (non zero)
3260 : 202540          >        jsr report_error
                       >
3263 :                 >skip2111
                       >
3263 : 68              >            pla         ;load status
3264 : 48              >            pha
                       >            cmp_flag fz
3265 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3267 : f003            >        beq skip2114
                       >        trap            ;failed not equal (non zero)
3269 : 202540          >        jsr report_error
                       >
326c :                 >skip2114
                       >
326c : 28              >            plp         ;restore status
                        
326d : ca                       dex
                                set_a 1,0
                       >            load_flag 0
326e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3270 : 48              >            pha         ;use stack to load status
3271 : a901            >            lda #1     ;precharge accu
3273 : 28              >            plp
                        
3274 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
3276 : 08              >            php         ;save flags
3277 : c901            >            cmp #1     ;test result
                       >            trap_ne
3279 : f003            >        beq skip2119
                       >        trap            ;failed not equal (non zero)
327b : 202540          >        jsr report_error
                       >
327e :                 >skip2119
                       >
327e : 68              >            pla         ;load status
327f : 48              >            pha
                       >            cmp_flag 0
3280 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3282 : f003            >        beq skip2122
                       >        trap            ;failed not equal (non zero)
3284 : 202540          >        jsr report_error
                       >
3287 :                 >skip2122
                       >
3287 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
3288 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
328a : 48              >            pha         ;use stack to load status
328b : a901            >            lda #1     ;precharge accu
328d : 28              >            plp
                        
328e : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
3290 : 08              >            php         ;save flags
3291 : c901            >            cmp #1     ;test result
                       >            trap_ne
3293 : f003            >        beq skip2127
                       >        trap            ;failed not equal (non zero)
3295 : 202540          >        jsr report_error
                       >
3298 :                 >skip2127
                       >
3298 : 68              >            pla         ;load status
3299 : 48              >            pha
                       >            cmp_flag ~fz
329a : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
329c : f003            >        beq skip2130
                       >        trap            ;failed not equal (non zero)
329e : 202540          >        jsr report_error
                       >
32a1 :                 >skip2130
                       >
32a1 : 28              >            plp         ;restore status
                        
32a2 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
32a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32a5 : 48              >            pha         ;use stack to load status
32a6 : a901            >            lda #1     ;precharge accu
32a8 : 28              >            plp
                        
32a9 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
32ab : 08              >            php         ;save flags
32ac : c901            >            cmp #1     ;test result
                       >            trap_ne
32ae : f003            >        beq skip2135
                       >        trap            ;failed not equal (non zero)
32b0 : 202540          >        jsr report_error
                       >
32b3 :                 >skip2135
                       >
32b3 : 68              >            pla         ;load status
32b4 : 48              >            pha
                       >            cmp_flag $ff
32b5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32b7 : f003            >        beq skip2138
                       >        trap            ;failed not equal (non zero)
32b9 : 202540          >        jsr report_error
                       >
32bc :                 >skip2138
                       >
32bc : 28              >            plp         ;restore status
                        
32bd : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
32be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32c0 : 48              >            pha         ;use stack to load status
32c1 : a901            >            lda #1     ;precharge accu
32c3 : 28              >            plp
                        
32c4 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
32c6 : 08              >            php         ;save flags
32c7 : c901            >            cmp #1     ;test result
                       >            trap_ne
32c9 : f003            >        beq skip2143
                       >        trap            ;failed not equal (non zero)
32cb : 202540          >        jsr report_error
                       >
32ce :                 >skip2143
                       >
32ce : 68              >            pla         ;load status
32cf : 48              >            pha
                       >            cmp_flag ~fz
32d0 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32d2 : f003            >        beq skip2146
                       >        trap            ;failed not equal (non zero)
32d4 : 202540          >        jsr report_error
                       >
32d7 :                 >skip2146
                       >
32d7 : 28              >            plp         ;restore status
                        
32d8 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
32d9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32db : 48              >            pha         ;use stack to load status
32dc : a9ff            >            lda #$ff     ;precharge accu
32de : 28              >            plp
                        
32df : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
32e1 : 08              >            php         ;save flags
32e2 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
32e4 : f003            >        beq skip2151
                       >        trap            ;failed not equal (non zero)
32e6 : 202540          >        jsr report_error
                       >
32e9 :                 >skip2151
                       >
32e9 : 68              >            pla         ;load status
32ea : 48              >            pha
                       >            cmp_flag $ff
32eb : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32ed : f003            >        beq skip2154
                       >        trap            ;failed not equal (non zero)
32ef : 202540          >        jsr report_error
                       >
32f2 :                 >skip2154
                       >
32f2 : 28              >            plp         ;restore status
                        
                                
32f3 : e003                     cpx #3
                                trap_ne     ;x altered during test
32f5 : f003            >        beq skip2156
                       >        trap            ;failed not equal (non zero)
32f7 : 202540          >        jsr report_error
                       >
32fa :                 >skip2156
                        
32fa : c042                     cpy #$42
                                trap_ne     ;y altered during test 
32fc : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
32fe : 202540          >        jsr report_error
                       >
3301 :                 >skip2158
                        
3301 : ba                       tsx
3302 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3304 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
3306 : 202540          >        jsr report_error
                       >
3309 :                 >skip2160
                        
                                next_test
3309 : ad0211          >            lda test_case   ;previous test
330c : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
330e : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
3310 : 202540          >        jsr report_error
                       >
3313 :                 >skip2163
                       >
000f =                 >test_num = test_num + 1
3313 : a90f            >            lda #test_num   ;*** next tests' number
3315 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
3318 : a2c0                     ldx #$c0
331a : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
331c : 6453                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
331e : 98               tbt1    tya
331f : 2553                     and zpt+1   ;set Z by anding the 2 operands
3321 : 08                       php
3322 : 68                       pla
3323 : 2902                     and #fz     ;mask Z
3325 : 8554                     sta zpt+2
3327 : 98                       tya         ;reset op1 bits by op2
3328 : 49ff                     eor #$ff
332a : 0553                     ora zpt+1
332c : 49ff                     eor #$ff
332e : 8555                     sta zpt+3
3330 : 98                       tya         ;set op1 bits by op2
3331 : 0553                     ora zpt+1
3333 : 8556                     sta zpt+4
                        
                                trbt zpt,$ff
3335 : 8452            >        sty zpt
                       >        load_flag $ff
3337 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3339 : 48              >        pha
333a : a553            >        lda zpt+1
333c : 28              >        plp
333d : 1452            >        trb zpt
333f : 08              >        php
3340 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3342 : f003            >        beq skip2167
                       >        trap            ;failed not equal (non zero)
3344 : 202540          >        jsr report_error
                       >
3347 :                 >skip2167
                       >
3347 : 68              >        pla
3348 : 48              >        pha
3349 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
334b : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
334d : f003            >        beq skip2170
                       >        trap            ;failed not equal (non zero)
334f : 202540          >        jsr report_error
                       >
3352 :                 >skip2170
                       >
3352 : 68              >        pla
3353 : 2902            >        and #fz
3355 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3357 : f003            >        beq skip2172
                       >        trap            ;failed not equal (non zero)
3359 : 202540          >        jsr report_error
                       >
335c :                 >skip2172
                       >
335c : a555            >        lda zpt+3
335e : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3360 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
3362 : 202540          >        jsr report_error
                       >
3365 :                 >skip2174
                       >
                        
                                trbt abst,$ff
3365 : 8c0511          >        sty abst
                       >        load_flag $ff
3368 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
336a : 48              >        pha
336b : a553            >        lda zpt+1
336d : 28              >        plp
336e : 1c0511          >        trb abst
3371 : 08              >        php
3372 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3374 : f003            >        beq skip2178
                       >        trap            ;failed not equal (non zero)
3376 : 202540          >        jsr report_error
                       >
3379 :                 >skip2178
                       >
3379 : 68              >        pla
337a : 48              >        pha
337b : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
337d : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
337f : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
3381 : 202540          >        jsr report_error
                       >
3384 :                 >skip2181
                       >
3384 : 68              >        pla
3385 : 2902            >        and #fz
3387 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3389 : f003            >        beq skip2183
                       >        trap            ;failed not equal (non zero)
338b : 202540          >        jsr report_error
                       >
338e :                 >skip2183
                       >
338e : a555            >        lda zpt+3
3390 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3392 : f003            >        beq skip2185
                       >        trap            ;failed not equal (non zero)
3394 : 202540          >        jsr report_error
                       >
3397 :                 >skip2185
                       >
                        
                                trbt zpt,0
3397 : 8452            >        sty zpt
                       >        load_flag 0
3399 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
339b : 48              >        pha
339c : a553            >        lda zpt+1
339e : 28              >        plp
339f : 1452            >        trb zpt
33a1 : 08              >        php
33a2 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
33a4 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
33a6 : 202540          >        jsr report_error
                       >
33a9 :                 >skip2189
                       >
33a9 : 68              >        pla
33aa : 48              >        pha
33ab : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
33ad : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
33af : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
33b1 : 202540          >        jsr report_error
                       >
33b4 :                 >skip2192
                       >
33b4 : 68              >        pla
33b5 : 2902            >        and #fz
33b7 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
33b9 : f003            >        beq skip2194
                       >        trap            ;failed not equal (non zero)
33bb : 202540          >        jsr report_error
                       >
33be :                 >skip2194
                       >
33be : a555            >        lda zpt+3
33c0 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
33c2 : f003            >        beq skip2196
                       >        trap            ;failed not equal (non zero)
33c4 : 202540          >        jsr report_error
                       >
33c7 :                 >skip2196
                       >
                        
                                trbt abst,0
33c7 : 8c0511          >        sty abst
                       >        load_flag 0
33ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33cc : 48              >        pha
33cd : a553            >        lda zpt+1
33cf : 28              >        plp
33d0 : 1c0511          >        trb abst
33d3 : 08              >        php
33d4 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
33d6 : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
33d8 : 202540          >        jsr report_error
                       >
33db :                 >skip2200
                       >
33db : 68              >        pla
33dc : 48              >        pha
33dd : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
33df : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
33e1 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
33e3 : 202540          >        jsr report_error
                       >
33e6 :                 >skip2203
                       >
33e6 : 68              >        pla
33e7 : 2902            >        and #fz
33e9 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
33eb : f003            >        beq skip2205
                       >        trap            ;failed not equal (non zero)
33ed : 202540          >        jsr report_error
                       >
33f0 :                 >skip2205
                       >
33f0 : a555            >        lda zpt+3
33f2 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
33f4 : f003            >        beq skip2207
                       >        trap            ;failed not equal (non zero)
33f6 : 202540          >        jsr report_error
                       >
33f9 :                 >skip2207
                       >
                        
                                tsbt zpt,$ff
33f9 : 8452            >        sty zpt
                       >        load_flag $ff
33fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33fd : 48              >        pha
33fe : a553            >        lda zpt+1
3400 : 28              >        plp
3401 : 0452            >        tsb zpt
3403 : 08              >        php
3404 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3406 : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
3408 : 202540          >        jsr report_error
                       >
340b :                 >skip2211
                       >
340b : 68              >        pla
340c : 48              >        pha
340d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
340f : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3411 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
3413 : 202540          >        jsr report_error
                       >
3416 :                 >skip2214
                       >
3416 : 68              >        pla
3417 : 2902            >        and #fz
3419 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
341b : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
341d : 202540          >        jsr report_error
                       >
3420 :                 >skip2216
                       >
3420 : a556            >        lda zpt+4
3422 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3424 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
3426 : 202540          >        jsr report_error
                       >
3429 :                 >skip2218
                       >
                        
                                tsbt abst,$ff
3429 : 8c0511          >        sty abst
                       >        load_flag $ff
342c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
342e : 48              >        pha
342f : a553            >        lda zpt+1
3431 : 28              >        plp
3432 : 0c0511          >        tsb abst
3435 : 08              >        php
3436 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3438 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
343a : 202540          >        jsr report_error
                       >
343d :                 >skip2222
                       >
343d : 68              >        pla
343e : 48              >        pha
343f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3441 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3443 : f003            >        beq skip2225
                       >        trap            ;failed not equal (non zero)
3445 : 202540          >        jsr report_error
                       >
3448 :                 >skip2225
                       >
3448 : 68              >        pla
3449 : 2902            >        and #fz
344b : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
344d : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
344f : 202540          >        jsr report_error
                       >
3452 :                 >skip2227
                       >
3452 : a556            >        lda zpt+4
3454 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3456 : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
3458 : 202540          >        jsr report_error
                       >
345b :                 >skip2229
                       >
                        
                                tsbt zpt,0
345b : 8452            >        sty zpt
                       >        load_flag 0
345d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
345f : 48              >        pha
3460 : a553            >        lda zpt+1
3462 : 28              >        plp
3463 : 0452            >        tsb zpt
3465 : 08              >        php
3466 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3468 : f003            >        beq skip2233
                       >        trap            ;failed not equal (non zero)
346a : 202540          >        jsr report_error
                       >
346d :                 >skip2233
                       >
346d : 68              >        pla
346e : 48              >        pha
346f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3471 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3473 : f003            >        beq skip2236
                       >        trap            ;failed not equal (non zero)
3475 : 202540          >        jsr report_error
                       >
3478 :                 >skip2236
                       >
3478 : 68              >        pla
3479 : 2902            >        and #fz
347b : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
347d : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
347f : 202540          >        jsr report_error
                       >
3482 :                 >skip2238
                       >
3482 : a556            >        lda zpt+4
3484 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3486 : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
3488 : 202540          >        jsr report_error
                       >
348b :                 >skip2240
                       >
                        
                                tsbt abst,0
348b : 8c0511          >        sty abst
                       >        load_flag 0
348e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3490 : 48              >        pha
3491 : a553            >        lda zpt+1
3493 : 28              >        plp
3494 : 0c0511          >        tsb abst
3497 : 08              >        php
3498 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
349a : f003            >        beq skip2244
                       >        trap            ;failed not equal (non zero)
349c : 202540          >        jsr report_error
                       >
349f :                 >skip2244
                       >
349f : 68              >        pla
34a0 : 48              >        pha
34a1 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
34a3 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
34a5 : f003            >        beq skip2247
                       >        trap            ;failed not equal (non zero)
34a7 : 202540          >        jsr report_error
                       >
34aa :                 >skip2247
                       >
34aa : 68              >        pla
34ab : 2902            >        and #fz
34ad : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
34af : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
34b1 : 202540          >        jsr report_error
                       >
34b4 :                 >skip2249
                       >
34b4 : a556            >        lda zpt+4
34b6 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
34b8 : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
34ba : 202540          >        jsr report_error
                       >
34bd :                 >skip2251
                       >
                        
                                
34bd : c8                       iny         ;iterate op1
34be : d004                     bne tbt3
34c0 : e653                     inc zpt+1   ;iterate op2
34c2 : f003                     beq tbt2
34c4 : 4c1e33           tbt3    jmp tbt1        
34c7 :                  tbt2
34c7 : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
34c9 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
34cb : 202540          >        jsr report_error
                       >
34ce :                 >skip2253
                        
34ce : ba                       tsx
34cf : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
34d1 : f003            >        beq skip2255
                       >        trap            ;failed not equal (non zero)
34d3 : 202540          >        jsr report_error
                       >
34d6 :                 >skip2255
                        
                                next_test    
34d6 : ad0211          >            lda test_case   ;previous test
34d9 : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
34db : f003            >        beq skip2258
                       >        trap            ;failed not equal (non zero)
34dd : 202540          >        jsr report_error
                       >
34e0 :                 >skip2258
                       >
0010 =                 >test_num = test_num + 1
34e0 : a910            >            lda #test_num   ;*** next tests' number
34e2 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
34e5 : a2ba                     ldx #$ba    ;protect x & y
34e7 : a0d0                     ldy #$d0
                                rmbt 0
34e9 : a9ff            >        lda #$ff
34eb : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
34ed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34ef : 48              >            pha         ;use stack to load status
34f0 : a9a5            >            lda #$a5     ;precharge accu
34f2 : 28              >            plp
                       >
34f3 : 0752            >        rmb 0,zpt
                       >        tst_a $a5,0
34f5 : 08              >            php         ;save flags
34f6 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
34f8 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
34fa : 202540          >        jsr report_error
                       >
34fd :                 >skip2264
                       >
34fd : 68              >            pla         ;load status
34fe : 48              >            pha
                       >            cmp_flag 0
34ff : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3501 : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
3503 : 202540          >        jsr report_error
                       >
3506 :                 >skip2267
                       >
3506 : 28              >            plp         ;restore status
                       >
3507 : a552            >        lda zpt
3509 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
350b : f003            >        beq skip2269
                       >        trap            ;failed not equal (non zero)
350d : 202540          >        jsr report_error
                       >
3510 :                 >skip2269
                       >
3510 : a901            >        lda #1<<0
3512 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3514 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3516 : 48              >            pha         ;use stack to load status
3517 : a95a            >            lda #$5a     ;precharge accu
3519 : 28              >            plp
                       >
351a : 0752            >        rmb 0,zpt
                       >        tst_a $5a,$ff
351c : 08              >            php         ;save flags
351d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
351f : f003            >        beq skip2274
                       >        trap            ;failed not equal (non zero)
3521 : 202540          >        jsr report_error
                       >
3524 :                 >skip2274
                       >
3524 : 68              >            pla         ;load status
3525 : 48              >            pha
                       >            cmp_flag $ff
3526 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3528 : f003            >        beq skip2277
                       >        trap            ;failed not equal (non zero)
352a : 202540          >        jsr report_error
                       >
352d :                 >skip2277
                       >
352d : 28              >            plp         ;restore status
                       >
352e : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3530 : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
3532 : 202540          >        jsr report_error
                       >
3535 :                 >skip2279
                       >
                        
                                rmbt 1
3535 : a9ff            >        lda #$ff
3537 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3539 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
353b : 48              >            pha         ;use stack to load status
353c : a9a5            >            lda #$a5     ;precharge accu
353e : 28              >            plp
                       >
353f : 1752            >        rmb 1,zpt
                       >        tst_a $a5,0
3541 : 08              >            php         ;save flags
3542 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3544 : f003            >        beq skip2285
                       >        trap            ;failed not equal (non zero)
3546 : 202540          >        jsr report_error
                       >
3549 :                 >skip2285
                       >
3549 : 68              >            pla         ;load status
354a : 48              >            pha
                       >            cmp_flag 0
354b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
354d : f003            >        beq skip2288
                       >        trap            ;failed not equal (non zero)
354f : 202540          >        jsr report_error
                       >
3552 :                 >skip2288
                       >
3552 : 28              >            plp         ;restore status
                       >
3553 : a552            >        lda zpt
3555 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
3557 : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
3559 : 202540          >        jsr report_error
                       >
355c :                 >skip2290
                       >
355c : a902            >        lda #1<<1
355e : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3560 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3562 : 48              >            pha         ;use stack to load status
3563 : a95a            >            lda #$5a     ;precharge accu
3565 : 28              >            plp
                       >
3566 : 1752            >        rmb 1,zpt
                       >        tst_a $5a,$ff
3568 : 08              >            php         ;save flags
3569 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
356b : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
356d : 202540          >        jsr report_error
                       >
3570 :                 >skip2295
                       >
3570 : 68              >            pla         ;load status
3571 : 48              >            pha
                       >            cmp_flag $ff
3572 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3574 : f003            >        beq skip2298
                       >        trap            ;failed not equal (non zero)
3576 : 202540          >        jsr report_error
                       >
3579 :                 >skip2298
                       >
3579 : 28              >            plp         ;restore status
                       >
357a : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
357c : f003            >        beq skip2300
                       >        trap            ;failed not equal (non zero)
357e : 202540          >        jsr report_error
                       >
3581 :                 >skip2300
                       >
                        
                                rmbt 2
3581 : a9ff            >        lda #$ff
3583 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3585 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3587 : 48              >            pha         ;use stack to load status
3588 : a9a5            >            lda #$a5     ;precharge accu
358a : 28              >            plp
                       >
358b : 2752            >        rmb 2,zpt
                       >        tst_a $a5,0
358d : 08              >            php         ;save flags
358e : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3590 : f003            >        beq skip2306
                       >        trap            ;failed not equal (non zero)
3592 : 202540          >        jsr report_error
                       >
3595 :                 >skip2306
                       >
3595 : 68              >            pla         ;load status
3596 : 48              >            pha
                       >            cmp_flag 0
3597 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3599 : f003            >        beq skip2309
                       >        trap            ;failed not equal (non zero)
359b : 202540          >        jsr report_error
                       >
359e :                 >skip2309
                       >
359e : 28              >            plp         ;restore status
                       >
359f : a552            >        lda zpt
35a1 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
35a3 : f003            >        beq skip2311
                       >        trap            ;failed not equal (non zero)
35a5 : 202540          >        jsr report_error
                       >
35a8 :                 >skip2311
                       >
35a8 : a904            >        lda #1<<2
35aa : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
35ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35ae : 48              >            pha         ;use stack to load status
35af : a95a            >            lda #$5a     ;precharge accu
35b1 : 28              >            plp
                       >
35b2 : 2752            >        rmb 2,zpt
                       >        tst_a $5a,$ff
35b4 : 08              >            php         ;save flags
35b5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
35b7 : f003            >        beq skip2316
                       >        trap            ;failed not equal (non zero)
35b9 : 202540          >        jsr report_error
                       >
35bc :                 >skip2316
                       >
35bc : 68              >            pla         ;load status
35bd : 48              >            pha
                       >            cmp_flag $ff
35be : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c0 : f003            >        beq skip2319
                       >        trap            ;failed not equal (non zero)
35c2 : 202540          >        jsr report_error
                       >
35c5 :                 >skip2319
                       >
35c5 : 28              >            plp         ;restore status
                       >
35c6 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
35c8 : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
35ca : 202540          >        jsr report_error
                       >
35cd :                 >skip2321
                       >
                        
                                rmbt 3
35cd : a9ff            >        lda #$ff
35cf : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
35d1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35d3 : 48              >            pha         ;use stack to load status
35d4 : a9a5            >            lda #$a5     ;precharge accu
35d6 : 28              >            plp
                       >
35d7 : 3752            >        rmb 3,zpt
                       >        tst_a $a5,0
35d9 : 08              >            php         ;save flags
35da : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
35dc : f003            >        beq skip2327
                       >        trap            ;failed not equal (non zero)
35de : 202540          >        jsr report_error
                       >
35e1 :                 >skip2327
                       >
35e1 : 68              >            pla         ;load status
35e2 : 48              >            pha
                       >            cmp_flag 0
35e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35e5 : f003            >        beq skip2330
                       >        trap            ;failed not equal (non zero)
35e7 : 202540          >        jsr report_error
                       >
35ea :                 >skip2330
                       >
35ea : 28              >            plp         ;restore status
                       >
35eb : a552            >        lda zpt
35ed : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
35ef : f003            >        beq skip2332
                       >        trap            ;failed not equal (non zero)
35f1 : 202540          >        jsr report_error
                       >
35f4 :                 >skip2332
                       >
35f4 : a908            >        lda #1<<3
35f6 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
35f8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35fa : 48              >            pha         ;use stack to load status
35fb : a95a            >            lda #$5a     ;precharge accu
35fd : 28              >            plp
                       >
35fe : 3752            >        rmb 3,zpt
                       >        tst_a $5a,$ff
3600 : 08              >            php         ;save flags
3601 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3603 : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
3605 : 202540          >        jsr report_error
                       >
3608 :                 >skip2337
                       >
3608 : 68              >            pla         ;load status
3609 : 48              >            pha
                       >            cmp_flag $ff
360a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
360c : f003            >        beq skip2340
                       >        trap            ;failed not equal (non zero)
360e : 202540          >        jsr report_error
                       >
3611 :                 >skip2340
                       >
3611 : 28              >            plp         ;restore status
                       >
3612 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3614 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
3616 : 202540          >        jsr report_error
                       >
3619 :                 >skip2342
                       >
                        
                                rmbt 4
3619 : a9ff            >        lda #$ff
361b : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
361d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
361f : 48              >            pha         ;use stack to load status
3620 : a9a5            >            lda #$a5     ;precharge accu
3622 : 28              >            plp
                       >
3623 : 4752            >        rmb 4,zpt
                       >        tst_a $a5,0
3625 : 08              >            php         ;save flags
3626 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3628 : f003            >        beq skip2348
                       >        trap            ;failed not equal (non zero)
362a : 202540          >        jsr report_error
                       >
362d :                 >skip2348
                       >
362d : 68              >            pla         ;load status
362e : 48              >            pha
                       >            cmp_flag 0
362f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3631 : f003            >        beq skip2351
                       >        trap            ;failed not equal (non zero)
3633 : 202540          >        jsr report_error
                       >
3636 :                 >skip2351
                       >
3636 : 28              >            plp         ;restore status
                       >
3637 : a552            >        lda zpt
3639 : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
363b : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
363d : 202540          >        jsr report_error
                       >
3640 :                 >skip2353
                       >
3640 : a910            >        lda #1<<4
3642 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3644 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3646 : 48              >            pha         ;use stack to load status
3647 : a95a            >            lda #$5a     ;precharge accu
3649 : 28              >            plp
                       >
364a : 4752            >        rmb 4,zpt
                       >        tst_a $5a,$ff
364c : 08              >            php         ;save flags
364d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
364f : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
3651 : 202540          >        jsr report_error
                       >
3654 :                 >skip2358
                       >
3654 : 68              >            pla         ;load status
3655 : 48              >            pha
                       >            cmp_flag $ff
3656 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3658 : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
365a : 202540          >        jsr report_error
                       >
365d :                 >skip2361
                       >
365d : 28              >            plp         ;restore status
                       >
365e : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3660 : f003            >        beq skip2363
                       >        trap            ;failed not equal (non zero)
3662 : 202540          >        jsr report_error
                       >
3665 :                 >skip2363
                       >
                        
                                rmbt 5
3665 : a9ff            >        lda #$ff
3667 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3669 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
366b : 48              >            pha         ;use stack to load status
366c : a9a5            >            lda #$a5     ;precharge accu
366e : 28              >            plp
                       >
366f : 5752            >        rmb 5,zpt
                       >        tst_a $a5,0
3671 : 08              >            php         ;save flags
3672 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3674 : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
3676 : 202540          >        jsr report_error
                       >
3679 :                 >skip2369
                       >
3679 : 68              >            pla         ;load status
367a : 48              >            pha
                       >            cmp_flag 0
367b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
367d : f003            >        beq skip2372
                       >        trap            ;failed not equal (non zero)
367f : 202540          >        jsr report_error
                       >
3682 :                 >skip2372
                       >
3682 : 28              >            plp         ;restore status
                       >
3683 : a552            >        lda zpt
3685 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
3687 : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
3689 : 202540          >        jsr report_error
                       >
368c :                 >skip2374
                       >
368c : a920            >        lda #1<<5
368e : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3690 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3692 : 48              >            pha         ;use stack to load status
3693 : a95a            >            lda #$5a     ;precharge accu
3695 : 28              >            plp
                       >
3696 : 5752            >        rmb 5,zpt
                       >        tst_a $5a,$ff
3698 : 08              >            php         ;save flags
3699 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
369b : f003            >        beq skip2379
                       >        trap            ;failed not equal (non zero)
369d : 202540          >        jsr report_error
                       >
36a0 :                 >skip2379
                       >
36a0 : 68              >            pla         ;load status
36a1 : 48              >            pha
                       >            cmp_flag $ff
36a2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36a4 : f003            >        beq skip2382
                       >        trap            ;failed not equal (non zero)
36a6 : 202540          >        jsr report_error
                       >
36a9 :                 >skip2382
                       >
36a9 : 28              >            plp         ;restore status
                       >
36aa : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
36ac : f003            >        beq skip2384
                       >        trap            ;failed not equal (non zero)
36ae : 202540          >        jsr report_error
                       >
36b1 :                 >skip2384
                       >
                        
                                rmbt 6
36b1 : a9ff            >        lda #$ff
36b3 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
36b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36b7 : 48              >            pha         ;use stack to load status
36b8 : a9a5            >            lda #$a5     ;precharge accu
36ba : 28              >            plp
                       >
36bb : 6752            >        rmb 6,zpt
                       >        tst_a $a5,0
36bd : 08              >            php         ;save flags
36be : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
36c0 : f003            >        beq skip2390
                       >        trap            ;failed not equal (non zero)
36c2 : 202540          >        jsr report_error
                       >
36c5 :                 >skip2390
                       >
36c5 : 68              >            pla         ;load status
36c6 : 48              >            pha
                       >            cmp_flag 0
36c7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36c9 : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
36cb : 202540          >        jsr report_error
                       >
36ce :                 >skip2393
                       >
36ce : 28              >            plp         ;restore status
                       >
36cf : a552            >        lda zpt
36d1 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
36d3 : f003            >        beq skip2395
                       >        trap            ;failed not equal (non zero)
36d5 : 202540          >        jsr report_error
                       >
36d8 :                 >skip2395
                       >
36d8 : a940            >        lda #1<<6
36da : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
36dc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36de : 48              >            pha         ;use stack to load status
36df : a95a            >            lda #$5a     ;precharge accu
36e1 : 28              >            plp
                       >
36e2 : 6752            >        rmb 6,zpt
                       >        tst_a $5a,$ff
36e4 : 08              >            php         ;save flags
36e5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
36e7 : f003            >        beq skip2400
                       >        trap            ;failed not equal (non zero)
36e9 : 202540          >        jsr report_error
                       >
36ec :                 >skip2400
                       >
36ec : 68              >            pla         ;load status
36ed : 48              >            pha
                       >            cmp_flag $ff
36ee : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36f0 : f003            >        beq skip2403
                       >        trap            ;failed not equal (non zero)
36f2 : 202540          >        jsr report_error
                       >
36f5 :                 >skip2403
                       >
36f5 : 28              >            plp         ;restore status
                       >
36f6 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
36f8 : f003            >        beq skip2405
                       >        trap            ;failed not equal (non zero)
36fa : 202540          >        jsr report_error
                       >
36fd :                 >skip2405
                       >
                        
                                rmbt 7
36fd : a9ff            >        lda #$ff
36ff : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3701 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3703 : 48              >            pha         ;use stack to load status
3704 : a9a5            >            lda #$a5     ;precharge accu
3706 : 28              >            plp
                       >
3707 : 7752            >        rmb 7,zpt
                       >        tst_a $a5,0
3709 : 08              >            php         ;save flags
370a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
370c : f003            >        beq skip2411
                       >        trap            ;failed not equal (non zero)
370e : 202540          >        jsr report_error
                       >
3711 :                 >skip2411
                       >
3711 : 68              >            pla         ;load status
3712 : 48              >            pha
                       >            cmp_flag 0
3713 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3715 : f003            >        beq skip2414
                       >        trap            ;failed not equal (non zero)
3717 : 202540          >        jsr report_error
                       >
371a :                 >skip2414
                       >
371a : 28              >            plp         ;restore status
                       >
371b : a552            >        lda zpt
371d : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
371f : f003            >        beq skip2416
                       >        trap            ;failed not equal (non zero)
3721 : 202540          >        jsr report_error
                       >
3724 :                 >skip2416
                       >
3724 : a980            >        lda #1<<7
3726 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3728 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
372a : 48              >            pha         ;use stack to load status
372b : a95a            >            lda #$5a     ;precharge accu
372d : 28              >            plp
                       >
372e : 7752            >        rmb 7,zpt
                       >        tst_a $5a,$ff
3730 : 08              >            php         ;save flags
3731 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3733 : f003            >        beq skip2421
                       >        trap            ;failed not equal (non zero)
3735 : 202540          >        jsr report_error
                       >
3738 :                 >skip2421
                       >
3738 : 68              >            pla         ;load status
3739 : 48              >            pha
                       >            cmp_flag $ff
373a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
373c : f003            >        beq skip2424
                       >        trap            ;failed not equal (non zero)
373e : 202540          >        jsr report_error
                       >
3741 :                 >skip2424
                       >
3741 : 28              >            plp         ;restore status
                       >
3742 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3744 : f003            >        beq skip2426
                       >        trap            ;failed not equal (non zero)
3746 : 202540          >        jsr report_error
                       >
3749 :                 >skip2426
                       >
                        
                                smbt 0
3749 : a9fe            >        lda #$ff-(1<<0)
374b : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
374d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
374f : 48              >            pha         ;use stack to load status
3750 : a9a5            >            lda #$a5     ;precharge accu
3752 : 28              >            plp
                       >
3753 : 8752            >        smb 0,zpt
                       >        tst_a $a5,0
3755 : 08              >            php         ;save flags
3756 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3758 : f003            >        beq skip2432
                       >        trap            ;failed not equal (non zero)
375a : 202540          >        jsr report_error
                       >
375d :                 >skip2432
                       >
375d : 68              >            pla         ;load status
375e : 48              >            pha
                       >            cmp_flag 0
375f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3761 : f003            >        beq skip2435
                       >        trap            ;failed not equal (non zero)
3763 : 202540          >        jsr report_error
                       >
3766 :                 >skip2435
                       >
3766 : 28              >            plp         ;restore status
                       >
3767 : a552            >        lda zpt
3769 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
376b : f003            >        beq skip2437
                       >        trap            ;failed not equal (non zero)
376d : 202540          >        jsr report_error
                       >
3770 :                 >skip2437
                       >
3770 : a900            >        lda #0
3772 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3774 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3776 : 48              >            pha         ;use stack to load status
3777 : a95a            >            lda #$5a     ;precharge accu
3779 : 28              >            plp
                       >
377a : 8752            >        smb 0,zpt
                       >        tst_a $5a,$ff
377c : 08              >            php         ;save flags
377d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
377f : f003            >        beq skip2442
                       >        trap            ;failed not equal (non zero)
3781 : 202540          >        jsr report_error
                       >
3784 :                 >skip2442
                       >
3784 : 68              >            pla         ;load status
3785 : 48              >            pha
                       >            cmp_flag $ff
3786 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3788 : f003            >        beq skip2445
                       >        trap            ;failed not equal (non zero)
378a : 202540          >        jsr report_error
                       >
378d :                 >skip2445
                       >
378d : 28              >            plp         ;restore status
                       >
378e : a552            >        lda zpt
3790 : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
3792 : f003            >        beq skip2447
                       >        trap            ;failed not equal (non zero)
3794 : 202540          >        jsr report_error
                       >
3797 :                 >skip2447
                       >
                        
                                smbt 1
3797 : a9fd            >        lda #$ff-(1<<1)
3799 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
379b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
379d : 48              >            pha         ;use stack to load status
379e : a9a5            >            lda #$a5     ;precharge accu
37a0 : 28              >            plp
                       >
37a1 : 9752            >        smb 1,zpt
                       >        tst_a $a5,0
37a3 : 08              >            php         ;save flags
37a4 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
37a6 : f003            >        beq skip2453
                       >        trap            ;failed not equal (non zero)
37a8 : 202540          >        jsr report_error
                       >
37ab :                 >skip2453
                       >
37ab : 68              >            pla         ;load status
37ac : 48              >            pha
                       >            cmp_flag 0
37ad : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37af : f003            >        beq skip2456
                       >        trap            ;failed not equal (non zero)
37b1 : 202540          >        jsr report_error
                       >
37b4 :                 >skip2456
                       >
37b4 : 28              >            plp         ;restore status
                       >
37b5 : a552            >        lda zpt
37b7 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
37b9 : f003            >        beq skip2458
                       >        trap            ;failed not equal (non zero)
37bb : 202540          >        jsr report_error
                       >
37be :                 >skip2458
                       >
37be : a900            >        lda #0
37c0 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
37c2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37c4 : 48              >            pha         ;use stack to load status
37c5 : a95a            >            lda #$5a     ;precharge accu
37c7 : 28              >            plp
                       >
37c8 : 9752            >        smb 1,zpt
                       >        tst_a $5a,$ff
37ca : 08              >            php         ;save flags
37cb : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
37cd : f003            >        beq skip2463
                       >        trap            ;failed not equal (non zero)
37cf : 202540          >        jsr report_error
                       >
37d2 :                 >skip2463
                       >
37d2 : 68              >            pla         ;load status
37d3 : 48              >            pha
                       >            cmp_flag $ff
37d4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37d6 : f003            >        beq skip2466
                       >        trap            ;failed not equal (non zero)
37d8 : 202540          >        jsr report_error
                       >
37db :                 >skip2466
                       >
37db : 28              >            plp         ;restore status
                       >
37dc : a552            >        lda zpt
37de : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
37e0 : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
37e2 : 202540          >        jsr report_error
                       >
37e5 :                 >skip2468
                       >
                        
                                smbt 2
37e5 : a9fb            >        lda #$ff-(1<<2)
37e7 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
37e9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37eb : 48              >            pha         ;use stack to load status
37ec : a9a5            >            lda #$a5     ;precharge accu
37ee : 28              >            plp
                       >
37ef : a752            >        smb 2,zpt
                       >        tst_a $a5,0
37f1 : 08              >            php         ;save flags
37f2 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
37f4 : f003            >        beq skip2474
                       >        trap            ;failed not equal (non zero)
37f6 : 202540          >        jsr report_error
                       >
37f9 :                 >skip2474
                       >
37f9 : 68              >            pla         ;load status
37fa : 48              >            pha
                       >            cmp_flag 0
37fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37fd : f003            >        beq skip2477
                       >        trap            ;failed not equal (non zero)
37ff : 202540          >        jsr report_error
                       >
3802 :                 >skip2477
                       >
3802 : 28              >            plp         ;restore status
                       >
3803 : a552            >        lda zpt
3805 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3807 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
3809 : 202540          >        jsr report_error
                       >
380c :                 >skip2479
                       >
380c : a900            >        lda #0
380e : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3810 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3812 : 48              >            pha         ;use stack to load status
3813 : a95a            >            lda #$5a     ;precharge accu
3815 : 28              >            plp
                       >
3816 : a752            >        smb 2,zpt
                       >        tst_a $5a,$ff
3818 : 08              >            php         ;save flags
3819 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
381b : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
381d : 202540          >        jsr report_error
                       >
3820 :                 >skip2484
                       >
3820 : 68              >            pla         ;load status
3821 : 48              >            pha
                       >            cmp_flag $ff
3822 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3824 : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
3826 : 202540          >        jsr report_error
                       >
3829 :                 >skip2487
                       >
3829 : 28              >            plp         ;restore status
                       >
382a : a552            >        lda zpt
382c : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
382e : f003            >        beq skip2489
                       >        trap            ;failed not equal (non zero)
3830 : 202540          >        jsr report_error
                       >
3833 :                 >skip2489
                       >
                        
                                smbt 3
3833 : a9f7            >        lda #$ff-(1<<3)
3835 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3837 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3839 : 48              >            pha         ;use stack to load status
383a : a9a5            >            lda #$a5     ;precharge accu
383c : 28              >            plp
                       >
383d : b752            >        smb 3,zpt
                       >        tst_a $a5,0
383f : 08              >            php         ;save flags
3840 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3842 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
3844 : 202540          >        jsr report_error
                       >
3847 :                 >skip2495
                       >
3847 : 68              >            pla         ;load status
3848 : 48              >            pha
                       >            cmp_flag 0
3849 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
384b : f003            >        beq skip2498
                       >        trap            ;failed not equal (non zero)
384d : 202540          >        jsr report_error
                       >
3850 :                 >skip2498
                       >
3850 : 28              >            plp         ;restore status
                       >
3851 : a552            >        lda zpt
3853 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3855 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
3857 : 202540          >        jsr report_error
                       >
385a :                 >skip2500
                       >
385a : a900            >        lda #0
385c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
385e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3860 : 48              >            pha         ;use stack to load status
3861 : a95a            >            lda #$5a     ;precharge accu
3863 : 28              >            plp
                       >
3864 : b752            >        smb 3,zpt
                       >        tst_a $5a,$ff
3866 : 08              >            php         ;save flags
3867 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3869 : f003            >        beq skip2505
                       >        trap            ;failed not equal (non zero)
386b : 202540          >        jsr report_error
                       >
386e :                 >skip2505
                       >
386e : 68              >            pla         ;load status
386f : 48              >            pha
                       >            cmp_flag $ff
3870 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3872 : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
3874 : 202540          >        jsr report_error
                       >
3877 :                 >skip2508
                       >
3877 : 28              >            plp         ;restore status
                       >
3878 : a552            >        lda zpt
387a : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
387c : f003            >        beq skip2510
                       >        trap            ;failed not equal (non zero)
387e : 202540          >        jsr report_error
                       >
3881 :                 >skip2510
                       >
                        
                                smbt 4
3881 : a9ef            >        lda #$ff-(1<<4)
3883 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3885 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3887 : 48              >            pha         ;use stack to load status
3888 : a9a5            >            lda #$a5     ;precharge accu
388a : 28              >            plp
                       >
388b : c752            >        smb 4,zpt
                       >        tst_a $a5,0
388d : 08              >            php         ;save flags
388e : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3890 : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
3892 : 202540          >        jsr report_error
                       >
3895 :                 >skip2516
                       >
3895 : 68              >            pla         ;load status
3896 : 48              >            pha
                       >            cmp_flag 0
3897 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3899 : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
389b : 202540          >        jsr report_error
                       >
389e :                 >skip2519
                       >
389e : 28              >            plp         ;restore status
                       >
389f : a552            >        lda zpt
38a1 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
38a3 : f003            >        beq skip2521
                       >        trap            ;failed not equal (non zero)
38a5 : 202540          >        jsr report_error
                       >
38a8 :                 >skip2521
                       >
38a8 : a900            >        lda #0
38aa : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
38ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38ae : 48              >            pha         ;use stack to load status
38af : a95a            >            lda #$5a     ;precharge accu
38b1 : 28              >            plp
                       >
38b2 : c752            >        smb 4,zpt
                       >        tst_a $5a,$ff
38b4 : 08              >            php         ;save flags
38b5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
38b7 : f003            >        beq skip2526
                       >        trap            ;failed not equal (non zero)
38b9 : 202540          >        jsr report_error
                       >
38bc :                 >skip2526
                       >
38bc : 68              >            pla         ;load status
38bd : 48              >            pha
                       >            cmp_flag $ff
38be : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38c0 : f003            >        beq skip2529
                       >        trap            ;failed not equal (non zero)
38c2 : 202540          >        jsr report_error
                       >
38c5 :                 >skip2529
                       >
38c5 : 28              >            plp         ;restore status
                       >
38c6 : a552            >        lda zpt
38c8 : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
38ca : f003            >        beq skip2531
                       >        trap            ;failed not equal (non zero)
38cc : 202540          >        jsr report_error
                       >
38cf :                 >skip2531
                       >
                        
                                smbt 5
38cf : a9df            >        lda #$ff-(1<<5)
38d1 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
38d3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38d5 : 48              >            pha         ;use stack to load status
38d6 : a9a5            >            lda #$a5     ;precharge accu
38d8 : 28              >            plp
                       >
38d9 : d752            >        smb 5,zpt
                       >        tst_a $a5,0
38db : 08              >            php         ;save flags
38dc : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
38de : f003            >        beq skip2537
                       >        trap            ;failed not equal (non zero)
38e0 : 202540          >        jsr report_error
                       >
38e3 :                 >skip2537
                       >
38e3 : 68              >            pla         ;load status
38e4 : 48              >            pha
                       >            cmp_flag 0
38e5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38e7 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
38e9 : 202540          >        jsr report_error
                       >
38ec :                 >skip2540
                       >
38ec : 28              >            plp         ;restore status
                       >
38ed : a552            >        lda zpt
38ef : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
38f1 : f003            >        beq skip2542
                       >        trap            ;failed not equal (non zero)
38f3 : 202540          >        jsr report_error
                       >
38f6 :                 >skip2542
                       >
38f6 : a900            >        lda #0
38f8 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
38fa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38fc : 48              >            pha         ;use stack to load status
38fd : a95a            >            lda #$5a     ;precharge accu
38ff : 28              >            plp
                       >
3900 : d752            >        smb 5,zpt
                       >        tst_a $5a,$ff
3902 : 08              >            php         ;save flags
3903 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3905 : f003            >        beq skip2547
                       >        trap            ;failed not equal (non zero)
3907 : 202540          >        jsr report_error
                       >
390a :                 >skip2547
                       >
390a : 68              >            pla         ;load status
390b : 48              >            pha
                       >            cmp_flag $ff
390c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
390e : f003            >        beq skip2550
                       >        trap            ;failed not equal (non zero)
3910 : 202540          >        jsr report_error
                       >
3913 :                 >skip2550
                       >
3913 : 28              >            plp         ;restore status
                       >
3914 : a552            >        lda zpt
3916 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
3918 : f003            >        beq skip2552
                       >        trap            ;failed not equal (non zero)
391a : 202540          >        jsr report_error
                       >
391d :                 >skip2552
                       >
                        
                                smbt 6
391d : a9bf            >        lda #$ff-(1<<6)
391f : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3921 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3923 : 48              >            pha         ;use stack to load status
3924 : a9a5            >            lda #$a5     ;precharge accu
3926 : 28              >            plp
                       >
3927 : e752            >        smb 6,zpt
                       >        tst_a $a5,0
3929 : 08              >            php         ;save flags
392a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
392c : f003            >        beq skip2558
                       >        trap            ;failed not equal (non zero)
392e : 202540          >        jsr report_error
                       >
3931 :                 >skip2558
                       >
3931 : 68              >            pla         ;load status
3932 : 48              >            pha
                       >            cmp_flag 0
3933 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3935 : f003            >        beq skip2561
                       >        trap            ;failed not equal (non zero)
3937 : 202540          >        jsr report_error
                       >
393a :                 >skip2561
                       >
393a : 28              >            plp         ;restore status
                       >
393b : a552            >        lda zpt
393d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
393f : f003            >        beq skip2563
                       >        trap            ;failed not equal (non zero)
3941 : 202540          >        jsr report_error
                       >
3944 :                 >skip2563
                       >
3944 : a900            >        lda #0
3946 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3948 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
394a : 48              >            pha         ;use stack to load status
394b : a95a            >            lda #$5a     ;precharge accu
394d : 28              >            plp
                       >
394e : e752            >        smb 6,zpt
                       >        tst_a $5a,$ff
3950 : 08              >            php         ;save flags
3951 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3953 : f003            >        beq skip2568
                       >        trap            ;failed not equal (non zero)
3955 : 202540          >        jsr report_error
                       >
3958 :                 >skip2568
                       >
3958 : 68              >            pla         ;load status
3959 : 48              >            pha
                       >            cmp_flag $ff
395a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
395c : f003            >        beq skip2571
                       >        trap            ;failed not equal (non zero)
395e : 202540          >        jsr report_error
                       >
3961 :                 >skip2571
                       >
3961 : 28              >            plp         ;restore status
                       >
3962 : a552            >        lda zpt
3964 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
3966 : f003            >        beq skip2573
                       >        trap            ;failed not equal (non zero)
3968 : 202540          >        jsr report_error
                       >
396b :                 >skip2573
                       >
                        
                                smbt 7
396b : a97f            >        lda #$ff-(1<<7)
396d : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
396f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3971 : 48              >            pha         ;use stack to load status
3972 : a9a5            >            lda #$a5     ;precharge accu
3974 : 28              >            plp
                       >
3975 : f752            >        smb 7,zpt
                       >        tst_a $a5,0
3977 : 08              >            php         ;save flags
3978 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
397a : f003            >        beq skip2579
                       >        trap            ;failed not equal (non zero)
397c : 202540          >        jsr report_error
                       >
397f :                 >skip2579
                       >
397f : 68              >            pla         ;load status
3980 : 48              >            pha
                       >            cmp_flag 0
3981 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3983 : f003            >        beq skip2582
                       >        trap            ;failed not equal (non zero)
3985 : 202540          >        jsr report_error
                       >
3988 :                 >skip2582
                       >
3988 : 28              >            plp         ;restore status
                       >
3989 : a552            >        lda zpt
398b : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
398d : f003            >        beq skip2584
                       >        trap            ;failed not equal (non zero)
398f : 202540          >        jsr report_error
                       >
3992 :                 >skip2584
                       >
3992 : a900            >        lda #0
3994 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3996 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3998 : 48              >            pha         ;use stack to load status
3999 : a95a            >            lda #$5a     ;precharge accu
399b : 28              >            plp
                       >
399c : f752            >        smb 7,zpt
                       >        tst_a $5a,$ff
399e : 08              >            php         ;save flags
399f : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
39a1 : f003            >        beq skip2589
                       >        trap            ;failed not equal (non zero)
39a3 : 202540          >        jsr report_error
                       >
39a6 :                 >skip2589
                       >
39a6 : 68              >            pla         ;load status
39a7 : 48              >            pha
                       >            cmp_flag $ff
39a8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39aa : f003            >        beq skip2592
                       >        trap            ;failed not equal (non zero)
39ac : 202540          >        jsr report_error
                       >
39af :                 >skip2592
                       >
39af : 28              >            plp         ;restore status
                       >
39b0 : a552            >        lda zpt
39b2 : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
39b4 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
39b6 : 202540          >        jsr report_error
                       >
39b9 :                 >skip2594
                       >
                        
39b9 : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
39bb : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
39bd : 202540          >        jsr report_error
                       >
39c0 :                 >skip2596
                        
39c0 : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
39c2 : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
39c4 : 202540          >        jsr report_error
                       >
39c7 :                 >skip2598
                        
39c7 : ba                       tsx
39c8 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
39ca : f003            >        beq skip2600
                       >        trap            ;failed not equal (non zero)
39cc : 202540          >        jsr report_error
                       >
39cf :                 >skip2600
                        
                                next_test
39cf : ad0211          >            lda test_case   ;previous test
39d2 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
39d4 : f003            >        beq skip2603
                       >        trap            ;failed not equal (non zero)
39d6 : 202540          >        jsr report_error
                       >
39d9 :                 >skip2603
                       >
0011 =                 >test_num = test_num + 1
39d9 : a911            >            lda #test_num   ;*** next tests' number
39db : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif        
                                 
                        ; testing CMP - (zp)         
39de : a2de                     ldx #$de    ;protect x & y
39e0 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
39e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39e4 : 48              >            pha         ;use stack to load status
39e5 : a980            >            lda #$80     ;precharge accu
39e7 : 28              >            plp
                        
39e8 : d272                     cmp (ind1+8)
                                tst_a $80,fc
39ea : 08              >            php         ;save flags
39eb : c980            >            cmp #$80     ;test result
                       >            trap_ne
39ed : f003            >        beq skip2608
                       >        trap            ;failed not equal (non zero)
39ef : 202540          >        jsr report_error
                       >
39f2 :                 >skip2608
                       >
39f2 : 68              >            pla         ;load status
39f3 : 48              >            pha
                       >            cmp_flag fc
39f4 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39f6 : f003            >        beq skip2611
                       >        trap            ;failed not equal (non zero)
39f8 : 202540          >        jsr report_error
                       >
39fb :                 >skip2611
                       >
39fb : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
39fc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39fe : 48              >            pha         ;use stack to load status
39ff : a97f            >            lda #$7f     ;precharge accu
3a01 : 28              >            plp
                        
3a02 : d272                     cmp (ind1+8)
                                tst_a $7f,fzc
3a04 : 08              >            php         ;save flags
3a05 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3a07 : f003            >        beq skip2616
                       >        trap            ;failed not equal (non zero)
3a09 : 202540          >        jsr report_error
                       >
3a0c :                 >skip2616
                       >
3a0c : 68              >            pla         ;load status
3a0d : 48              >            pha
                       >            cmp_flag fzc
3a0e : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a10 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
3a12 : 202540          >        jsr report_error
                       >
3a15 :                 >skip2619
                       >
3a15 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3a16 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a18 : 48              >            pha         ;use stack to load status
3a19 : a97e            >            lda #$7e     ;precharge accu
3a1b : 28              >            plp
                        
3a1c : d272                     cmp (ind1+8)
                                tst_a $7e,fn
3a1e : 08              >            php         ;save flags
3a1f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3a21 : f003            >        beq skip2624
                       >        trap            ;failed not equal (non zero)
3a23 : 202540          >        jsr report_error
                       >
3a26 :                 >skip2624
                       >
3a26 : 68              >            pla         ;load status
3a27 : 48              >            pha
                       >            cmp_flag fn
3a28 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a2a : f003            >        beq skip2627
                       >        trap            ;failed not equal (non zero)
3a2c : 202540          >        jsr report_error
                       >
3a2f :                 >skip2627
                       >
3a2f : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3a30 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a32 : 48              >            pha         ;use stack to load status
3a33 : a980            >            lda #$80     ;precharge accu
3a35 : 28              >            plp
                        
3a36 : d272                     cmp (ind1+8)
                                tst_a $80,~fnz
3a38 : 08              >            php         ;save flags
3a39 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3a3b : f003            >        beq skip2632
                       >        trap            ;failed not equal (non zero)
3a3d : 202540          >        jsr report_error
                       >
3a40 :                 >skip2632
                       >
3a40 : 68              >            pla         ;load status
3a41 : 48              >            pha
                       >            cmp_flag ~fnz
3a42 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a44 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
3a46 : 202540          >        jsr report_error
                       >
3a49 :                 >skip2635
                       >
3a49 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3a4a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a4c : 48              >            pha         ;use stack to load status
3a4d : a97f            >            lda #$7f     ;precharge accu
3a4f : 28              >            plp
                        
3a50 : d272                     cmp (ind1+8)
                                tst_a $7f,~fn
3a52 : 08              >            php         ;save flags
3a53 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3a55 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
3a57 : 202540          >        jsr report_error
                       >
3a5a :                 >skip2640
                       >
3a5a : 68              >            pla         ;load status
3a5b : 48              >            pha
                       >            cmp_flag ~fn
3a5c : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a5e : f003            >        beq skip2643
                       >        trap            ;failed not equal (non zero)
3a60 : 202540          >        jsr report_error
                       >
3a63 :                 >skip2643
                       >
3a63 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3a64 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a66 : 48              >            pha         ;use stack to load status
3a67 : a97e            >            lda #$7e     ;precharge accu
3a69 : 28              >            plp
                        
3a6a : d272                     cmp (ind1+8)
                                tst_a $7e,~fzc
3a6c : 08              >            php         ;save flags
3a6d : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3a6f : f003            >        beq skip2648
                       >        trap            ;failed not equal (non zero)
3a71 : 202540          >        jsr report_error
                       >
3a74 :                 >skip2648
                       >
3a74 : 68              >            pla         ;load status
3a75 : 48              >            pha
                       >            cmp_flag ~fzc
3a76 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a78 : f003            >        beq skip2651
                       >        trap            ;failed not equal (non zero)
3a7a : 202540          >        jsr report_error
                       >
3a7d :                 >skip2651
                       >
3a7d : 28              >            plp         ;restore status
                        
3a7e : e0de                     cpx #$de
                                trap_ne     ;x altered during test
3a80 : f003            >        beq skip2653
                       >        trap            ;failed not equal (non zero)
3a82 : 202540          >        jsr report_error
                       >
3a85 :                 >skip2653
                        
3a85 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
3a87 : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
3a89 : 202540          >        jsr report_error
                       >
3a8c :                 >skip2655
                        
3a8c : ba                       tsx
3a8d : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3a8f : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
3a91 : 202540          >        jsr report_error
                       >
3a94 :                 >skip2657
                        
                                next_test
3a94 : ad0211          >            lda test_case   ;previous test
3a97 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3a99 : f003            >        beq skip2660
                       >        trap            ;failed not equal (non zero)
3a9b : 202540          >        jsr report_error
                       >
3a9e :                 >skip2660
                       >
0012 =                 >test_num = test_num + 1
3a9e : a912            >            lda #test_num   ;*** next tests' number
3aa0 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
3aa3 : a242                     ldx #$42    ;protect x & y
                        
3aa5 : a000                     ldy #0      ;AND
3aa7 : a580                     lda indAN   ;set indirect address
3aa9 : 8552                     sta zpt
3aab : a581                     lda indAN+1
3aad : 8553                     sta zpt+1
3aaf :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
3aaf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ab1 : 48              >            pha         ;use stack to load status
3ab2 : b95311          >            lda absANa,y    ;precharge accu
3ab5 : 28              >            plp
                        
3ab6 : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,0
3ab8 : 08              >            php         ;save flags
3ab9 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3abc : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
3abe : 202540          >        jsr report_error
                       >
3ac1 :                 >skip2665
                       >
3ac1 : 68              >            pla         ;load status
                       >            eor_flag 0
3ac2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3ac4 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3ac7 : f003            >        beq skip2668
                       >        trap            ;failed not equal (non zero)
3ac9 : 202540          >        jsr report_error
                       >
3acc :                 >skip2668
                       >
                        
3acc : e652                     inc zpt
3ace : c8                       iny
3acf : c004                     cpy #4
3ad1 : d0dc                     bne tand1
3ad3 : 88                       dey
3ad4 : c652                     dec zpt
3ad6 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
3ad6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ad8 : 48              >            pha         ;use stack to load status
3ad9 : b95311          >            lda absANa,y    ;precharge accu
3adc : 28              >            plp
                        
3add : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3adf : 08              >            php         ;save flags
3ae0 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3ae3 : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
3ae5 : 202540          >        jsr report_error
                       >
3ae8 :                 >skip2673
                       >
3ae8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3ae9 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3aeb : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3aee : f003            >        beq skip2676
                       >        trap            ;failed not equal (non zero)
3af0 : 202540          >        jsr report_error
                       >
3af3 :                 >skip2676
                       >
                        
3af3 : c652                     dec zpt
3af5 : 88                       dey
3af6 : 10de                     bpl tand2
                        
3af8 : a000                     ldy #0      ;EOR
3afa : a588                     lda indEO   ;set indirect address
3afc : 8552                     sta zpt
3afe : a589                     lda indEO+1
3b00 : 8553                     sta zpt+1
3b02 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
3b02 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b04 : 48              >            pha         ;use stack to load status
3b05 : b95711          >            lda absEOa,y    ;precharge accu
3b08 : 28              >            plp
                        
3b09 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,0
3b0b : 08              >            php         ;save flags
3b0c : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b0f : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
3b11 : 202540          >        jsr report_error
                       >
3b14 :                 >skip2681
                       >
3b14 : 68              >            pla         ;load status
                       >            eor_flag 0
3b15 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b17 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b1a : f003            >        beq skip2684
                       >        trap            ;failed not equal (non zero)
3b1c : 202540          >        jsr report_error
                       >
3b1f :                 >skip2684
                       >
                        
3b1f : e652                     inc zpt
3b21 : c8                       iny
3b22 : c004                     cpy #4
3b24 : d0dc                     bne teor1
3b26 : 88                       dey
3b27 : c652                     dec zpt
3b29 :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3b29 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b2b : 48              >            pha         ;use stack to load status
3b2c : b95711          >            lda absEOa,y    ;precharge accu
3b2f : 28              >            plp
                        
3b30 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3b32 : 08              >            php         ;save flags
3b33 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b36 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
3b38 : 202540          >        jsr report_error
                       >
3b3b :                 >skip2689
                       >
3b3b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b3c : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b3e : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b41 : f003            >        beq skip2692
                       >        trap            ;failed not equal (non zero)
3b43 : 202540          >        jsr report_error
                       >
3b46 :                 >skip2692
                       >
                        
3b46 : c652                     dec zpt
3b48 : 88                       dey
3b49 : 10de                     bpl teor2
                        
3b4b : a000                     ldy #0      ;ORA
3b4d : a590                     lda indOR   ;set indirect address
3b4f : 8552                     sta zpt
3b51 : a591                     lda indOR+1
3b53 : 8553                     sta zpt+1
3b55 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
3b55 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b57 : 48              >            pha         ;use stack to load status
3b58 : b94f11          >            lda absORa,y    ;precharge accu
3b5b : 28              >            plp
                        
3b5c : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,0
3b5e : 08              >            php         ;save flags
3b5f : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b62 : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
3b64 : 202540          >        jsr report_error
                       >
3b67 :                 >skip2697
                       >
3b67 : 68              >            pla         ;load status
                       >            eor_flag 0
3b68 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b6a : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b6d : f003            >        beq skip2700
                       >        trap            ;failed not equal (non zero)
3b6f : 202540          >        jsr report_error
                       >
3b72 :                 >skip2700
                       >
                        
3b72 : e652                     inc zpt
3b74 : c8                       iny
3b75 : c004                     cpy #4
3b77 : d0dc                     bne tora1
3b79 : 88                       dey
3b7a : c652                     dec zpt
3b7c :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
3b7c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b7e : 48              >            pha         ;use stack to load status
3b7f : b94f11          >            lda absORa,y    ;precharge accu
3b82 : 28              >            plp
                        
3b83 : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3b85 : 08              >            php         ;save flags
3b86 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b89 : f003            >        beq skip2705
                       >        trap            ;failed not equal (non zero)
3b8b : 202540          >        jsr report_error
                       >
3b8e :                 >skip2705
                       >
3b8e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b8f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b91 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b94 : f003            >        beq skip2708
                       >        trap            ;failed not equal (non zero)
3b96 : 202540          >        jsr report_error
                       >
3b99 :                 >skip2708
                       >
                        
3b99 : c652                     dec zpt
3b9b : 88                       dey
3b9c : 10de                     bpl tora2
                        
3b9e : e042                     cpx #$42
                                trap_ne     ;x altered during test
3ba0 : f003            >        beq skip2710
                       >        trap            ;failed not equal (non zero)
3ba2 : 202540          >        jsr report_error
                       >
3ba5 :                 >skip2710
                        
3ba5 : ba                       tsx
3ba6 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3ba8 : f003            >        beq skip2712
                       >        trap            ;failed not equal (non zero)
3baa : 202540          >        jsr report_error
                       >
3bad :                 >skip2712
                        
                                next_test
3bad : ad0211          >            lda test_case   ;previous test
3bb0 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3bb2 : f003            >        beq skip2715
                       >        trap            ;failed not equal (non zero)
3bb4 : 202540          >        jsr report_error
                       >
3bb7 :                 >skip2715
                       >
0013 =                 >test_num = test_num + 1
3bb7 : a913            >            lda #test_num   ;*** next tests' number
3bb9 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
3bbc : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3bbd : d8                       cld
3bbe : a254                     ldx #ad2        ;for indexed test
3bc0 : a0ff                     ldy #$ff        ;max range
3bc2 : a900                     lda #0          ;start with adding zeroes & no carry
3bc4 : 8552                     sta adfc        ;carry in - for diag
3bc6 : 8553                     sta ad1         ;operand 1 - accumulator
3bc8 : 8554                     sta ad2         ;operand 2 - memory or immediate
3bca : 8d0511                   sta ada2        ;non zp
3bcd : 8555                     sta adrl        ;expected result bits 0-7
3bcf : 8556                     sta adrh        ;expected result bit 8 (carry out)
3bd1 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
3bd3 : 8558                     sta sb2
3bd5 : 8d0611                   sta sba2        ;non zp
3bd8 : a902                     lda #2          ;expected Z-flag
3bda : 8557                     sta adrf
3bdc : 18               tadd    clc             ;test with carry clear
3bdd : 20d73e                   jsr chkadd
3be0 : e652                     inc adfc        ;now with carry
3be2 : e655                     inc adrl        ;result +1
3be4 : 08                       php             ;save N & Z from low result
3be5 : 08                       php
3be6 : 68                       pla             ;accu holds expected flags
3be7 : 2982                     and #$82        ;mask N & Z
3be9 : 28                       plp
3bea : d002                     bne tadd1
3bec : e656                     inc adrh        ;result bit 8 - carry
3bee : 0556             tadd1   ora adrh        ;merge C to expected flags
3bf0 : 8557                     sta adrf        ;save expected flags except overflow
3bf2 : 38                       sec             ;test with carry set
3bf3 : 20d73e                   jsr chkadd
3bf6 : c652                     dec adfc        ;same for operand +1 but no carry
3bf8 : e653                     inc ad1
3bfa : d0e0                     bne tadd        ;iterate op1
3bfc : a900                     lda #0          ;preset result to op2 when op1 = 0
3bfe : 8556                     sta adrh
3c00 : ee0511                   inc ada2
3c03 : e654                     inc ad2
3c05 : 08                       php             ;save NZ as operand 2 becomes the new result
3c06 : 68                       pla
3c07 : 2982                     and #$82        ;mask N00000Z0
3c09 : 8557                     sta adrf        ;no need to check carry as we are adding to 0
3c0b : c658                     dec sb2         ;complement subtract operand 2
3c0d : ce0611                   dec sba2
3c10 : a554                     lda ad2         
3c12 : 8555                     sta adrl
3c14 : d0c6                     bne tadd        ;iterate op2
                        
3c16 : e054                     cpx #ad2
                                trap_ne         ;x altered during test
3c18 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
3c1a : 202540          >        jsr report_error
                       >
3c1d :                 >skip2717
                        
3c1d : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3c1f : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
3c21 : 202540          >        jsr report_error
                       >
3c24 :                 >skip2719
                        
3c24 : ba                       tsx
3c25 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3c27 : f003            >        beq skip2721
                       >        trap            ;failed not equal (non zero)
3c29 : 202540          >        jsr report_error
                       >
3c2c :                 >skip2721
                        
                                next_test
3c2c : ad0211          >            lda test_case   ;previous test
3c2f : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3c31 : f003            >        beq skip2724
                       >        trap            ;failed not equal (non zero)
3c33 : 202540          >        jsr report_error
                       >
3c36 :                 >skip2724
                       >
0014 =                 >test_num = test_num + 1
3c36 : a914            >            lda #test_num   ;*** next tests' number
3c38 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3c3b : f8                       sed 
3c3c : a254                     ldx #ad2        ;for indexed test
3c3e : a0ff                     ldy #$ff        ;max range
3c40 : a999                     lda #$99        ;start with adding 99 to 99 with carry
3c42 : 8553                     sta ad1         ;operand 1 - accumulator
3c44 : 8554                     sta ad2         ;operand 2 - memory or immediate
3c46 : 8d0511                   sta ada2        ;non zp
3c49 : 8555                     sta adrl        ;expected result bits 0-7
3c4b : a901                     lda #1          ;set carry in & out
3c4d : 8552                     sta adfc        ;carry in - for diag
3c4f : 8556                     sta adrh        ;expected result bit 8 (carry out)
3c51 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
3c53 : 8557                     sta adrf
3c55 : a900                     lda #0          ;complemented operand 2 for subtract
3c57 : 8558                     sta sb2
3c59 : 8d0611                   sta sba2        ;non zp
3c5c : 38               tdad    sec             ;test with carry set
3c5d : 20143d                   jsr chkdad
3c60 : c652                     dec adfc        ;now with carry clear
3c62 : a555                     lda adrl        ;decimal adjust result
3c64 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
3c66 : c656                     dec adrh
3c68 : a999                     lda #$99
3c6a : 8555                     sta adrl
3c6c : d012                     bne tdad3
3c6e : 290f             tdad1   and #$f         ;lower nibble mask
3c70 : d00c                     bne tdad2       ;no decimal adjust needed
3c72 : c655                     dec adrl        ;decimal adjust (?0-6)
3c74 : c655                     dec adrl
3c76 : c655                     dec adrl
3c78 : c655                     dec adrl
3c7a : c655                     dec adrl
3c7c : c655                     dec adrl
3c7e : c655             tdad2   dec adrl        ;result -1
3c80 : 08               tdad3   php             ;save valid flags
3c81 : 68                       pla
3c82 : 2982                     and #$82        ;N-----Z-
3c84 : 0556                     ora adrh        ;N-----ZC
3c86 : 8557                     sta adrf
3c88 : 18                       clc             ;test with carry clear
3c89 : 20143d                   jsr chkdad
3c8c : e652                     inc adfc        ;same for operand -1 but with carry
3c8e : a553                     lda ad1         ;decimal adjust operand 1
3c90 : f015                     beq tdad5       ;iterate operand 2
3c92 : 290f                     and #$f         ;lower nibble mask
3c94 : d00c                     bne tdad4       ;skip decimal adjust
3c96 : c653                     dec ad1         ;decimal adjust (?0-6)
3c98 : c653                     dec ad1
3c9a : c653                     dec ad1
3c9c : c653                     dec ad1
3c9e : c653                     dec ad1
3ca0 : c653                     dec ad1
3ca2 : c653             tdad4   dec ad1         ;operand 1 -1
3ca4 : 4c5c3c                   jmp tdad        ;iterate op1
                        
3ca7 : a999             tdad5   lda #$99        ;precharge op1 max
3ca9 : 8553                     sta ad1
3cab : a554                     lda ad2         ;decimal adjust operand 2
3cad : f039                     beq tdad7       ;end of iteration
3caf : 290f                     and #$f         ;lower nibble mask
3cb1 : d018                     bne tdad6       ;skip decimal adjust
3cb3 : c654                     dec ad2         ;decimal adjust (?0-6)
3cb5 : c654                     dec ad2
3cb7 : c654                     dec ad2
3cb9 : c654                     dec ad2
3cbb : c654                     dec ad2
3cbd : c654                     dec ad2
3cbf : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
3cc1 : e658                     inc sb2
3cc3 : e658                     inc sb2
3cc5 : e658                     inc sb2
3cc7 : e658                     inc sb2
3cc9 : e658                     inc sb2
3ccb : c654             tdad6   dec ad2         ;operand 2 -1
3ccd : e658                     inc sb2         ;complemented operand for subtract
3ccf : a558                     lda sb2
3cd1 : 8d0611                   sta sba2        ;copy as non zp operand
3cd4 : a554                     lda ad2
3cd6 : 8d0511                   sta ada2        ;copy as non zp operand
3cd9 : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
3cdb : 08                       php             ;save flags
3cdc : 68                       pla
3cdd : 2982                     and #$82        ;N-----Z-
3cdf : 0901                     ora #1          ;N-----ZC
3ce1 : 8557                     sta adrf
3ce3 : e656                     inc adrh        ;result carry
3ce5 : 4c5c3c                   jmp tdad        ;iterate op2
                        
3ce8 : e054             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
3cea : f003            >        beq skip2726
                       >        trap            ;failed not equal (non zero)
3cec : 202540          >        jsr report_error
                       >
3cef :                 >skip2726
                        
3cef : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3cf1 : f003            >        beq skip2728
                       >        trap            ;failed not equal (non zero)
3cf3 : 202540          >        jsr report_error
                       >
3cf6 :                 >skip2728
                        
3cf6 : ba                       tsx
3cf7 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3cf9 : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
3cfb : 202540          >        jsr report_error
                       >
3cfe :                 >skip2730
                        
3cfe : d8                       cld
                        
3cff : ad0211                   lda test_case
3d02 : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
3d04 : f003            >        beq skip2732
                       >        trap            ;failed not equal (non zero)
3d06 : 202540          >        jsr report_error
                       >
3d09 :                 >skip2732
                        
3d09 : a9f0                     lda #$f0        ;mark opcode testing complete
3d0b : 8d0211                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
3d0e : 20ee40          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
3d11 : 4c0013                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3d14 :                  chkdad
                        ; decimal ADC / SBC zp
3d14 : 08                       php             ;save carry for subtract
3d15 : a553                     lda ad1
3d17 : 6554                     adc ad2         ;perform add
3d19 : 08                       php          
3d1a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d1c : f003            >        beq skip2736
                       >        trap            ;failed not equal (non zero)
3d1e : 202540          >        jsr report_error
                       >
3d21 :                 >skip2736
                        
3d21 : 68                       pla             ;check flags
3d22 : 2983                     and #$83        ;mask N-----ZC
3d24 : c557                     cmp adrf
                                trap_ne         ;bad flags
3d26 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
3d28 : 202540          >        jsr report_error
                       >
3d2b :                 >skip2738
                        
3d2b : 28                       plp
3d2c : 08                       php             ;save carry for next add
3d2d : a553                     lda ad1
3d2f : e558                     sbc sb2         ;perform subtract
3d31 : 08                       php          
3d32 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d34 : f003            >        beq skip2740
                       >        trap            ;failed not equal (non zero)
3d36 : 202540          >        jsr report_error
                       >
3d39 :                 >skip2740
                        
3d39 : 68                       pla             ;check flags
3d3a : 2983                     and #$83        ;mask N-----ZC
3d3c : c557                     cmp adrf
                                trap_ne         ;bad flags
3d3e : f003            >        beq skip2742
                       >        trap            ;failed not equal (non zero)
3d40 : 202540          >        jsr report_error
                       >
3d43 :                 >skip2742
                        
3d43 : 28                       plp
                        ; decimal ADC / SBC abs
3d44 : 08                       php             ;save carry for subtract
3d45 : a553                     lda ad1
3d47 : 6d0511                   adc ada2        ;perform add
3d4a : 08                       php          
3d4b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d4d : f003            >        beq skip2744
                       >        trap            ;failed not equal (non zero)
3d4f : 202540          >        jsr report_error
                       >
3d52 :                 >skip2744
                        
3d52 : 68                       pla             ;check flags
3d53 : 2983                     and #$83        ;mask N-----ZC
3d55 : c557                     cmp adrf
                                trap_ne         ;bad flags
3d57 : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
3d59 : 202540          >        jsr report_error
                       >
3d5c :                 >skip2746
                        
3d5c : 28                       plp
3d5d : 08                       php             ;save carry for next add
3d5e : a553                     lda ad1
3d60 : ed0611                   sbc sba2        ;perform subtract
3d63 : 08                       php          
3d64 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d66 : f003            >        beq skip2748
                       >        trap            ;failed not equal (non zero)
3d68 : 202540          >        jsr report_error
                       >
3d6b :                 >skip2748
                        
3d6b : 68                       pla             ;check flags
3d6c : 2983                     and #$83        ;mask N-----ZC
3d6e : c557                     cmp adrf
                                trap_ne         ;bad flags
3d70 : f003            >        beq skip2750
                       >        trap            ;failed not equal (non zero)
3d72 : 202540          >        jsr report_error
                       >
3d75 :                 >skip2750
                        
3d75 : 28                       plp
                        ; decimal ADC / SBC #
3d76 : 08                       php             ;save carry for subtract
3d77 : a554                     lda ad2
3d79 : 8d0b11                   sta ex_adci+1   ;set ADC # operand
3d7c : a553                     lda ad1
3d7e : 200a11                   jsr ex_adci     ;execute ADC # in RAM
3d81 : 08                       php          
3d82 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d84 : f003            >        beq skip2752
                       >        trap            ;failed not equal (non zero)
3d86 : 202540          >        jsr report_error
                       >
3d89 :                 >skip2752
                        
3d89 : 68                       pla             ;check flags
3d8a : 2983                     and #$83        ;mask N-----ZC
3d8c : c557                     cmp adrf
                                trap_ne         ;bad flags
3d8e : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
3d90 : 202540          >        jsr report_error
                       >
3d93 :                 >skip2754
                        
3d93 : 28                       plp
3d94 : 08                       php             ;save carry for next add
3d95 : a558                     lda sb2
3d97 : 8d0e11                   sta ex_sbci+1   ;set SBC # operand
3d9a : a553                     lda ad1
3d9c : 200d11                   jsr ex_sbci     ;execute SBC # in RAM
3d9f : 08                       php          
3da0 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3da2 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
3da4 : 202540          >        jsr report_error
                       >
3da7 :                 >skip2756
                        
3da7 : 68                       pla             ;check flags
3da8 : 2983                     and #$83        ;mask N-----ZC
3daa : c557                     cmp adrf
                                trap_ne         ;bad flags
3dac : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
3dae : 202540          >        jsr report_error
                       >
3db1 :                 >skip2758
                        
3db1 : 28                       plp
                        ; decimal ADC / SBC zp,x
3db2 : 08                       php             ;save carry for subtract
3db3 : a553                     lda ad1
3db5 : 7500                     adc 0,x         ;perform add
3db7 : 08                       php          
3db8 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3dba : f003            >        beq skip2760
                       >        trap            ;failed not equal (non zero)
3dbc : 202540          >        jsr report_error
                       >
3dbf :                 >skip2760
                        
3dbf : 68                       pla             ;check flags
3dc0 : 2983                     and #$83        ;mask N-----ZC
3dc2 : c557                     cmp adrf
                                trap_ne         ;bad flags
3dc4 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
3dc6 : 202540          >        jsr report_error
                       >
3dc9 :                 >skip2762
                        
3dc9 : 28                       plp
3dca : 08                       php             ;save carry for next add
3dcb : a553                     lda ad1
3dcd : f504                     sbc sb2-ad2,x   ;perform subtract
3dcf : 08                       php          
3dd0 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3dd2 : f003            >        beq skip2764
                       >        trap            ;failed not equal (non zero)
3dd4 : 202540          >        jsr report_error
                       >
3dd7 :                 >skip2764
                        
3dd7 : 68                       pla             ;check flags
3dd8 : 2983                     and #$83        ;mask N-----ZC
3dda : c557                     cmp adrf
                                trap_ne         ;bad flags
3ddc : f003            >        beq skip2766
                       >        trap            ;failed not equal (non zero)
3dde : 202540          >        jsr report_error
                       >
3de1 :                 >skip2766
                        
3de1 : 28                       plp
                        ; decimal ADC / SBC abs,x
3de2 : 08                       php             ;save carry for subtract
3de3 : a553                     lda ad1
3de5 : 7db110                   adc ada2-ad2,x  ;perform add
3de8 : 08                       php          
3de9 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3deb : f003            >        beq skip2768
                       >        trap            ;failed not equal (non zero)
3ded : 202540          >        jsr report_error
                       >
3df0 :                 >skip2768
                        
3df0 : 68                       pla             ;check flags
3df1 : 2983                     and #$83        ;mask N-----ZC
3df3 : c557                     cmp adrf
                                trap_ne         ;bad flags
3df5 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
3df7 : 202540          >        jsr report_error
                       >
3dfa :                 >skip2770
                        
3dfa : 28                       plp
3dfb : 08                       php             ;save carry for next add
3dfc : a553                     lda ad1
3dfe : fdb210                   sbc sba2-ad2,x  ;perform subtract
3e01 : 08                       php          
3e02 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e04 : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
3e06 : 202540          >        jsr report_error
                       >
3e09 :                 >skip2772
                        
3e09 : 68                       pla             ;check flags
3e0a : 2983                     and #$83        ;mask N-----ZC
3e0c : c557                     cmp adrf
                                trap_ne         ;bad flags
3e0e : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
3e10 : 202540          >        jsr report_error
                       >
3e13 :                 >skip2774
                        
3e13 : 28                       plp
                        ; decimal ADC / SBC abs,y
3e14 : 08                       php             ;save carry for subtract
3e15 : a553                     lda ad1
3e17 : 790610                   adc ada2-$ff,y  ;perform add
3e1a : 08                       php          
3e1b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e1d : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
3e1f : 202540          >        jsr report_error
                       >
3e22 :                 >skip2776
                        
3e22 : 68                       pla             ;check flags
3e23 : 2983                     and #$83        ;mask N-----ZC
3e25 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e27 : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
3e29 : 202540          >        jsr report_error
                       >
3e2c :                 >skip2778
                        
3e2c : 28                       plp
3e2d : 08                       php             ;save carry for next add
3e2e : a553                     lda ad1
3e30 : f90710                   sbc sba2-$ff,y  ;perform subtract
3e33 : 08                       php          
3e34 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e36 : f003            >        beq skip2780
                       >        trap            ;failed not equal (non zero)
3e38 : 202540          >        jsr report_error
                       >
3e3b :                 >skip2780
                        
3e3b : 68                       pla             ;check flags
3e3c : 2983                     and #$83        ;mask N-----ZC
3e3e : c557                     cmp adrf
                                trap_ne         ;bad flags
3e40 : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
3e42 : 202540          >        jsr report_error
                       >
3e45 :                 >skip2782
                        
3e45 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3e46 : 08                       php             ;save carry for subtract
3e47 : a553                     lda ad1
3e49 : 6144                     adc (lo adi2-ad2,x) ;perform add
3e4b : 08                       php          
3e4c : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e4e : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
3e50 : 202540          >        jsr report_error
                       >
3e53 :                 >skip2784
                        
3e53 : 68                       pla             ;check flags
3e54 : 2983                     and #$83        ;mask N-----ZC
3e56 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e58 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
3e5a : 202540          >        jsr report_error
                       >
3e5d :                 >skip2786
                        
3e5d : 28                       plp
3e5e : 08                       php             ;save carry for next add
3e5f : a553                     lda ad1
3e61 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
3e63 : 08                       php          
3e64 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e66 : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
3e68 : 202540          >        jsr report_error
                       >
3e6b :                 >skip2788
                        
3e6b : 68                       pla             ;check flags
3e6c : 2983                     and #$83        ;mask N-----ZC
3e6e : c557                     cmp adrf
                                trap_ne         ;bad flags
3e70 : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
3e72 : 202540          >        jsr report_error
                       >
3e75 :                 >skip2790
                        
3e75 : 28                       plp
                        ; decimal ADC / SBC (abs),y
3e76 : 08                       php             ;save carry for subtract
3e77 : a553                     lda ad1
3e79 : 719c                     adc (adiy2),y   ;perform add
3e7b : 08                       php          
3e7c : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e7e : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
3e80 : 202540          >        jsr report_error
                       >
3e83 :                 >skip2792
                        
3e83 : 68                       pla             ;check flags
3e84 : 2983                     and #$83        ;mask N-----ZC
3e86 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e88 : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
3e8a : 202540          >        jsr report_error
                       >
3e8d :                 >skip2794
                        
3e8d : 28                       plp
3e8e : 08                       php             ;save carry for next add
3e8f : a553                     lda ad1
3e91 : f19e                     sbc (sbiy2),y   ;perform subtract
3e93 : 08                       php          
3e94 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e96 : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
3e98 : 202540          >        jsr report_error
                       >
3e9b :                 >skip2796
                        
3e9b : 68                       pla             ;check flags
3e9c : 2983                     and #$83        ;mask N-----ZC
3e9e : c557                     cmp adrf
                                trap_ne         ;bad flags
3ea0 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
3ea2 : 202540          >        jsr report_error
                       >
3ea5 :                 >skip2798
                        
3ea5 : 28                       plp
                        ; decimal ADC / SBC (zp)
3ea6 : 08                       php             ;save carry for subtract
3ea7 : a553                     lda ad1
3ea9 : 7298                     adc (adi2)      ;perform add
3eab : 08                       php          
3eac : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3eae : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
3eb0 : 202540          >        jsr report_error
                       >
3eb3 :                 >skip2800
                        
3eb3 : 68                       pla             ;check flags
3eb4 : 2983                     and #$83        ;mask N-----ZC
3eb6 : c557                     cmp adrf
                                trap_ne         ;bad flags
3eb8 : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
3eba : 202540          >        jsr report_error
                       >
3ebd :                 >skip2802
                        
3ebd : 28                       plp
3ebe : 08                       php             ;save carry for next add
3ebf : a553                     lda ad1
3ec1 : f29a                     sbc (sbi2)      ;perform subtract
3ec3 : 08                       php          
3ec4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ec6 : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
3ec8 : 202540          >        jsr report_error
                       >
3ecb :                 >skip2804
                        
3ecb : 68                       pla             ;check flags
3ecc : 2983                     and #$83        ;mask N-----ZC
3ece : c557                     cmp adrf
                                trap_ne         ;bad flags
3ed0 : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
3ed2 : 202540          >        jsr report_error
                       >
3ed5 :                 >skip2806
                        
3ed5 : 28                       plp
3ed6 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3ed7 : a557             chkadd  lda adrf        ;add V-flag if overflow
3ed9 : 2983                     and #$83        ;keep N-----ZC / clear V
3edb : 48                       pha
3edc : a553                     lda ad1         ;test sign unequal between operands
3ede : 4554                     eor ad2
3ee0 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3ee2 : a553                     lda ad1         ;test sign equal between operands and result
3ee4 : 4555                     eor adrl
3ee6 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3ee8 : 68                       pla
3ee9 : 0940                     ora #$40        ;set V
3eeb : 48                       pha
3eec : 68               ckad1   pla
3eed : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
3eef : 08                       php             ;save carry for subtract
3ef0 : a553                     lda ad1
3ef2 : 7298                     adc (adi2)      ;perform add
3ef4 : 08                       php          
3ef5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ef7 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
3ef9 : 202540          >        jsr report_error
                       >
3efc :                 >skip2808
                        
3efc : 68                       pla             ;check flags
3efd : 29c3                     and #$c3        ;mask NV----ZC
3eff : c557                     cmp adrf
                                trap_ne         ;bad flags
3f01 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
3f03 : 202540          >        jsr report_error
                       >
3f06 :                 >skip2810
                        
3f06 : 28                       plp
3f07 : 08                       php             ;save carry for next add
3f08 : a553                     lda ad1
3f0a : f29a                     sbc (sbi2)      ;perform subtract
3f0c : 08                       php          
3f0d : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f0f : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
3f11 : 202540          >        jsr report_error
                       >
3f14 :                 >skip2812
                        
3f14 : 68                       pla             ;check flags
3f15 : 29c3                     and #$c3        ;mask NV----ZC
3f17 : c557                     cmp adrf
                                trap_ne         ;bad flags
3f19 : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
3f1b : 202540          >        jsr report_error
                       >
3f1e :                 >skip2814
                        
3f1e : 28                       plp
3f1f : 60                       rts
                                
                        ; target for the jump indirect test
3f20 : 263f             ji_adr  dw test_ji
3f22 : 372b                     dw ji_ret
                        
3f24 : 88                       dey
3f25 : 88                       dey
3f26 :                  test_ji
3f26 : 08                       php             ;either SP or Y count will fail, if we do not hit
3f27 : 88                       dey
3f28 : 88                       dey
3f29 : 88                       dey
3f2a : 28                       plp
                                trap_cs         ;flags loaded?
3f2b : 9003            >        bcc skip2816
                       >        trap            ;failed carry set
3f2d : 202540          >        jsr report_error
                       >
3f30 :                 >skip2816
                        
                                trap_vs
3f30 : 5003            >        bvc skip2818
                       >        trap            ;failed overflow set
3f32 : 202540          >        jsr report_error
                       >
3f35 :                 >skip2818
                        
                                trap_mi
3f35 : 1003            >        bpl skip2820
                       >        trap            ;failed minus (bit 7 set)
3f37 : 202540          >        jsr report_error
                       >
3f3a :                 >skip2820
                        
                                trap_eq 
3f3a : d003            >        bne skip2822
                       >        trap           ;failed equal (zero)
3f3c : 202540          >        jsr report_error
                       >
3f3f :                 >skip2822
                        
3f3f : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
3f41 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
3f43 : 202540          >        jsr report_error
                       >
3f46 :                 >skip2824
                        
3f46 : e04e                     cpx #'N'
                                trap_ne        
3f48 : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
3f4a : 202540          >        jsr report_error
                       >
3f4d :                 >skip2826
                        
3f4d : c041                     cpy #('D'-3)
                                trap_ne
3f4f : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
3f51 : 202540          >        jsr report_error
                       >
3f54 :                 >skip2828
                        
3f54 : 48                       pha             ;save a,x
3f55 : 8a                       txa
3f56 : 48                       pha
3f57 : ba                       tsx
3f58 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3f5a : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
3f5c : 202540          >        jsr report_error
                       >
3f5f :                 >skip2830
                        
3f5f : 68                       pla             ;restore x
3f60 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3f61 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f63 : 48              >            pha         ;use stack to load status
3f64 : 28              >            plp
                        
3f65 : 68                       pla             ;restore a
3f66 : e8                       inx             ;return registers with modifications
3f67 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3f69 : 6cff11                   jmp (ji_tab+2)
3f6c : ea                       nop
3f6d : ea                       nop
                                trap            ;runover protection
3f6e : 202540          >        jsr report_error
                        
3f71 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump indirect test
3f74 : d33f             jxi_adr dw  trap_ind
3f76 : d33f                     dw  trap_ind
3f78 : 823f                     dw  test_jxi    ;+4
3f7a : a12b                     dw  jxi_ret     ;+6
3f7c : d33f                     dw  trap_ind
3f7e : d33f                     dw  trap_ind
                        
3f80 : 88                       dey
3f81 : 88                       dey
3f82 :                  test_jxi
3f82 : 08                       php             ;either SP or Y count will fail, if we do not hit
3f83 : 88                       dey
3f84 : 88                       dey
3f85 : 88                       dey
3f86 : 28                       plp
                                trap_cs         ;flags loaded?
3f87 : 9003            >        bcc skip2835
                       >        trap            ;failed carry set
3f89 : 202540          >        jsr report_error
                       >
3f8c :                 >skip2835
                        
                                trap_vs
3f8c : 5003            >        bvc skip2837
                       >        trap            ;failed overflow set
3f8e : 202540          >        jsr report_error
                       >
3f91 :                 >skip2837
                        
                                trap_mi
3f91 : 1003            >        bpl skip2839
                       >        trap            ;failed minus (bit 7 set)
3f93 : 202540          >        jsr report_error
                       >
3f96 :                 >skip2839
                        
                                trap_eq 
3f96 : d003            >        bne skip2841
                       >        trap           ;failed equal (zero)
3f98 : 202540          >        jsr report_error
                       >
3f9b :                 >skip2841
                        
3f9b : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
3f9d : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
3f9f : 202540          >        jsr report_error
                       >
3fa2 :                 >skip2843
                        
3fa2 : e004                     cpx #4
                                trap_ne        
3fa4 : f003            >        beq skip2845
                       >        trap            ;failed not equal (non zero)
3fa6 : 202540          >        jsr report_error
                       >
3fa9 :                 >skip2845
                        
3fa9 : c046                     cpy #('I'-3)
                                trap_ne
3fab : f003            >        beq skip2847
                       >        trap            ;failed not equal (non zero)
3fad : 202540          >        jsr report_error
                       >
3fb0 :                 >skip2847
                        
3fb0 : 48                       pha             ;save a,x
3fb1 : 8a                       txa
3fb2 : 48                       pha
3fb3 : ba                       tsx
3fb4 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3fb6 : f003            >        beq skip2849
                       >        trap            ;failed not equal (non zero)
3fb8 : 202540          >        jsr report_error
                       >
3fbb :                 >skip2849
                        
3fbb : 68                       pla             ;restore x
3fbc : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3fbd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fbf : 48              >            pha         ;use stack to load status
3fc0 : 28              >            plp
                        
3fc1 : 68                       pla             ;restore a
3fc2 : e8                       inx             ;return registers with modifications
3fc3 : e8                       inx
3fc4 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3fc6 : 7cf911                   jmp (jxi_tab,x)
3fc9 : ea                       nop
3fca : ea                       nop
                                trap            ;runover protection
3fcb : 202540          >        jsr report_error
                        
3fce : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ; JMP (abs,x) with bad x
3fd1 : ea                       nop
3fd2 : ea                       nop
3fd3 :                  trap_ind
3fd3 : ea                       nop
3fd4 : ea                       nop
                                trap            ;near miss indexed indirect jump
3fd5 : 202540          >        jsr report_error
                        
3fd8 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
3fdb :                  nmi_trap
                                trap            ;check stack for conditions at NMI
3fdb : 202540          >        jsr report_error
                        
3fde : 4c0013                   jmp start       ;catastrophic error - cannot continue
3fe1 :                  res_trap
                                trap            ;unexpected RESET
3fe1 : 202540          >        jsr report_error
                        
3fe4 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
3fe7 : 88                       dey
3fe8 : 88                       dey
3fe9 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
3fe9 : 08                       php             ;either SP or Y count will fail, if we do not hit
3fea : 88                       dey
3feb : 88                       dey
3fec : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
                            if ROM_vectors = 1
                                cmp #$ff-'B'    ;BRK pass 2 registers loaded?
                                beq break2
                            endif
3fed : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
3fef : f003            >        beq skip2857
                       >        trap            ;failed not equal (non zero)
3ff1 : 202540          >        jsr report_error
                       >
3ff4 :                 >skip2857
                        
3ff4 : e052                     cpx #'R'
                                trap_ne        
3ff6 : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
3ff8 : 202540          >        jsr report_error
                       >
3ffb :                 >skip2859
                        
3ffb : c048                     cpy #'K'-3
                                trap_ne
3ffd : f003            >        beq skip2861
                       >        trap            ;failed not equal (non zero)
3fff : 202540          >        jsr report_error
                       >
4002 :                 >skip2861
                        
4002 : 8550                     sta irq_a       ;save registers during break test
4004 : 8651                     stx irq_x
4006 : ba                       tsx             ;test break on stack
4007 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
400a : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ;possible no break flag on stack
400c : f003            >        beq skip2864
                       >        trap            ;failed not equal (non zero)
400e : 202540          >        jsr report_error
                       >
4011 :                 >skip2864
                        
                            if ROM_vectors = 1
                                pla
                                cmp_flag intdis ;should have added interrupt disable
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret0)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret0)
                                trap_ne
                                load_flag $ff
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                                
                        break2                  ;BRK pass 2        
                                cpx #$ff-'R'
                                trap_ne        
                                cpy #$ff-'K'-3
                                trap_ne
                                sta irq_a       ;save registers during break test
                                stx irq_x
                                tsx             ;test break on stack
                                lda $102,x
                                cmp_flag $ff    ;break test should have B=1
                                trap_ne         ;possibly no break flag on stack
                                pla
                                cmp_flag $ff-decmode ;actual passed flags should have decmode cleared
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret1)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret1)
                                trap_ne
                                load_flag intdis
                                pha      
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                            else
                                trap_eq         ;check stack for conditions at BRK
4011 : d003            >        bne skip2866
                       >        trap           ;failed equal (zero)
4013 : 202540          >        jsr report_error
                       >
4016 :                 >skip2866
                        
                            endif
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
4016 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
4016 : a200            >        ldx #0
4018 : ad3341          >        lda rmsg_start
401b :                 >loop2868
401b : 202f41          >        jsr rchar
401e : e8              >        inx
401f : bd3341          >        lda rmsg_start,x
4022 : d0f7            >        bne loop2868
                        
4024 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
4025 :                  report_error
                        ;save registers
4025 : 08                       php
4026 : 48                       pha
4027 : 8a                       txa
4028 : 48                       pha
4029 : 98                       tya
402a : 48                       pha
402b : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
402c : a200            >        ldx #0
402e : ad4741          >        lda rmsg_stack
4031 :                 >loop2869
4031 : 202f41          >        jsr rchar
4034 : e8              >        inx
4035 : bd4741          >        lda rmsg_stack,x
4038 : d0f7            >        bne loop2869
                        
403a : ba                       tsx
403b : e8                       inx
403c : a901                     lda #1      ;address high
403e : 201b41                   jsr rhex
4041 : 8a                       txa         ;address low
4042 : 201b41                   jsr rhex
4045 : 201741           rstack  jsr rspace
4048 : bd0001                   lda $100,x  ;stack data
404b : 201b41                   jsr rhex
404e : e8                       inx
404f : d0f4                     bne rstack
4051 : 200e41                   jsr rcrlf   ;new line
                        ;show zero page workspace
4054 : a900                     lda #0
4056 : 201b41                   jsr rhex
4059 : a952                     lda #zpt
405b : aa                       tax
405c : 201b41                   jsr rhex
405f : 201741           rzp     jsr rspace
4062 : b500                     lda 0,x
4064 : 201b41                   jsr rhex
4067 : e8                       inx
4068 : e059                     cpx #zp_bss
406a : d0f3                     bne rzp
406c : 200e41                   jsr rcrlf
                        ;show absolute workspace
406f : a911                     lda #hi(data_segment)
4071 : 201b41                   jsr rhex
4074 : a900                     lda #lo(data_segment)
4076 : 201b41                   jsr rhex
4079 : a200                     ldx #0
407b : 201741           rabs    jsr rspace
407e : bd0011                   lda data_segment,x
4081 : 201b41                   jsr rhex
4084 : e8                       inx
4085 : e00a                     cpx #(data_bss-data_segment)
4087 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
4089 : a200            >        ldx #0
408b : ad6341          >        lda rmsg_cont
408e :                 >loop2870
408e : 202f41          >        jsr rchar
4091 : e8              >        inx
4092 : bd6341          >        lda rmsg_cont,x
4095 : d0f7            >        bne loop2870
                        
4097 : 200441           rerr1   jsr rget
409a : c953                     cmp #'S'
409c : f00b                     beq rskip
409e : c943                     cmp #'C'
40a0 : d0f5                     bne rerr1        
                        ;restore registers
40a2 : 68                       pla
40a3 : a8                       tay
40a4 : 68                       pla
40a5 : aa                       tax
40a6 : 68                       pla 
40a7 : 28                       plp
40a8 : 60                       rts
                        ;skip the current test
40a9 : a9f0             rskip   lda #$f0            ;already end of tests?
40ab : cd0211                   cmp test_case
40ae : f0e7                     beq rerr1           ;skip is not available
40b0 : a2ff                     ldx #$ff            ;clear stack
40b2 : 9a                       txs
40b3 : ee0211                   inc test_case       ;next test
40b6 : a900                     lda #lo(start)      ;find begin of test
40b8 : 8552                     sta zpt
40ba : a913                     lda #hi(start)
40bc : 8553                     sta zpt+1
40be : a004             rskipl1 ldy #4              ;search pattern
40c0 : b152             rskipl2 lda (zpt),y         ;next byte
40c2 : d9e940                   cmp rmark,y
40c5 : d00a                     bne rskipnx         ;no match
40c7 : 88                       dey
40c8 : 300f                     bmi rskipf          ;found pattern        
40ca : c001                     cpy #1              ;skip immediate value
40cc : d0f2                     bne rskipl2
40ce : 88                       dey
40cf : f0ef                     beq rskipl2
                                
40d1 : e652             rskipnx inc zpt             ;next RAM location
40d3 : d0e9                     bne rskipl1
40d5 : e653                     inc zpt+1
40d7 : d0e5                     bne rskipl1
                        
40d9 : a001             rskipf  ldy #1              ;pattern found - check test number
40db : b152                     lda (zpt),y         ;test number
40dd : c9f0                     cmp #$f0            ;end of last test?
40df : f005                     beq rskipe          ;ask to rerun all
40e1 : cd0211                   cmp test_case       ;is next test?
40e4 : d0eb                     bne rskipnx         ;continue searching
40e6 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
40e9 : a900             rmark   lda #0              ;begin of test search pattern
40eb : 8d0211                   sta test_case
                        
                        ;show test has ended, ask to repeat
40ee :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
40ee : a200            >        ldx #0
40f0 : ad9541          >        lda rmsg_success
40f3 :                 >loop2871
40f3 : 202f41          >        jsr rchar
40f6 : e8              >        inx
40f7 : bd9541          >        lda rmsg_success,x
40fa : d0f7            >        bne loop2871
                        
40fc : 200441           rsuc1   jsr rget
40ff : c952                     cmp #'R'
4101 : d0f9                     bne rsuc1        
4103 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
4104 :                  rget                ;get character in A
4104 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
4107 : c961                     cmp #'a'    ;lower case
4109 : 9002                     bcc rget1
410b : 295f                     and #$5f    ;convert to upper case
410d : 60               rget1   rts
                        
                        ;output subroutines
410e : a90a             rcrlf   lda #10
4110 : 202f41                   jsr rchar
4113 : a90d                     lda #13
4115 : d018                     bne rchar
                        
4117 : a920             rspace  lda #' '
4119 : d014                     bne rchar
                                
411b : 48               rhex    pha         ;report hex byte in A
411c : 4a                       lsr a       ;high nibble first
411d : 4a                       lsr a
411e : 4a                       lsr a
411f : 4a                       lsr a
4120 : 202641                   jsr rnib
4123 : 68                       pla         ;now low nibble
4124 : 290f                     and #$f
                        
4126 : 18               rnib    clc         ;report nibble in A
4127 : 6930                     adc #'0'    ;make printable 0-9
4129 : c93a                     cmp #'9'+1
412b : 9002                     bcc rchar
412d : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
412f :                  rchar               ;report character in A
412f : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
4132 : 60                       rts
                        
4133 :                  rmsg_start
4133 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
4147 :                  rmsg_stack
4147 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
4163 :                  rmsg_cont
4163 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
4195 :                  rmsg_success
4195 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
41c0 :                  zp_init
41c0 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
41c4 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
41c5 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
41c9 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
41cd : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
41d1 : 1011             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
41d3 : 1111                     dw  abs1+1
41d5 : 1211                     dw  abs1+2
41d7 : 1311                     dw  abs1+3
41d9 : 1411                     dw  abs7f
41db : 1810             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
41dd : 0511             indt_   dw  abst            ;indirect pointer to store area in absolute memory
41df : 0611                     dw  abst+1
41e1 : 0711                     dw  abst+2
41e3 : 0811                     dw  abst+3
41e5 : 0d10             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
41e7 : 4711             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
41e9 : 4811                     dw  absAN+1
41eb : 4911                     dw  absAN+2
41ed : 4a11                     dw  absAN+3
41ef : 4b11             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
41f1 : 4c11                     dw  absEO+1
41f3 : 4d11                     dw  absEO+2
41f5 : 4e11                     dw  absEO+3
41f7 : 4311             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
41f9 : 4411                     dw  absOR+1
41fb : 4511                     dw  absOR+2
41fd : 4611                     dw  absOR+3
                        ;add/subtract indirect pointers
41ff : 0511             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
4201 : 0611             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
4203 : 0610             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
4205 : 0710             sbiy2_  dw  sba2-$ff
4207 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
4207 :                  data_init
4207 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
4209 : 60                       rts
420a : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
420c : 60                       rts
420d : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
4211 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
4212 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
4216 :                  rASL_                       ;expected result ASL & ROL -carry  
4216 : 86048200         rROL_   db  $86,$04,$82,0   ; "
421a : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
421e :                  rLSR_                       ;expected result LSR & ROR -carry
421e : 61412000         rROR_   db  $61,$41,$20,0   ; "
4222 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
4226 :                  fASL_                       ;expected flags for shifts
4226 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
422a : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
422e :                  fLSR_
422e : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
4232 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
4236 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
423b : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
4240 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
4244 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
4248 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
424c : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
4250 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
4254 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
4258 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
425c : 02800080         absflo_ db  fz,fn,0,fn
4260 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
4260 :                  vec_init
4260 : db3f                     dw  nmi_trap
4262 : e13f                     dw  res_trap
4264 : e93f                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
4266 : 00000000000000..         ds  lo(jxi_ret - * - 2)
429f : ea                       nop
42a0 : ea                       nop
42a1 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
42a2 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
42a3 : 202540          >        jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
42a6 : 00000000000000..         ds  lo(ji_ret - * - 2)
4335 : ea                       nop
4336 : ea                       nop
4337 : ea               ji_px   nop             ;low address byte matched with ji_ret 
4338 : ea                       nop
                                trap            ;jmp indirect page cross bug
4339 : 202540          >        jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
4337 =                          end start
                        
No errors in pass 2.
Wrote binary from address $1300 through $433b.
Total size 12348 bytes.
Program start address is at $1300 (4864).
