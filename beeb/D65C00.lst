AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65 -------------------------------------------------

3125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013-2017  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 04-dec-2017
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        ;   23-aug-2015  change revoked
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;   28-aug-2015  fixed decimal adc/sbc immediate only testing carry
                        ;   09-feb-2017  fixed RMB/SMB tested when they shouldn't be tested
                        ;   04-dec-2017  fixed BRK not tested for actually going through the IRQ vector
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;                added skip override to undefined opcode as NOP test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $63 (99) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
1100 =                  data_segment = BASE
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
1300 =                  code_segment = BASE + $200
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0000 =                  wdc_op = WDC_OP
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0000 =                  rkwl_wdc_op = RKWL_OP
                        
                        ;skip testing all undefined opcodes override
                        ;0=test as NOP, >0=skip
0000 =                  skip_nop = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
005e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0062 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0066 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006c =                          dw  abs1+1
006e =                          dw  abs1+2
0070 =                          dw  abs1+3
0072 =                          dw  abs7f
0074 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0076 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0078 =                          dw  abst+1
007a =                          dw  abst+2
007c =                          dw  abst+3
007e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0080 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0082 =                          dw  absAN+1
0084 =                          dw  absAN+2
0086 =                          dw  absAN+3
0088 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008a =                          dw  absEO+1
008c =                          dw  absEO+2
008e =                          dw  absEO+3
0090 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0092 =                          dw  absOR+1
0094 =                          dw  absOR+2
0096 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0098 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
009e =                  sbiy2   dw  sba2-$ff
00a0 =                  zp_bss_end
                            
1100 =                          org data_segment
1100 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
1102 =                  test_case   ds  1           ;current test number
1103 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
1105 =                  abst                        ;5 bytes store/modify test area
1105 =                  ada2    ds  1               ;operand 2
1106 =                  sba2    ds  1               ;operand 2 complemented for subtract
1107 =                          ds  3               ;fill remaining bytes
110a =                  data_bss
                            if load_data_direct = 1
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
110a =                  ex_adci ds  3
110d =                  ex_sbci ds  3
                            endif
1110 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
1114 =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
1115 =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
1119 =                  rASL                        ;expected result ASL & ROL -carry  
1119 =                  rROL    db  $86,$04,$82,0   ; "
111d =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
1121 =                  rLSR                        ;expected result LSR & ROR -carry
1121 =                  rROR    db  $61,$41,$20,0   ; "
1125 =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
1129 =                  fASL                        ;expected flags for shifts
1129 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
112d =                  fROLc   db  fnc,fc,fn,0     ;carry in
1131 =                  fLSR
1131 =                  fROR    db  fc,0,fc,fz      ;no carry in
1135 =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
1139 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
113e =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
1143 =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
1147 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
114b =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
114f =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
1153 =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
1157 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
115b =                  absrlo  db  0,$ff,$7f,$80
115f =                  absflo  db  fz,fn,0,fn
1163 =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
11f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
11fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
1200 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
1300 =                          org code_segment
1300 : d8               start   cld
1301 : a2ff                     ldx #$ff
1303 : 9a                       txs
1304 : a900                     lda #0          ;*** test 0 = initialize
1306 : 8d0211                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
1309 : 20f53f                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
130c : a246                     ldx #zp_end-zp_init-1
130e : bd9f41           ld_zp   lda zp_init,x
1311 : 9559                     sta zp_bss,x
1313 : ca                       dex
1314 : 10f8                     bpl ld_zp
1316 : a258                     ldx #data_end-data_init-1
1318 : bde641           ld_data lda data_init,x
131b : 9d0a11                   sta data_bss,x
131e : ca                       dex
131f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
1321 : ad0211          >            lda test_case   ;previous test
1324 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1326 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1328 : 200440          >        jsr report_error
                       >
132b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
132b : a901            >            lda #test_num   ;*** next tests' number
132d : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
1330 : a999                     lda #$99        ;protect a
1332 : a2ff                     ldx #$ff        ;initialize stack
1334 : 9a                       txs
1335 : a255                     ldx #$55
1337 : da                       phx
1338 : a2aa                     ldx #$aa
133a : da                       phx
133b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
133e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
1340 : 200440          >        jsr report_error
                       >
1343 :                 >skip0004
                        
1343 : ba                       tsx
1344 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
1346 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
1348 : 200440          >        jsr report_error
                       >
134b :                 >skip0006
                        
134b : 7a                       ply
134c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
134e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
1350 : 200440          >        jsr report_error
                       >
1353 :                 >skip0008
                        
1353 : 7a                       ply
1354 : c055                     cpy #$55
                                trap_ne
1356 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
1358 : 200440          >        jsr report_error
                       >
135b :                 >skip0010
                        
135b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
135e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
1360 : 200440          >        jsr report_error
                       >
1363 :                 >skip0012
                        
1363 : ba                       tsx
1364 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
1366 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
1368 : 200440          >        jsr report_error
                       >
136b :                 >skip0014
                        
                                
136b : a0a5                     ldy #$a5
136d : 5a                       phy
136e : a05a                     ldy #$5a
1370 : 5a                       phy
1371 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
1374 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
1376 : 200440          >        jsr report_error
                       >
1379 :                 >skip0016
                        
1379 : ba                       tsx
137a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
137c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
137e : 200440          >        jsr report_error
                       >
1381 :                 >skip0018
                        
1381 : fa                       plx
1382 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
1384 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
1386 : 200440          >        jsr report_error
                       >
1389 :                 >skip0020
                        
1389 : fa                       plx
138a : e0a5                     cpx #$a5
                                trap_ne
138c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
138e : 200440          >        jsr report_error
                       >
1391 :                 >skip0022
                        
1391 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
1394 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
1396 : 200440          >        jsr report_error
                       >
1399 :                 >skip0024
                        
1399 : ba                       tsx
139a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
139c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
139e : 200440          >        jsr report_error
                       >
13a1 :                 >skip0026
                        
13a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
13a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
13a5 : 200440          >        jsr report_error
                       >
13a8 :                 >skip0028
                        
                                next_test            
13a8 : ad0211          >            lda test_case   ;previous test
13ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
13ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
13af : 200440          >        jsr report_error
                       >
13b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
13b2 : a902            >            lda #test_num   ;*** next tests' number
13b4 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
13b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
13b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
13bb : 48              >            pha         ;use stack to load status
13bc : a201            >            ldx #1     ;precharge index x
13be : 28              >            plp
                        
13bf : da                       phx
                                tst_x 1,$ff
13c0 : 08              >            php         ;save flags
13c1 : e001            >            cpx #1     ;test result
                       >            trap_ne
13c3 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
13c5 : 200440          >        jsr report_error
                       >
13c8 :                 >skip0036
                       >
13c8 : 68              >            pla         ;load status
13c9 : 48              >            pha
                       >            cmp_flag $ff
13ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
13ce : 200440          >        jsr report_error
                       >
13d1 :                 >skip0039
                       >
13d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
13d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13d4 : 48              >            pha         ;use stack to load status
13d5 : a200            >            ldx #0     ;precharge index x
13d7 : 28              >            plp
                        
13d8 : da                       phx
                                tst_x 0,0
13d9 : 08              >            php         ;save flags
13da : e000            >            cpx #0     ;test result
                       >            trap_ne
13dc : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
13de : 200440          >        jsr report_error
                       >
13e1 :                 >skip0044
                       >
13e1 : 68              >            pla         ;load status
13e2 : 48              >            pha
                       >            cmp_flag 0
13e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
13e7 : 200440          >        jsr report_error
                       >
13ea :                 >skip0047
                       >
13ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
13eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13ed : 48              >            pha         ;use stack to load status
13ee : a2ff            >            ldx #$ff     ;precharge index x
13f0 : 28              >            plp
                        
13f1 : da                       phx
                                tst_x $ff,$ff
13f2 : 08              >            php         ;save flags
13f3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
13f5 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
13f7 : 200440          >        jsr report_error
                       >
13fa :                 >skip0052
                       >
13fa : 68              >            pla         ;load status
13fb : 48              >            pha
                       >            cmp_flag $ff
13fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
1400 : 200440          >        jsr report_error
                       >
1403 :                 >skip0055
                       >
1403 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
1404 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1406 : 48              >            pha         ;use stack to load status
1407 : a201            >            ldx #1     ;precharge index x
1409 : 28              >            plp
                        
140a : da                       phx
                                tst_x 1,0
140b : 08              >            php         ;save flags
140c : e001            >            cpx #1     ;test result
                       >            trap_ne
140e : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
1410 : 200440          >        jsr report_error
                       >
1413 :                 >skip0060
                       >
1413 : 68              >            pla         ;load status
1414 : 48              >            pha
                       >            cmp_flag 0
1415 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1417 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
1419 : 200440          >        jsr report_error
                       >
141c :                 >skip0063
                       >
141c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
141d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
141f : 48              >            pha         ;use stack to load status
1420 : a200            >            ldx #0     ;precharge index x
1422 : 28              >            plp
                        
1423 : da                       phx
                                tst_x 0,$ff
1424 : 08              >            php         ;save flags
1425 : e000            >            cpx #0     ;test result
                       >            trap_ne
1427 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
1429 : 200440          >        jsr report_error
                       >
142c :                 >skip0068
                       >
142c : 68              >            pla         ;load status
142d : 48              >            pha
                       >            cmp_flag $ff
142e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1430 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
1432 : 200440          >        jsr report_error
                       >
1435 :                 >skip0071
                       >
1435 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
1436 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1438 : 48              >            pha         ;use stack to load status
1439 : a2ff            >            ldx #$ff     ;precharge index x
143b : 28              >            plp
                        
143c : da                       phx
                                tst_x $ff,0
143d : 08              >            php         ;save flags
143e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1440 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
1442 : 200440          >        jsr report_error
                       >
1445 :                 >skip0076
                       >
1445 : 68              >            pla         ;load status
1446 : 48              >            pha
                       >            cmp_flag 0
1447 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1449 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
144b : 200440          >        jsr report_error
                       >
144e :                 >skip0079
                       >
144e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
144f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1451 : 48              >            pha         ;use stack to load status
1452 : a200            >            ldx #0     ;precharge index x
1454 : 28              >            plp
                        
1455 : fa                       plx
                                tst_x $ff,$ff-zero
1456 : 08              >            php         ;save flags
1457 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1459 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
145b : 200440          >        jsr report_error
                       >
145e :                 >skip0084
                       >
145e : 68              >            pla         ;load status
145f : 48              >            pha
                       >            cmp_flag $ff-zero
1460 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1462 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
1464 : 200440          >        jsr report_error
                       >
1467 :                 >skip0087
                       >
1467 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
1468 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
146a : 48              >            pha         ;use stack to load status
146b : a2ff            >            ldx #$ff     ;precharge index x
146d : 28              >            plp
                        
146e : fa                       plx
                                tst_x 0,zero
146f : 08              >            php         ;save flags
1470 : e000            >            cpx #0     ;test result
                       >            trap_ne
1472 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
1474 : 200440          >        jsr report_error
                       >
1477 :                 >skip0092
                       >
1477 : 68              >            pla         ;load status
1478 : 48              >            pha
                       >            cmp_flag zero
1479 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
147b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
147d : 200440          >        jsr report_error
                       >
1480 :                 >skip0095
                       >
1480 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
1481 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1483 : 48              >            pha         ;use stack to load status
1484 : a2fe            >            ldx #$fe     ;precharge index x
1486 : 28              >            plp
                        
1487 : fa                       plx
                                tst_x 1,$ff-zero-minus
1488 : 08              >            php         ;save flags
1489 : e001            >            cpx #1     ;test result
                       >            trap_ne
148b : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
148d : 200440          >        jsr report_error
                       >
1490 :                 >skip0100
                       >
1490 : 68              >            pla         ;load status
1491 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
1492 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1494 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
1496 : 200440          >        jsr report_error
                       >
1499 :                 >skip0103
                       >
1499 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
149a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
149c : 48              >            pha         ;use stack to load status
149d : a200            >            ldx #0     ;precharge index x
149f : 28              >            plp
                        
14a0 : fa                       plx
                                tst_x $ff,minus
14a1 : 08              >            php         ;save flags
14a2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
14a4 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
14a6 : 200440          >        jsr report_error
                       >
14a9 :                 >skip0108
                       >
14a9 : 68              >            pla         ;load status
14aa : 48              >            pha
                       >            cmp_flag minus
14ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
14af : 200440          >        jsr report_error
                       >
14b2 :                 >skip0111
                       >
14b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
14b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14b5 : 48              >            pha         ;use stack to load status
14b6 : a2ff            >            ldx #$ff     ;precharge index x
14b8 : 28              >            plp
                        
14b9 : fa                       plx
                                tst_x 0,$ff-minus
14ba : 08              >            php         ;save flags
14bb : e000            >            cpx #0     ;test result
                       >            trap_ne
14bd : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
14bf : 200440          >        jsr report_error
                       >
14c2 :                 >skip0116
                       >
14c2 : 68              >            pla         ;load status
14c3 : 48              >            pha
                       >            cmp_flag $ff-minus
14c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
14c8 : 200440          >        jsr report_error
                       >
14cb :                 >skip0119
                       >
14cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
14cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14ce : 48              >            pha         ;use stack to load status
14cf : a2fe            >            ldx #$fe     ;precharge index x
14d1 : 28              >            plp
                        
14d2 : fa                       plx
                                tst_x 1,0
14d3 : 08              >            php         ;save flags
14d4 : e001            >            cpx #1     ;test result
                       >            trap_ne
14d6 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
14d8 : 200440          >        jsr report_error
                       >
14db :                 >skip0124
                       >
14db : 68              >            pla         ;load status
14dc : 48              >            pha
                       >            cmp_flag 0
14dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
14e1 : 200440          >        jsr report_error
                       >
14e4 :                 >skip0127
                       >
14e4 : 28              >            plp         ;restore status
                        
14e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
14e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
14e9 : 200440          >        jsr report_error
                       >
14ec :                 >skip0129
                        
                                next_test            
14ec : ad0211          >            lda test_case   ;previous test
14ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
14f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
14f3 : 200440          >        jsr report_error
                       >
14f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
14f6 : a903            >            lda #test_num   ;*** next tests' number
14f8 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
14fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
14fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
14ff : 48              >            pha         ;use stack to load status
1500 : a001            >            ldy #1     ;precharge index y
1502 : 28              >            plp
                        
1503 : 5a                       phy
                                tst_y 1,$ff
1504 : 08              >            php         ;save flags
1505 : c001            >            cpy #1     ;test result
                       >            trap_ne
1507 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
1509 : 200440          >        jsr report_error
                       >
150c :                 >skip0137
                       >
150c : 68              >            pla         ;load status
150d : 48              >            pha
                       >            cmp_flag $ff
150e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1510 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
1512 : 200440          >        jsr report_error
                       >
1515 :                 >skip0140
                       >
1515 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
1516 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1518 : 48              >            pha         ;use stack to load status
1519 : a000            >            ldy #0     ;precharge index y
151b : 28              >            plp
                        
151c : 5a                       phy
                                tst_y 0,0
151d : 08              >            php         ;save flags
151e : c000            >            cpy #0     ;test result
                       >            trap_ne
1520 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
1522 : 200440          >        jsr report_error
                       >
1525 :                 >skip0145
                       >
1525 : 68              >            pla         ;load status
1526 : 48              >            pha
                       >            cmp_flag 0
1527 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1529 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
152b : 200440          >        jsr report_error
                       >
152e :                 >skip0148
                       >
152e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
152f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1531 : 48              >            pha         ;use stack to load status
1532 : a0ff            >            ldy #$ff     ;precharge index y
1534 : 28              >            plp
                        
1535 : 5a                       phy
                                tst_y $ff,$ff
1536 : 08              >            php         ;save flags
1537 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1539 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
153b : 200440          >        jsr report_error
                       >
153e :                 >skip0153
                       >
153e : 68              >            pla         ;load status
153f : 48              >            pha
                       >            cmp_flag $ff
1540 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1542 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
1544 : 200440          >        jsr report_error
                       >
1547 :                 >skip0156
                       >
1547 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
1548 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
154a : 48              >            pha         ;use stack to load status
154b : a001            >            ldy #1     ;precharge index y
154d : 28              >            plp
                        
154e : 5a                       phy
                                tst_y 1,0
154f : 08              >            php         ;save flags
1550 : c001            >            cpy #1     ;test result
                       >            trap_ne
1552 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
1554 : 200440          >        jsr report_error
                       >
1557 :                 >skip0161
                       >
1557 : 68              >            pla         ;load status
1558 : 48              >            pha
                       >            cmp_flag 0
1559 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
155b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
155d : 200440          >        jsr report_error
                       >
1560 :                 >skip0164
                       >
1560 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
1561 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1563 : 48              >            pha         ;use stack to load status
1564 : a000            >            ldy #0     ;precharge index y
1566 : 28              >            plp
                        
1567 : 5a                       phy
                                tst_y 0,$ff
1568 : 08              >            php         ;save flags
1569 : c000            >            cpy #0     ;test result
                       >            trap_ne
156b : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
156d : 200440          >        jsr report_error
                       >
1570 :                 >skip0169
                       >
1570 : 68              >            pla         ;load status
1571 : 48              >            pha
                       >            cmp_flag $ff
1572 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1574 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
1576 : 200440          >        jsr report_error
                       >
1579 :                 >skip0172
                       >
1579 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
157a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
157c : 48              >            pha         ;use stack to load status
157d : a0ff            >            ldy #$ff     ;precharge index y
157f : 28              >            plp
                        
1580 : 5a                       phy
                                tst_y $ff,0
1581 : 08              >            php         ;save flags
1582 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1584 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
1586 : 200440          >        jsr report_error
                       >
1589 :                 >skip0177
                       >
1589 : 68              >            pla         ;load status
158a : 48              >            pha
                       >            cmp_flag 0
158b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
158d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
158f : 200440          >        jsr report_error
                       >
1592 :                 >skip0180
                       >
1592 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
1593 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1595 : 48              >            pha         ;use stack to load status
1596 : a000            >            ldy #0     ;precharge index y
1598 : 28              >            plp
                        
1599 : 7a                       ply
                                tst_y $ff,$ff-zero
159a : 08              >            php         ;save flags
159b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
159d : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
159f : 200440          >        jsr report_error
                       >
15a2 :                 >skip0185
                       >
15a2 : 68              >            pla         ;load status
15a3 : 48              >            pha
                       >            cmp_flag $ff-zero
15a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
15a8 : 200440          >        jsr report_error
                       >
15ab :                 >skip0188
                       >
15ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
15ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15ae : 48              >            pha         ;use stack to load status
15af : a0ff            >            ldy #$ff     ;precharge index y
15b1 : 28              >            plp
                        
15b2 : 7a                       ply
                                tst_y 0,zero
15b3 : 08              >            php         ;save flags
15b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
15b6 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
15b8 : 200440          >        jsr report_error
                       >
15bb :                 >skip0193
                       >
15bb : 68              >            pla         ;load status
15bc : 48              >            pha
                       >            cmp_flag zero
15bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
15c1 : 200440          >        jsr report_error
                       >
15c4 :                 >skip0196
                       >
15c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
15c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15c7 : 48              >            pha         ;use stack to load status
15c8 : a0fe            >            ldy #$fe     ;precharge index y
15ca : 28              >            plp
                        
15cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
15cc : 08              >            php         ;save flags
15cd : c001            >            cpy #1     ;test result
                       >            trap_ne
15cf : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
15d1 : 200440          >        jsr report_error
                       >
15d4 :                 >skip0201
                       >
15d4 : 68              >            pla         ;load status
15d5 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
15d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
15da : 200440          >        jsr report_error
                       >
15dd :                 >skip0204
                       >
15dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
15de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15e0 : 48              >            pha         ;use stack to load status
15e1 : a000            >            ldy #0     ;precharge index y
15e3 : 28              >            plp
                        
15e4 : 7a                       ply
                                tst_y $ff,minus
15e5 : 08              >            php         ;save flags
15e6 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
15e8 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
15ea : 200440          >        jsr report_error
                       >
15ed :                 >skip0209
                       >
15ed : 68              >            pla         ;load status
15ee : 48              >            pha
                       >            cmp_flag minus
15ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
15f3 : 200440          >        jsr report_error
                       >
15f6 :                 >skip0212
                       >
15f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
15f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15f9 : 48              >            pha         ;use stack to load status
15fa : a0ff            >            ldy #$ff     ;precharge index y
15fc : 28              >            plp
                        
15fd : 7a                       ply
                                tst_y 0,$ff-minus
15fe : 08              >            php         ;save flags
15ff : c000            >            cpy #0     ;test result
                       >            trap_ne
1601 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
1603 : 200440          >        jsr report_error
                       >
1606 :                 >skip0217
                       >
1606 : 68              >            pla         ;load status
1607 : 48              >            pha
                       >            cmp_flag $ff-minus
1608 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
160a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
160c : 200440          >        jsr report_error
                       >
160f :                 >skip0220
                       >
160f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
1610 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1612 : 48              >            pha         ;use stack to load status
1613 : a0fe            >            ldy #$fe     ;precharge index y
1615 : 28              >            plp
                        
1616 : 7a                       ply
                                tst_y 1,0
1617 : 08              >            php         ;save flags
1618 : c001            >            cpy #1     ;test result
                       >            trap_ne
161a : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
161c : 200440          >        jsr report_error
                       >
161f :                 >skip0225
                       >
161f : 68              >            pla         ;load status
1620 : 48              >            pha
                       >            cmp_flag 0
1621 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1623 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
1625 : 200440          >        jsr report_error
                       >
1628 :                 >skip0228
                       >
1628 : 28              >            plp         ;restore status
                        
1629 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
162b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
162d : 200440          >        jsr report_error
                       >
1630 :                 >skip0230
                        
                                next_test            
1630 : ad0211          >            lda test_case   ;previous test
1633 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1635 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
1637 : 200440          >        jsr report_error
                       >
163a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
163a : a904            >            lda #test_num   ;*** next tests' number
163c : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
163f : a281                     ldx #$81        ;protect unused registers
1641 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
1643 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1645 : 48              >            pha         ;use stack to load status
1646 : a900            >            lda #0     ;precharge accu
1648 : 28              >            plp
                        
1649 : 8003                     bra br1         ;branch should always be taken
                                trap 
164b : 200440          >        jsr report_error
                        
164e :                  br1
                                tst_a 0,$ff
164e : 08              >            php         ;save flags
164f : c900            >            cmp #0     ;test result
                       >            trap_ne
1651 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
1653 : 200440          >        jsr report_error
                       >
1656 :                 >skip0239
                       >
1656 : 68              >            pla         ;load status
1657 : 48              >            pha
                       >            cmp_flag $ff
1658 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
165a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
165c : 200440          >        jsr report_error
                       >
165f :                 >skip0242
                       >
165f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
1660 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1662 : 48              >            pha         ;use stack to load status
1663 : a9ff            >            lda #$ff     ;precharge accu
1665 : 28              >            plp
                        
1666 : 8003                     bra br2         ;branch should always be taken
                                trap 
1668 : 200440          >        jsr report_error
                        
166b :                  br2
                                tst_a $ff,0
166b : 08              >            php         ;save flags
166c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
166e : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
1670 : 200440          >        jsr report_error
                       >
1673 :                 >skip0248
                       >
1673 : 68              >            pla         ;load status
1674 : 48              >            pha
                       >            cmp_flag 0
1675 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1677 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
1679 : 200440          >        jsr report_error
                       >
167c :                 >skip0251
                       >
167c : 28              >            plp         ;restore status
                        
167d : e081                     cpx #$81
                                trap_ne
167f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
1681 : 200440          >        jsr report_error
                       >
1684 :                 >skip0253
                        
1684 : c07e                     cpy #$7e
                                trap_ne
1686 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
1688 : 200440          >        jsr report_error
                       >
168b :                 >skip0255
                        
                                next_test            
168b : ad0211          >            lda test_case   ;previous test
168e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1690 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
1692 : 200440          >        jsr report_error
                       >
1695 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
1695 : a905            >            lda #test_num   ;*** next tests' number
1697 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
169a : a000                     ldy #0          ;branch range test  
169c : 8076                     bra bra0
                                
169e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
16a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
16a2 : 200440          >        jsr report_error
                       >
16a5 :                 >skip0260
                        
16a5 : c8                       iny        
16a6 : 8062                     bra bra2
                                        
16a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
16aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
16ac : 200440          >        jsr report_error
                       >
16af :                 >skip0262
                        
16af : c8                       iny        
16b0 : 804e                     bra bra4
                                        
16b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
16b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
16b6 : 200440          >        jsr report_error
                       >
16b9 :                 >skip0264
                        
16b9 : c8                       iny        
16ba : a000                     ldy #0
16bc : 8004                     bra brf0
                                
16be : c8                       iny
16bf : c8                       iny
16c0 : c8                       iny
16c1 : c8                       iny        
16c2 : 8003             brf0    bra brf1
                        
16c4 : c8                       iny
16c5 : c8                       iny
16c6 : c8                       iny
16c7 : c8               brf1    iny        
16c8 : 8002                     bra brf2
                                
16ca : c8                       iny
16cb : c8                       iny
16cc : c8               brf2    iny
16cd : c8                       iny        
16ce : 8001                     bra brf3
                                
16d0 : c8                       iny
16d1 : c8               brf3    iny
16d2 : c8                       iny
16d3 : c8                       iny        
16d4 : 8000                     bra brf4
                                
16d6 : c8               brf4    iny
16d7 : c8                       iny
16d8 : c8                       iny
16d9 : c8                       iny
16da : c00a                     cpy #10
                                trap_ne     ;short range forward
16dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
16de : 200440          >        jsr report_error
                       >
16e1 :                 >skip0266
                        
16e1 : 8012                     bra brb0
                        
16e3 : 88               brb4    dey
16e4 : 88                       dey
16e5 : 88                       dey
16e6 : 88                       dey
16e7 : 800e                     bra brb5        
                        
16e9 : 88               brb3    dey
16ea : 88                       dey
16eb : 88                       dey
16ec : 80f5                     bra brb4        
                        
16ee : 88               brb2    dey
16ef : 88                       dey
16f0 : 80f7                     bra brb3        
                        
16f2 : 88               brb1    dey
16f3 : 80f9                     bra brb2        
                        
16f5 : 80fb             brb0    bra brb1        
                        
16f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
16f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
16fb : 200440          >        jsr report_error
                       >
16fe :                 >skip0268
                        
16fe : 801e                     bra bra6
                        
1700 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
1702 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
1704 : 200440          >        jsr report_error
                       >
1707 :                 >skip0270
                        
1707 : c8                       iny        
1708 : 80a8                     bra bra5
                                        
170a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
170c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
170e : 200440          >        jsr report_error
                       >
1711 :                 >skip0272
                        
1711 : c8                       iny        
1712 : 8094                     bra bra3
                                        
1714 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
1716 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
1718 : 200440          >        jsr report_error
                       >
171b :                 >skip0274
                        
171b : c8                       iny        
171c : 8080                     bra bra1
                                        
171e :                  bra6
                                next_test
171e : ad0211          >            lda test_case   ;previous test
1721 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1723 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
1725 : 200440          >        jsr report_error
                       >
1728 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
1728 : a906            >            lda #test_num   ;*** next tests' number
172a : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
                                ldx #$11        ;test bbr/bbs integrity
                                ldy #$22
                                bbt 0
                                bbt 1
                                bbt 2
                                bbt 3
                                bbt 4
                                bbt 5
                                bbt 6
                                bbt 7
                                cpx #$11
                                trap_ne         ;x overwritten
                                cpy #$22
                                trap_ne         ;y overwritten
                                next_test 
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
                                lda #0          ;combined bit test
                                sta zpt
                        bbcl    lda #0
                                bbrc 0
                                bbrc 1
                                bbrc 2
                                bbrc 3
                                bbrc 4
                                bbrc 5
                                bbrc 6
                                bbrc 7
                                eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
                                lda #$ff
                                bbsc 0
                                bbsc 1
                                bbsc 2
                                bbsc 3
                                bbsc 4
                                bbsc 5
                                bbsc 6
                                bbsc 7
                                eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
                                inc zpt
                                bne bbcl
                                next_test            
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                        
                            if skip_nop = 0
                                nop_test $02,2
172d : a042            >            ldy #$42
172f : a202            >            ldx #4-2
1731 : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1732 : c8              >            iny
1733 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1734 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1735 : f003            >        beq skip0280
                       >        trap            ;failed not equal (non zero)
1737 : 200440          >        jsr report_error
                       >
173a :                 >skip0280
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
173a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
173c : 48              >            pha         ;use stack to load status
173d : a9fd            >            lda #$ff-$02     ;precharge accu
173f : 28              >            plp
                       >
1740 : 02              >            db  $02          ;test nop integrity - flags off
1741 : ea              >            nop
1742 : ea              >            nop
                       >            tst_a $ff-$02,0
1743 : 08              >            php         ;save flags
1744 : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
1746 : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
1748 : 200440          >        jsr report_error
                       >
174b :                 >skip0285
                       >
174b : 68              >            pla         ;load status
174c : 48              >            pha
                       >            cmp_flag 0
174d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
174f : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
1751 : 200440          >        jsr report_error
                       >
1754 :                 >skip0288
                       >
1754 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
1755 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1757 : 48              >            pha         ;use stack to load status
1758 : a9a8            >            lda #$aa-$02     ;precharge accu
175a : 28              >            plp
                       >
175b : 02              >            db  $02          ;test nop integrity - flags on
175c : ea              >            nop
175d : ea              >            nop
                       >            tst_a $aa-$02,$ff
175e : 08              >            php         ;save flags
175f : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
1761 : f003            >        beq skip0293
                       >        trap            ;failed not equal (non zero)
1763 : 200440          >        jsr report_error
                       >
1766 :                 >skip0293
                       >
1766 : 68              >            pla         ;load status
1767 : 48              >            pha
                       >            cmp_flag $ff
1768 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
176a : f003            >        beq skip0296
                       >        trap            ;failed not equal (non zero)
176c : 200440          >        jsr report_error
                       >
176f :                 >skip0296
                       >
176f : 28              >            plp         ;restore status
                       >
1770 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1772 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
1774 : 200440          >        jsr report_error
                       >
1777 :                 >skip0298
                       >
1777 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1779 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
177b : 200440          >        jsr report_error
                       >
177e :                 >skip0300
                       >
                        
                                nop_test $22,2
177e : a042            >            ldy #$42
1780 : a202            >            ldx #4-2
1782 : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1783 : c8              >            iny
1784 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1785 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1786 : f003            >        beq skip0303
                       >        trap            ;failed not equal (non zero)
1788 : 200440          >        jsr report_error
                       >
178b :                 >skip0303
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
178b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
178d : 48              >            pha         ;use stack to load status
178e : a9dd            >            lda #$ff-$22     ;precharge accu
1790 : 28              >            plp
                       >
1791 : 22              >            db  $22          ;test nop integrity - flags off
1792 : ea              >            nop
1793 : ea              >            nop
                       >            tst_a $ff-$22,0
1794 : 08              >            php         ;save flags
1795 : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
1797 : f003            >        beq skip0308
                       >        trap            ;failed not equal (non zero)
1799 : 200440          >        jsr report_error
                       >
179c :                 >skip0308
                       >
179c : 68              >            pla         ;load status
179d : 48              >            pha
                       >            cmp_flag 0
179e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17a0 : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
17a2 : 200440          >        jsr report_error
                       >
17a5 :                 >skip0311
                       >
17a5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
17a6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17a8 : 48              >            pha         ;use stack to load status
17a9 : a988            >            lda #$aa-$22     ;precharge accu
17ab : 28              >            plp
                       >
17ac : 22              >            db  $22          ;test nop integrity - flags on
17ad : ea              >            nop
17ae : ea              >            nop
                       >            tst_a $aa-$22,$ff
17af : 08              >            php         ;save flags
17b0 : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
17b2 : f003            >        beq skip0316
                       >        trap            ;failed not equal (non zero)
17b4 : 200440          >        jsr report_error
                       >
17b7 :                 >skip0316
                       >
17b7 : 68              >            pla         ;load status
17b8 : 48              >            pha
                       >            cmp_flag $ff
17b9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17bb : f003            >        beq skip0319
                       >        trap            ;failed not equal (non zero)
17bd : 200440          >        jsr report_error
                       >
17c0 :                 >skip0319
                       >
17c0 : 28              >            plp         ;restore status
                       >
17c1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
17c3 : f003            >        beq skip0321
                       >        trap            ;failed not equal (non zero)
17c5 : 200440          >        jsr report_error
                       >
17c8 :                 >skip0321
                       >
17c8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
17ca : f003            >        beq skip0323
                       >        trap            ;failed not equal (non zero)
17cc : 200440          >        jsr report_error
                       >
17cf :                 >skip0323
                       >
                        
                                nop_test $42,2
17cf : a042            >            ldy #$42
17d1 : a202            >            ldx #4-2
17d3 : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
17d4 : c8              >            iny
17d5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
17d6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
17d7 : f003            >        beq skip0326
                       >        trap            ;failed not equal (non zero)
17d9 : 200440          >        jsr report_error
                       >
17dc :                 >skip0326
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
17dc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17de : 48              >            pha         ;use stack to load status
17df : a9bd            >            lda #$ff-$42     ;precharge accu
17e1 : 28              >            plp
                       >
17e2 : 42              >            db  $42          ;test nop integrity - flags off
17e3 : ea              >            nop
17e4 : ea              >            nop
                       >            tst_a $ff-$42,0
17e5 : 08              >            php         ;save flags
17e6 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
17e8 : f003            >        beq skip0331
                       >        trap            ;failed not equal (non zero)
17ea : 200440          >        jsr report_error
                       >
17ed :                 >skip0331
                       >
17ed : 68              >            pla         ;load status
17ee : 48              >            pha
                       >            cmp_flag 0
17ef : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17f1 : f003            >        beq skip0334
                       >        trap            ;failed not equal (non zero)
17f3 : 200440          >        jsr report_error
                       >
17f6 :                 >skip0334
                       >
17f6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
17f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17f9 : 48              >            pha         ;use stack to load status
17fa : a968            >            lda #$aa-$42     ;precharge accu
17fc : 28              >            plp
                       >
17fd : 42              >            db  $42          ;test nop integrity - flags on
17fe : ea              >            nop
17ff : ea              >            nop
                       >            tst_a $aa-$42,$ff
1800 : 08              >            php         ;save flags
1801 : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
1803 : f003            >        beq skip0339
                       >        trap            ;failed not equal (non zero)
1805 : 200440          >        jsr report_error
                       >
1808 :                 >skip0339
                       >
1808 : 68              >            pla         ;load status
1809 : 48              >            pha
                       >            cmp_flag $ff
180a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
180c : f003            >        beq skip0342
                       >        trap            ;failed not equal (non zero)
180e : 200440          >        jsr report_error
                       >
1811 :                 >skip0342
                       >
1811 : 28              >            plp         ;restore status
                       >
1812 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1814 : f003            >        beq skip0344
                       >        trap            ;failed not equal (non zero)
1816 : 200440          >        jsr report_error
                       >
1819 :                 >skip0344
                       >
1819 : e000            >            cpx #0
                       >            trap_ne         ;x changed
181b : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
181d : 200440          >        jsr report_error
                       >
1820 :                 >skip0346
                       >
                        
                                nop_test $62,2
1820 : a042            >            ldy #$42
1822 : a202            >            ldx #4-2
1824 : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1825 : c8              >            iny
1826 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1827 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1828 : f003            >        beq skip0349
                       >        trap            ;failed not equal (non zero)
182a : 200440          >        jsr report_error
                       >
182d :                 >skip0349
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
182d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
182f : 48              >            pha         ;use stack to load status
1830 : a99d            >            lda #$ff-$62     ;precharge accu
1832 : 28              >            plp
                       >
1833 : 62              >            db  $62          ;test nop integrity - flags off
1834 : ea              >            nop
1835 : ea              >            nop
                       >            tst_a $ff-$62,0
1836 : 08              >            php         ;save flags
1837 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
1839 : f003            >        beq skip0354
                       >        trap            ;failed not equal (non zero)
183b : 200440          >        jsr report_error
                       >
183e :                 >skip0354
                       >
183e : 68              >            pla         ;load status
183f : 48              >            pha
                       >            cmp_flag 0
1840 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1842 : f003            >        beq skip0357
                       >        trap            ;failed not equal (non zero)
1844 : 200440          >        jsr report_error
                       >
1847 :                 >skip0357
                       >
1847 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
1848 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
184a : 48              >            pha         ;use stack to load status
184b : a948            >            lda #$aa-$62     ;precharge accu
184d : 28              >            plp
                       >
184e : 62              >            db  $62          ;test nop integrity - flags on
184f : ea              >            nop
1850 : ea              >            nop
                       >            tst_a $aa-$62,$ff
1851 : 08              >            php         ;save flags
1852 : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
1854 : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
1856 : 200440          >        jsr report_error
                       >
1859 :                 >skip0362
                       >
1859 : 68              >            pla         ;load status
185a : 48              >            pha
                       >            cmp_flag $ff
185b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
185d : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
185f : 200440          >        jsr report_error
                       >
1862 :                 >skip0365
                       >
1862 : 28              >            plp         ;restore status
                       >
1863 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1865 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
1867 : 200440          >        jsr report_error
                       >
186a :                 >skip0367
                       >
186a : e000            >            cpx #0
                       >            trap_ne         ;x changed
186c : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
186e : 200440          >        jsr report_error
                       >
1871 :                 >skip0369
                       >
                        
                                nop_test $82,2
1871 : a042            >            ldy #$42
1873 : a202            >            ldx #4-2
1875 : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1876 : c8              >            iny
1877 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1878 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1879 : f003            >        beq skip0372
                       >        trap            ;failed not equal (non zero)
187b : 200440          >        jsr report_error
                       >
187e :                 >skip0372
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
187e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1880 : 48              >            pha         ;use stack to load status
1881 : a97d            >            lda #$ff-$82     ;precharge accu
1883 : 28              >            plp
                       >
1884 : 82              >            db  $82          ;test nop integrity - flags off
1885 : ea              >            nop
1886 : ea              >            nop
                       >            tst_a $ff-$82,0
1887 : 08              >            php         ;save flags
1888 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
188a : f003            >        beq skip0377
                       >        trap            ;failed not equal (non zero)
188c : 200440          >        jsr report_error
                       >
188f :                 >skip0377
                       >
188f : 68              >            pla         ;load status
1890 : 48              >            pha
                       >            cmp_flag 0
1891 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1893 : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
1895 : 200440          >        jsr report_error
                       >
1898 :                 >skip0380
                       >
1898 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
1899 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
189b : 48              >            pha         ;use stack to load status
189c : a928            >            lda #$aa-$82     ;precharge accu
189e : 28              >            plp
                       >
189f : 82              >            db  $82          ;test nop integrity - flags on
18a0 : ea              >            nop
18a1 : ea              >            nop
                       >            tst_a $aa-$82,$ff
18a2 : 08              >            php         ;save flags
18a3 : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
18a5 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
18a7 : 200440          >        jsr report_error
                       >
18aa :                 >skip0385
                       >
18aa : 68              >            pla         ;load status
18ab : 48              >            pha
                       >            cmp_flag $ff
18ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18ae : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
18b0 : 200440          >        jsr report_error
                       >
18b3 :                 >skip0388
                       >
18b3 : 28              >            plp         ;restore status
                       >
18b4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
18b6 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
18b8 : 200440          >        jsr report_error
                       >
18bb :                 >skip0390
                       >
18bb : e000            >            cpx #0
                       >            trap_ne         ;x changed
18bd : f003            >        beq skip0392
                       >        trap            ;failed not equal (non zero)
18bf : 200440          >        jsr report_error
                       >
18c2 :                 >skip0392
                       >
                        
                                nop_test $c2,2
18c2 : a042            >            ldy #$42
18c4 : a202            >            ldx #4-2
18c6 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
18c7 : c8              >            iny
18c8 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
18c9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
18ca : f003            >        beq skip0395
                       >        trap            ;failed not equal (non zero)
18cc : 200440          >        jsr report_error
                       >
18cf :                 >skip0395
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
18cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
18d1 : 48              >            pha         ;use stack to load status
18d2 : a93d            >            lda #$ff-$c2     ;precharge accu
18d4 : 28              >            plp
                       >
18d5 : c2              >            db  $c2          ;test nop integrity - flags off
18d6 : ea              >            nop
18d7 : ea              >            nop
                       >            tst_a $ff-$c2,0
18d8 : 08              >            php         ;save flags
18d9 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
18db : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
18dd : 200440          >        jsr report_error
                       >
18e0 :                 >skip0400
                       >
18e0 : 68              >            pla         ;load status
18e1 : 48              >            pha
                       >            cmp_flag 0
18e2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18e4 : f003            >        beq skip0403
                       >        trap            ;failed not equal (non zero)
18e6 : 200440          >        jsr report_error
                       >
18e9 :                 >skip0403
                       >
18e9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
18ea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
18ec : 48              >            pha         ;use stack to load status
18ed : a9e8            >            lda #$aa-$c2     ;precharge accu
18ef : 28              >            plp
                       >
18f0 : c2              >            db  $c2          ;test nop integrity - flags on
18f1 : ea              >            nop
18f2 : ea              >            nop
                       >            tst_a $aa-$c2,$ff
18f3 : 08              >            php         ;save flags
18f4 : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
18f6 : f003            >        beq skip0408
                       >        trap            ;failed not equal (non zero)
18f8 : 200440          >        jsr report_error
                       >
18fb :                 >skip0408
                       >
18fb : 68              >            pla         ;load status
18fc : 48              >            pha
                       >            cmp_flag $ff
18fd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18ff : f003            >        beq skip0411
                       >        trap            ;failed not equal (non zero)
1901 : 200440          >        jsr report_error
                       >
1904 :                 >skip0411
                       >
1904 : 28              >            plp         ;restore status
                       >
1905 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1907 : f003            >        beq skip0413
                       >        trap            ;failed not equal (non zero)
1909 : 200440          >        jsr report_error
                       >
190c :                 >skip0413
                       >
190c : e000            >            cpx #0
                       >            trap_ne         ;x changed
190e : f003            >        beq skip0415
                       >        trap            ;failed not equal (non zero)
1910 : 200440          >        jsr report_error
                       >
1913 :                 >skip0415
                       >
                        
                                nop_test $e2,2
1913 : a042            >            ldy #$42
1915 : a202            >            ldx #4-2
1917 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1918 : c8              >            iny
1919 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
191a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
191b : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
191d : 200440          >        jsr report_error
                       >
1920 :                 >skip0418
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
1920 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1922 : 48              >            pha         ;use stack to load status
1923 : a91d            >            lda #$ff-$e2     ;precharge accu
1925 : 28              >            plp
                       >
1926 : e2              >            db  $e2          ;test nop integrity - flags off
1927 : ea              >            nop
1928 : ea              >            nop
                       >            tst_a $ff-$e2,0
1929 : 08              >            php         ;save flags
192a : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
192c : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
192e : 200440          >        jsr report_error
                       >
1931 :                 >skip0423
                       >
1931 : 68              >            pla         ;load status
1932 : 48              >            pha
                       >            cmp_flag 0
1933 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1935 : f003            >        beq skip0426
                       >        trap            ;failed not equal (non zero)
1937 : 200440          >        jsr report_error
                       >
193a :                 >skip0426
                       >
193a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
193b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
193d : 48              >            pha         ;use stack to load status
193e : a9c8            >            lda #$aa-$e2     ;precharge accu
1940 : 28              >            plp
                       >
1941 : e2              >            db  $e2          ;test nop integrity - flags on
1942 : ea              >            nop
1943 : ea              >            nop
                       >            tst_a $aa-$e2,$ff
1944 : 08              >            php         ;save flags
1945 : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
1947 : f003            >        beq skip0431
                       >        trap            ;failed not equal (non zero)
1949 : 200440          >        jsr report_error
                       >
194c :                 >skip0431
                       >
194c : 68              >            pla         ;load status
194d : 48              >            pha
                       >            cmp_flag $ff
194e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1950 : f003            >        beq skip0434
                       >        trap            ;failed not equal (non zero)
1952 : 200440          >        jsr report_error
                       >
1955 :                 >skip0434
                       >
1955 : 28              >            plp         ;restore status
                       >
1956 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1958 : f003            >        beq skip0436
                       >        trap            ;failed not equal (non zero)
195a : 200440          >        jsr report_error
                       >
195d :                 >skip0436
                       >
195d : e000            >            cpx #0
                       >            trap_ne         ;x changed
195f : f003            >        beq skip0438
                       >        trap            ;failed not equal (non zero)
1961 : 200440          >        jsr report_error
                       >
1964 :                 >skip0438
                       >
                        
                                nop_test $44,2
1964 : a042            >            ldy #$42
1966 : a202            >            ldx #4-2
1968 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1969 : c8              >            iny
196a : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
196b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
196c : f003            >        beq skip0441
                       >        trap            ;failed not equal (non zero)
196e : 200440          >        jsr report_error
                       >
1971 :                 >skip0441
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
1971 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1973 : 48              >            pha         ;use stack to load status
1974 : a9bb            >            lda #$ff-$44     ;precharge accu
1976 : 28              >            plp
                       >
1977 : 44              >            db  $44          ;test nop integrity - flags off
1978 : ea              >            nop
1979 : ea              >            nop
                       >            tst_a $ff-$44,0
197a : 08              >            php         ;save flags
197b : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
197d : f003            >        beq skip0446
                       >        trap            ;failed not equal (non zero)
197f : 200440          >        jsr report_error
                       >
1982 :                 >skip0446
                       >
1982 : 68              >            pla         ;load status
1983 : 48              >            pha
                       >            cmp_flag 0
1984 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1986 : f003            >        beq skip0449
                       >        trap            ;failed not equal (non zero)
1988 : 200440          >        jsr report_error
                       >
198b :                 >skip0449
                       >
198b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
198c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
198e : 48              >            pha         ;use stack to load status
198f : a966            >            lda #$aa-$44     ;precharge accu
1991 : 28              >            plp
                       >
1992 : 44              >            db  $44          ;test nop integrity - flags on
1993 : ea              >            nop
1994 : ea              >            nop
                       >            tst_a $aa-$44,$ff
1995 : 08              >            php         ;save flags
1996 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
1998 : f003            >        beq skip0454
                       >        trap            ;failed not equal (non zero)
199a : 200440          >        jsr report_error
                       >
199d :                 >skip0454
                       >
199d : 68              >            pla         ;load status
199e : 48              >            pha
                       >            cmp_flag $ff
199f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19a1 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
19a3 : 200440          >        jsr report_error
                       >
19a6 :                 >skip0457
                       >
19a6 : 28              >            plp         ;restore status
                       >
19a7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
19a9 : f003            >        beq skip0459
                       >        trap            ;failed not equal (non zero)
19ab : 200440          >        jsr report_error
                       >
19ae :                 >skip0459
                       >
19ae : e000            >            cpx #0
                       >            trap_ne         ;x changed
19b0 : f003            >        beq skip0461
                       >        trap            ;failed not equal (non zero)
19b2 : 200440          >        jsr report_error
                       >
19b5 :                 >skip0461
                       >
                        
                                nop_test $54,2
19b5 : a042            >            ldy #$42
19b7 : a202            >            ldx #4-2
19b9 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
19ba : c8              >            iny
19bb : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
19bc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
19bd : f003            >        beq skip0464
                       >        trap            ;failed not equal (non zero)
19bf : 200440          >        jsr report_error
                       >
19c2 :                 >skip0464
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
19c2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
19c4 : 48              >            pha         ;use stack to load status
19c5 : a9ab            >            lda #$ff-$54     ;precharge accu
19c7 : 28              >            plp
                       >
19c8 : 54              >            db  $54          ;test nop integrity - flags off
19c9 : ea              >            nop
19ca : ea              >            nop
                       >            tst_a $ff-$54,0
19cb : 08              >            php         ;save flags
19cc : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
19ce : f003            >        beq skip0469
                       >        trap            ;failed not equal (non zero)
19d0 : 200440          >        jsr report_error
                       >
19d3 :                 >skip0469
                       >
19d3 : 68              >            pla         ;load status
19d4 : 48              >            pha
                       >            cmp_flag 0
19d5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19d7 : f003            >        beq skip0472
                       >        trap            ;failed not equal (non zero)
19d9 : 200440          >        jsr report_error
                       >
19dc :                 >skip0472
                       >
19dc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
19dd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19df : 48              >            pha         ;use stack to load status
19e0 : a956            >            lda #$aa-$54     ;precharge accu
19e2 : 28              >            plp
                       >
19e3 : 54              >            db  $54          ;test nop integrity - flags on
19e4 : ea              >            nop
19e5 : ea              >            nop
                       >            tst_a $aa-$54,$ff
19e6 : 08              >            php         ;save flags
19e7 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
19e9 : f003            >        beq skip0477
                       >        trap            ;failed not equal (non zero)
19eb : 200440          >        jsr report_error
                       >
19ee :                 >skip0477
                       >
19ee : 68              >            pla         ;load status
19ef : 48              >            pha
                       >            cmp_flag $ff
19f0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19f2 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
19f4 : 200440          >        jsr report_error
                       >
19f7 :                 >skip0480
                       >
19f7 : 28              >            plp         ;restore status
                       >
19f8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
19fa : f003            >        beq skip0482
                       >        trap            ;failed not equal (non zero)
19fc : 200440          >        jsr report_error
                       >
19ff :                 >skip0482
                       >
19ff : e000            >            cpx #0
                       >            trap_ne         ;x changed
1a01 : f003            >        beq skip0484
                       >        trap            ;failed not equal (non zero)
1a03 : 200440          >        jsr report_error
                       >
1a06 :                 >skip0484
                       >
                        
                                nop_test $d4,2
1a06 : a042            >            ldy #$42
1a08 : a202            >            ldx #4-2
1a0a : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1a0b : c8              >            iny
1a0c : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1a0d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1a0e : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
1a10 : 200440          >        jsr report_error
                       >
1a13 :                 >skip0487
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
1a13 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a15 : 48              >            pha         ;use stack to load status
1a16 : a92b            >            lda #$ff-$d4     ;precharge accu
1a18 : 28              >            plp
                       >
1a19 : d4              >            db  $d4          ;test nop integrity - flags off
1a1a : ea              >            nop
1a1b : ea              >            nop
                       >            tst_a $ff-$d4,0
1a1c : 08              >            php         ;save flags
1a1d : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
1a1f : f003            >        beq skip0492
                       >        trap            ;failed not equal (non zero)
1a21 : 200440          >        jsr report_error
                       >
1a24 :                 >skip0492
                       >
1a24 : 68              >            pla         ;load status
1a25 : 48              >            pha
                       >            cmp_flag 0
1a26 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a28 : f003            >        beq skip0495
                       >        trap            ;failed not equal (non zero)
1a2a : 200440          >        jsr report_error
                       >
1a2d :                 >skip0495
                       >
1a2d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
1a2e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1a30 : 48              >            pha         ;use stack to load status
1a31 : a9d6            >            lda #$aa-$d4     ;precharge accu
1a33 : 28              >            plp
                       >
1a34 : d4              >            db  $d4          ;test nop integrity - flags on
1a35 : ea              >            nop
1a36 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
1a37 : 08              >            php         ;save flags
1a38 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
1a3a : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
1a3c : 200440          >        jsr report_error
                       >
1a3f :                 >skip0500
                       >
1a3f : 68              >            pla         ;load status
1a40 : 48              >            pha
                       >            cmp_flag $ff
1a41 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a43 : f003            >        beq skip0503
                       >        trap            ;failed not equal (non zero)
1a45 : 200440          >        jsr report_error
                       >
1a48 :                 >skip0503
                       >
1a48 : 28              >            plp         ;restore status
                       >
1a49 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1a4b : f003            >        beq skip0505
                       >        trap            ;failed not equal (non zero)
1a4d : 200440          >        jsr report_error
                       >
1a50 :                 >skip0505
                       >
1a50 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1a52 : f003            >        beq skip0507
                       >        trap            ;failed not equal (non zero)
1a54 : 200440          >        jsr report_error
                       >
1a57 :                 >skip0507
                       >
                        
                                nop_test $f4,2
1a57 : a042            >            ldy #$42
1a59 : a202            >            ldx #4-2
1a5b : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1a5c : c8              >            iny
1a5d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1a5e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1a5f : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
1a61 : 200440          >        jsr report_error
                       >
1a64 :                 >skip0510
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
1a64 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a66 : 48              >            pha         ;use stack to load status
1a67 : a90b            >            lda #$ff-$f4     ;precharge accu
1a69 : 28              >            plp
                       >
1a6a : f4              >            db  $f4          ;test nop integrity - flags off
1a6b : ea              >            nop
1a6c : ea              >            nop
                       >            tst_a $ff-$f4,0
1a6d : 08              >            php         ;save flags
1a6e : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
1a70 : f003            >        beq skip0515
                       >        trap            ;failed not equal (non zero)
1a72 : 200440          >        jsr report_error
                       >
1a75 :                 >skip0515
                       >
1a75 : 68              >            pla         ;load status
1a76 : 48              >            pha
                       >            cmp_flag 0
1a77 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a79 : f003            >        beq skip0518
                       >        trap            ;failed not equal (non zero)
1a7b : 200440          >        jsr report_error
                       >
1a7e :                 >skip0518
                       >
1a7e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
1a7f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1a81 : 48              >            pha         ;use stack to load status
1a82 : a9b6            >            lda #$aa-$f4     ;precharge accu
1a84 : 28              >            plp
                       >
1a85 : f4              >            db  $f4          ;test nop integrity - flags on
1a86 : ea              >            nop
1a87 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
1a88 : 08              >            php         ;save flags
1a89 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
1a8b : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
1a8d : 200440          >        jsr report_error
                       >
1a90 :                 >skip0523
                       >
1a90 : 68              >            pla         ;load status
1a91 : 48              >            pha
                       >            cmp_flag $ff
1a92 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a94 : f003            >        beq skip0526
                       >        trap            ;failed not equal (non zero)
1a96 : 200440          >        jsr report_error
                       >
1a99 :                 >skip0526
                       >
1a99 : 28              >            plp         ;restore status
                       >
1a9a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1a9c : f003            >        beq skip0528
                       >        trap            ;failed not equal (non zero)
1a9e : 200440          >        jsr report_error
                       >
1aa1 :                 >skip0528
                       >
1aa1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1aa3 : f003            >        beq skip0530
                       >        trap            ;failed not equal (non zero)
1aa5 : 200440          >        jsr report_error
                       >
1aa8 :                 >skip0530
                       >
                        
                                nop_test $5c,3
1aa8 : a042            >            ldy #$42
1aaa : a201            >            ldx #4-3
1aac : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1aad : c8              >            iny
1aae : c8              >            iny
                       >        endif
1aaf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ab0 : f003            >        beq skip0533
                       >        trap            ;failed not equal (non zero)
1ab2 : 200440          >        jsr report_error
                       >
1ab5 :                 >skip0533
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
1ab5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ab7 : 48              >            pha         ;use stack to load status
1ab8 : a9a3            >            lda #$ff-$5c     ;precharge accu
1aba : 28              >            plp
                       >
1abb : 5c              >            db  $5c          ;test nop integrity - flags off
1abc : ea              >            nop
1abd : ea              >            nop
                       >            tst_a $ff-$5c,0
1abe : 08              >            php         ;save flags
1abf : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
1ac1 : f003            >        beq skip0538
                       >        trap            ;failed not equal (non zero)
1ac3 : 200440          >        jsr report_error
                       >
1ac6 :                 >skip0538
                       >
1ac6 : 68              >            pla         ;load status
1ac7 : 48              >            pha
                       >            cmp_flag 0
1ac8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aca : f003            >        beq skip0541
                       >        trap            ;failed not equal (non zero)
1acc : 200440          >        jsr report_error
                       >
1acf :                 >skip0541
                       >
1acf : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
1ad0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ad2 : 48              >            pha         ;use stack to load status
1ad3 : a94e            >            lda #$aa-$5c     ;precharge accu
1ad5 : 28              >            plp
                       >
1ad6 : 5c              >            db  $5c          ;test nop integrity - flags on
1ad7 : ea              >            nop
1ad8 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
1ad9 : 08              >            php         ;save flags
1ada : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
1adc : f003            >        beq skip0546
                       >        trap            ;failed not equal (non zero)
1ade : 200440          >        jsr report_error
                       >
1ae1 :                 >skip0546
                       >
1ae1 : 68              >            pla         ;load status
1ae2 : 48              >            pha
                       >            cmp_flag $ff
1ae3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ae5 : f003            >        beq skip0549
                       >        trap            ;failed not equal (non zero)
1ae7 : 200440          >        jsr report_error
                       >
1aea :                 >skip0549
                       >
1aea : 28              >            plp         ;restore status
                       >
1aeb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1aed : f003            >        beq skip0551
                       >        trap            ;failed not equal (non zero)
1aef : 200440          >        jsr report_error
                       >
1af2 :                 >skip0551
                       >
1af2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1af4 : f003            >        beq skip0553
                       >        trap            ;failed not equal (non zero)
1af6 : 200440          >        jsr report_error
                       >
1af9 :                 >skip0553
                       >
                        
                                nop_test $dc,3
1af9 : a042            >            ldy #$42
1afb : a201            >            ldx #4-3
1afd : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1afe : c8              >            iny
1aff : c8              >            iny
                       >        endif
1b00 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b01 : f003            >        beq skip0556
                       >        trap            ;failed not equal (non zero)
1b03 : 200440          >        jsr report_error
                       >
1b06 :                 >skip0556
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
1b06 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b08 : 48              >            pha         ;use stack to load status
1b09 : a923            >            lda #$ff-$dc     ;precharge accu
1b0b : 28              >            plp
                       >
1b0c : dc              >            db  $dc          ;test nop integrity - flags off
1b0d : ea              >            nop
1b0e : ea              >            nop
                       >            tst_a $ff-$dc,0
1b0f : 08              >            php         ;save flags
1b10 : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
1b12 : f003            >        beq skip0561
                       >        trap            ;failed not equal (non zero)
1b14 : 200440          >        jsr report_error
                       >
1b17 :                 >skip0561
                       >
1b17 : 68              >            pla         ;load status
1b18 : 48              >            pha
                       >            cmp_flag 0
1b19 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b1b : f003            >        beq skip0564
                       >        trap            ;failed not equal (non zero)
1b1d : 200440          >        jsr report_error
                       >
1b20 :                 >skip0564
                       >
1b20 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
1b21 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b23 : 48              >            pha         ;use stack to load status
1b24 : a9ce            >            lda #$aa-$dc     ;precharge accu
1b26 : 28              >            plp
                       >
1b27 : dc              >            db  $dc          ;test nop integrity - flags on
1b28 : ea              >            nop
1b29 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
1b2a : 08              >            php         ;save flags
1b2b : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
1b2d : f003            >        beq skip0569
                       >        trap            ;failed not equal (non zero)
1b2f : 200440          >        jsr report_error
                       >
1b32 :                 >skip0569
                       >
1b32 : 68              >            pla         ;load status
1b33 : 48              >            pha
                       >            cmp_flag $ff
1b34 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b36 : f003            >        beq skip0572
                       >        trap            ;failed not equal (non zero)
1b38 : 200440          >        jsr report_error
                       >
1b3b :                 >skip0572
                       >
1b3b : 28              >            plp         ;restore status
                       >
1b3c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b3e : f003            >        beq skip0574
                       >        trap            ;failed not equal (non zero)
1b40 : 200440          >        jsr report_error
                       >
1b43 :                 >skip0574
                       >
1b43 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b45 : f003            >        beq skip0576
                       >        trap            ;failed not equal (non zero)
1b47 : 200440          >        jsr report_error
                       >
1b4a :                 >skip0576
                       >
                        
                                nop_test $fc,3
1b4a : a042            >            ldy #$42
1b4c : a201            >            ldx #4-3
1b4e : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1b4f : c8              >            iny
1b50 : c8              >            iny
                       >        endif
1b51 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b52 : f003            >        beq skip0579
                       >        trap            ;failed not equal (non zero)
1b54 : 200440          >        jsr report_error
                       >
1b57 :                 >skip0579
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
1b57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b59 : 48              >            pha         ;use stack to load status
1b5a : a903            >            lda #$ff-$fc     ;precharge accu
1b5c : 28              >            plp
                       >
1b5d : fc              >            db  $fc          ;test nop integrity - flags off
1b5e : ea              >            nop
1b5f : ea              >            nop
                       >            tst_a $ff-$fc,0
1b60 : 08              >            php         ;save flags
1b61 : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
1b63 : f003            >        beq skip0584
                       >        trap            ;failed not equal (non zero)
1b65 : 200440          >        jsr report_error
                       >
1b68 :                 >skip0584
                       >
1b68 : 68              >            pla         ;load status
1b69 : 48              >            pha
                       >            cmp_flag 0
1b6a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b6c : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
1b6e : 200440          >        jsr report_error
                       >
1b71 :                 >skip0587
                       >
1b71 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
1b72 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b74 : 48              >            pha         ;use stack to load status
1b75 : a9ae            >            lda #$aa-$fc     ;precharge accu
1b77 : 28              >            plp
                       >
1b78 : fc              >            db  $fc          ;test nop integrity - flags on
1b79 : ea              >            nop
1b7a : ea              >            nop
                       >            tst_a $aa-$fc,$ff
1b7b : 08              >            php         ;save flags
1b7c : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
1b7e : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
1b80 : 200440          >        jsr report_error
                       >
1b83 :                 >skip0592
                       >
1b83 : 68              >            pla         ;load status
1b84 : 48              >            pha
                       >            cmp_flag $ff
1b85 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b87 : f003            >        beq skip0595
                       >        trap            ;failed not equal (non zero)
1b89 : 200440          >        jsr report_error
                       >
1b8c :                 >skip0595
                       >
1b8c : 28              >            plp         ;restore status
                       >
1b8d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b8f : f003            >        beq skip0597
                       >        trap            ;failed not equal (non zero)
1b91 : 200440          >        jsr report_error
                       >
1b94 :                 >skip0597
                       >
1b94 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b96 : f003            >        beq skip0599
                       >        trap            ;failed not equal (non zero)
1b98 : 200440          >        jsr report_error
                       >
1b9b :                 >skip0599
                       >
                        
                                nop_test $03,1
1b9b : a042            >            ldy #$42
1b9d : a203            >            ldx #4-1
1b9f : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
1ba0 : ca              >            dex
1ba1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1ba2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ba3 : f003            >        beq skip0602
                       >        trap            ;failed not equal (non zero)
1ba5 : 200440          >        jsr report_error
                       >
1ba8 :                 >skip0602
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
1ba8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1baa : 48              >            pha         ;use stack to load status
1bab : a9fc            >            lda #$ff-$03     ;precharge accu
1bad : 28              >            plp
                       >
1bae : 03              >            db  $03          ;test nop integrity - flags off
1baf : ea              >            nop
1bb0 : ea              >            nop
                       >            tst_a $ff-$03,0
1bb1 : 08              >            php         ;save flags
1bb2 : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
1bb4 : f003            >        beq skip0607
                       >        trap            ;failed not equal (non zero)
1bb6 : 200440          >        jsr report_error
                       >
1bb9 :                 >skip0607
                       >
1bb9 : 68              >            pla         ;load status
1bba : 48              >            pha
                       >            cmp_flag 0
1bbb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bbd : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
1bbf : 200440          >        jsr report_error
                       >
1bc2 :                 >skip0610
                       >
1bc2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
1bc3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1bc5 : 48              >            pha         ;use stack to load status
1bc6 : a9a7            >            lda #$aa-$03     ;precharge accu
1bc8 : 28              >            plp
                       >
1bc9 : 03              >            db  $03          ;test nop integrity - flags on
1bca : ea              >            nop
1bcb : ea              >            nop
                       >            tst_a $aa-$03,$ff
1bcc : 08              >            php         ;save flags
1bcd : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
1bcf : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
1bd1 : 200440          >        jsr report_error
                       >
1bd4 :                 >skip0615
                       >
1bd4 : 68              >            pla         ;load status
1bd5 : 48              >            pha
                       >            cmp_flag $ff
1bd6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bd8 : f003            >        beq skip0618
                       >        trap            ;failed not equal (non zero)
1bda : 200440          >        jsr report_error
                       >
1bdd :                 >skip0618
                       >
1bdd : 28              >            plp         ;restore status
                       >
1bde : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1be0 : f003            >        beq skip0620
                       >        trap            ;failed not equal (non zero)
1be2 : 200440          >        jsr report_error
                       >
1be5 :                 >skip0620
                       >
1be5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1be7 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
1be9 : 200440          >        jsr report_error
                       >
1bec :                 >skip0622
                       >
                        
                                nop_test $13,1
1bec : a042            >            ldy #$42
1bee : a203            >            ldx #4-1
1bf0 : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
1bf1 : ca              >            dex
1bf2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1bf3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1bf4 : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
1bf6 : 200440          >        jsr report_error
                       >
1bf9 :                 >skip0625
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
1bf9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bfb : 48              >            pha         ;use stack to load status
1bfc : a9ec            >            lda #$ff-$13     ;precharge accu
1bfe : 28              >            plp
                       >
1bff : 13              >            db  $13          ;test nop integrity - flags off
1c00 : ea              >            nop
1c01 : ea              >            nop
                       >            tst_a $ff-$13,0
1c02 : 08              >            php         ;save flags
1c03 : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
1c05 : f003            >        beq skip0630
                       >        trap            ;failed not equal (non zero)
1c07 : 200440          >        jsr report_error
                       >
1c0a :                 >skip0630
                       >
1c0a : 68              >            pla         ;load status
1c0b : 48              >            pha
                       >            cmp_flag 0
1c0c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c0e : f003            >        beq skip0633
                       >        trap            ;failed not equal (non zero)
1c10 : 200440          >        jsr report_error
                       >
1c13 :                 >skip0633
                       >
1c13 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
1c14 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c16 : 48              >            pha         ;use stack to load status
1c17 : a997            >            lda #$aa-$13     ;precharge accu
1c19 : 28              >            plp
                       >
1c1a : 13              >            db  $13          ;test nop integrity - flags on
1c1b : ea              >            nop
1c1c : ea              >            nop
                       >            tst_a $aa-$13,$ff
1c1d : 08              >            php         ;save flags
1c1e : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
1c20 : f003            >        beq skip0638
                       >        trap            ;failed not equal (non zero)
1c22 : 200440          >        jsr report_error
                       >
1c25 :                 >skip0638
                       >
1c25 : 68              >            pla         ;load status
1c26 : 48              >            pha
                       >            cmp_flag $ff
1c27 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c29 : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
1c2b : 200440          >        jsr report_error
                       >
1c2e :                 >skip0641
                       >
1c2e : 28              >            plp         ;restore status
                       >
1c2f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c31 : f003            >        beq skip0643
                       >        trap            ;failed not equal (non zero)
1c33 : 200440          >        jsr report_error
                       >
1c36 :                 >skip0643
                       >
1c36 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c38 : f003            >        beq skip0645
                       >        trap            ;failed not equal (non zero)
1c3a : 200440          >        jsr report_error
                       >
1c3d :                 >skip0645
                       >
                        
                                nop_test $23,1
1c3d : a042            >            ldy #$42
1c3f : a203            >            ldx #4-1
1c41 : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
1c42 : ca              >            dex
1c43 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1c44 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c45 : f003            >        beq skip0648
                       >        trap            ;failed not equal (non zero)
1c47 : 200440          >        jsr report_error
                       >
1c4a :                 >skip0648
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
1c4a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c4c : 48              >            pha         ;use stack to load status
1c4d : a9dc            >            lda #$ff-$23     ;precharge accu
1c4f : 28              >            plp
                       >
1c50 : 23              >            db  $23          ;test nop integrity - flags off
1c51 : ea              >            nop
1c52 : ea              >            nop
                       >            tst_a $ff-$23,0
1c53 : 08              >            php         ;save flags
1c54 : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
1c56 : f003            >        beq skip0653
                       >        trap            ;failed not equal (non zero)
1c58 : 200440          >        jsr report_error
                       >
1c5b :                 >skip0653
                       >
1c5b : 68              >            pla         ;load status
1c5c : 48              >            pha
                       >            cmp_flag 0
1c5d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c5f : f003            >        beq skip0656
                       >        trap            ;failed not equal (non zero)
1c61 : 200440          >        jsr report_error
                       >
1c64 :                 >skip0656
                       >
1c64 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
1c65 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c67 : 48              >            pha         ;use stack to load status
1c68 : a987            >            lda #$aa-$23     ;precharge accu
1c6a : 28              >            plp
                       >
1c6b : 23              >            db  $23          ;test nop integrity - flags on
1c6c : ea              >            nop
1c6d : ea              >            nop
                       >            tst_a $aa-$23,$ff
1c6e : 08              >            php         ;save flags
1c6f : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
1c71 : f003            >        beq skip0661
                       >        trap            ;failed not equal (non zero)
1c73 : 200440          >        jsr report_error
                       >
1c76 :                 >skip0661
                       >
1c76 : 68              >            pla         ;load status
1c77 : 48              >            pha
                       >            cmp_flag $ff
1c78 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c7a : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
1c7c : 200440          >        jsr report_error
                       >
1c7f :                 >skip0664
                       >
1c7f : 28              >            plp         ;restore status
                       >
1c80 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c82 : f003            >        beq skip0666
                       >        trap            ;failed not equal (non zero)
1c84 : 200440          >        jsr report_error
                       >
1c87 :                 >skip0666
                       >
1c87 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c89 : f003            >        beq skip0668
                       >        trap            ;failed not equal (non zero)
1c8b : 200440          >        jsr report_error
                       >
1c8e :                 >skip0668
                       >
                        
                                nop_test $33,1
1c8e : a042            >            ldy #$42
1c90 : a203            >            ldx #4-1
1c92 : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
1c93 : ca              >            dex
1c94 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1c95 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c96 : f003            >        beq skip0671
                       >        trap            ;failed not equal (non zero)
1c98 : 200440          >        jsr report_error
                       >
1c9b :                 >skip0671
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
1c9b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c9d : 48              >            pha         ;use stack to load status
1c9e : a9cc            >            lda #$ff-$33     ;precharge accu
1ca0 : 28              >            plp
                       >
1ca1 : 33              >            db  $33          ;test nop integrity - flags off
1ca2 : ea              >            nop
1ca3 : ea              >            nop
                       >            tst_a $ff-$33,0
1ca4 : 08              >            php         ;save flags
1ca5 : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
1ca7 : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
1ca9 : 200440          >        jsr report_error
                       >
1cac :                 >skip0676
                       >
1cac : 68              >            pla         ;load status
1cad : 48              >            pha
                       >            cmp_flag 0
1cae : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cb0 : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
1cb2 : 200440          >        jsr report_error
                       >
1cb5 :                 >skip0679
                       >
1cb5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
1cb6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1cb8 : 48              >            pha         ;use stack to load status
1cb9 : a977            >            lda #$aa-$33     ;precharge accu
1cbb : 28              >            plp
                       >
1cbc : 33              >            db  $33          ;test nop integrity - flags on
1cbd : ea              >            nop
1cbe : ea              >            nop
                       >            tst_a $aa-$33,$ff
1cbf : 08              >            php         ;save flags
1cc0 : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
1cc2 : f003            >        beq skip0684
                       >        trap            ;failed not equal (non zero)
1cc4 : 200440          >        jsr report_error
                       >
1cc7 :                 >skip0684
                       >
1cc7 : 68              >            pla         ;load status
1cc8 : 48              >            pha
                       >            cmp_flag $ff
1cc9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ccb : f003            >        beq skip0687
                       >        trap            ;failed not equal (non zero)
1ccd : 200440          >        jsr report_error
                       >
1cd0 :                 >skip0687
                       >
1cd0 : 28              >            plp         ;restore status
                       >
1cd1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1cd3 : f003            >        beq skip0689
                       >        trap            ;failed not equal (non zero)
1cd5 : 200440          >        jsr report_error
                       >
1cd8 :                 >skip0689
                       >
1cd8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1cda : f003            >        beq skip0691
                       >        trap            ;failed not equal (non zero)
1cdc : 200440          >        jsr report_error
                       >
1cdf :                 >skip0691
                       >
                        
                                nop_test $43,1
1cdf : a042            >            ldy #$42
1ce1 : a203            >            ldx #4-1
1ce3 : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
1ce4 : ca              >            dex
1ce5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1ce6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ce7 : f003            >        beq skip0694
                       >        trap            ;failed not equal (non zero)
1ce9 : 200440          >        jsr report_error
                       >
1cec :                 >skip0694
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
1cec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cee : 48              >            pha         ;use stack to load status
1cef : a9bc            >            lda #$ff-$43     ;precharge accu
1cf1 : 28              >            plp
                       >
1cf2 : 43              >            db  $43          ;test nop integrity - flags off
1cf3 : ea              >            nop
1cf4 : ea              >            nop
                       >            tst_a $ff-$43,0
1cf5 : 08              >            php         ;save flags
1cf6 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
1cf8 : f003            >        beq skip0699
                       >        trap            ;failed not equal (non zero)
1cfa : 200440          >        jsr report_error
                       >
1cfd :                 >skip0699
                       >
1cfd : 68              >            pla         ;load status
1cfe : 48              >            pha
                       >            cmp_flag 0
1cff : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d01 : f003            >        beq skip0702
                       >        trap            ;failed not equal (non zero)
1d03 : 200440          >        jsr report_error
                       >
1d06 :                 >skip0702
                       >
1d06 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
1d07 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d09 : 48              >            pha         ;use stack to load status
1d0a : a967            >            lda #$aa-$43     ;precharge accu
1d0c : 28              >            plp
                       >
1d0d : 43              >            db  $43          ;test nop integrity - flags on
1d0e : ea              >            nop
1d0f : ea              >            nop
                       >            tst_a $aa-$43,$ff
1d10 : 08              >            php         ;save flags
1d11 : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
1d13 : f003            >        beq skip0707
                       >        trap            ;failed not equal (non zero)
1d15 : 200440          >        jsr report_error
                       >
1d18 :                 >skip0707
                       >
1d18 : 68              >            pla         ;load status
1d19 : 48              >            pha
                       >            cmp_flag $ff
1d1a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d1c : f003            >        beq skip0710
                       >        trap            ;failed not equal (non zero)
1d1e : 200440          >        jsr report_error
                       >
1d21 :                 >skip0710
                       >
1d21 : 28              >            plp         ;restore status
                       >
1d22 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d24 : f003            >        beq skip0712
                       >        trap            ;failed not equal (non zero)
1d26 : 200440          >        jsr report_error
                       >
1d29 :                 >skip0712
                       >
1d29 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d2b : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
1d2d : 200440          >        jsr report_error
                       >
1d30 :                 >skip0714
                       >
                        
                                nop_test $53,1
1d30 : a042            >            ldy #$42
1d32 : a203            >            ldx #4-1
1d34 : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
1d35 : ca              >            dex
1d36 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1d37 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d38 : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
1d3a : 200440          >        jsr report_error
                       >
1d3d :                 >skip0717
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
1d3d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d3f : 48              >            pha         ;use stack to load status
1d40 : a9ac            >            lda #$ff-$53     ;precharge accu
1d42 : 28              >            plp
                       >
1d43 : 53              >            db  $53          ;test nop integrity - flags off
1d44 : ea              >            nop
1d45 : ea              >            nop
                       >            tst_a $ff-$53,0
1d46 : 08              >            php         ;save flags
1d47 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
1d49 : f003            >        beq skip0722
                       >        trap            ;failed not equal (non zero)
1d4b : 200440          >        jsr report_error
                       >
1d4e :                 >skip0722
                       >
1d4e : 68              >            pla         ;load status
1d4f : 48              >            pha
                       >            cmp_flag 0
1d50 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d52 : f003            >        beq skip0725
                       >        trap            ;failed not equal (non zero)
1d54 : 200440          >        jsr report_error
                       >
1d57 :                 >skip0725
                       >
1d57 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
1d58 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d5a : 48              >            pha         ;use stack to load status
1d5b : a957            >            lda #$aa-$53     ;precharge accu
1d5d : 28              >            plp
                       >
1d5e : 53              >            db  $53          ;test nop integrity - flags on
1d5f : ea              >            nop
1d60 : ea              >            nop
                       >            tst_a $aa-$53,$ff
1d61 : 08              >            php         ;save flags
1d62 : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
1d64 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
1d66 : 200440          >        jsr report_error
                       >
1d69 :                 >skip0730
                       >
1d69 : 68              >            pla         ;load status
1d6a : 48              >            pha
                       >            cmp_flag $ff
1d6b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d6d : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
1d6f : 200440          >        jsr report_error
                       >
1d72 :                 >skip0733
                       >
1d72 : 28              >            plp         ;restore status
                       >
1d73 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d75 : f003            >        beq skip0735
                       >        trap            ;failed not equal (non zero)
1d77 : 200440          >        jsr report_error
                       >
1d7a :                 >skip0735
                       >
1d7a : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d7c : f003            >        beq skip0737
                       >        trap            ;failed not equal (non zero)
1d7e : 200440          >        jsr report_error
                       >
1d81 :                 >skip0737
                       >
                        
                                nop_test $63,1
1d81 : a042            >            ldy #$42
1d83 : a203            >            ldx #4-1
1d85 : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
1d86 : ca              >            dex
1d87 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1d88 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d89 : f003            >        beq skip0740
                       >        trap            ;failed not equal (non zero)
1d8b : 200440          >        jsr report_error
                       >
1d8e :                 >skip0740
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
1d8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d90 : 48              >            pha         ;use stack to load status
1d91 : a99c            >            lda #$ff-$63     ;precharge accu
1d93 : 28              >            plp
                       >
1d94 : 63              >            db  $63          ;test nop integrity - flags off
1d95 : ea              >            nop
1d96 : ea              >            nop
                       >            tst_a $ff-$63,0
1d97 : 08              >            php         ;save flags
1d98 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
1d9a : f003            >        beq skip0745
                       >        trap            ;failed not equal (non zero)
1d9c : 200440          >        jsr report_error
                       >
1d9f :                 >skip0745
                       >
1d9f : 68              >            pla         ;load status
1da0 : 48              >            pha
                       >            cmp_flag 0
1da1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1da3 : f003            >        beq skip0748
                       >        trap            ;failed not equal (non zero)
1da5 : 200440          >        jsr report_error
                       >
1da8 :                 >skip0748
                       >
1da8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
1da9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1dab : 48              >            pha         ;use stack to load status
1dac : a947            >            lda #$aa-$63     ;precharge accu
1dae : 28              >            plp
                       >
1daf : 63              >            db  $63          ;test nop integrity - flags on
1db0 : ea              >            nop
1db1 : ea              >            nop
                       >            tst_a $aa-$63,$ff
1db2 : 08              >            php         ;save flags
1db3 : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
1db5 : f003            >        beq skip0753
                       >        trap            ;failed not equal (non zero)
1db7 : 200440          >        jsr report_error
                       >
1dba :                 >skip0753
                       >
1dba : 68              >            pla         ;load status
1dbb : 48              >            pha
                       >            cmp_flag $ff
1dbc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dbe : f003            >        beq skip0756
                       >        trap            ;failed not equal (non zero)
1dc0 : 200440          >        jsr report_error
                       >
1dc3 :                 >skip0756
                       >
1dc3 : 28              >            plp         ;restore status
                       >
1dc4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1dc6 : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
1dc8 : 200440          >        jsr report_error
                       >
1dcb :                 >skip0758
                       >
1dcb : e000            >            cpx #0
                       >            trap_ne         ;x changed
1dcd : f003            >        beq skip0760
                       >        trap            ;failed not equal (non zero)
1dcf : 200440          >        jsr report_error
                       >
1dd2 :                 >skip0760
                       >
                        
                                nop_test $73,1
1dd2 : a042            >            ldy #$42
1dd4 : a203            >            ldx #4-1
1dd6 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
1dd7 : ca              >            dex
1dd8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1dd9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1dda : f003            >        beq skip0763
                       >        trap            ;failed not equal (non zero)
1ddc : 200440          >        jsr report_error
                       >
1ddf :                 >skip0763
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
1ddf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1de1 : 48              >            pha         ;use stack to load status
1de2 : a98c            >            lda #$ff-$73     ;precharge accu
1de4 : 28              >            plp
                       >
1de5 : 73              >            db  $73          ;test nop integrity - flags off
1de6 : ea              >            nop
1de7 : ea              >            nop
                       >            tst_a $ff-$73,0
1de8 : 08              >            php         ;save flags
1de9 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
1deb : f003            >        beq skip0768
                       >        trap            ;failed not equal (non zero)
1ded : 200440          >        jsr report_error
                       >
1df0 :                 >skip0768
                       >
1df0 : 68              >            pla         ;load status
1df1 : 48              >            pha
                       >            cmp_flag 0
1df2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1df4 : f003            >        beq skip0771
                       >        trap            ;failed not equal (non zero)
1df6 : 200440          >        jsr report_error
                       >
1df9 :                 >skip0771
                       >
1df9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
1dfa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1dfc : 48              >            pha         ;use stack to load status
1dfd : a937            >            lda #$aa-$73     ;precharge accu
1dff : 28              >            plp
                       >
1e00 : 73              >            db  $73          ;test nop integrity - flags on
1e01 : ea              >            nop
1e02 : ea              >            nop
                       >            tst_a $aa-$73,$ff
1e03 : 08              >            php         ;save flags
1e04 : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
1e06 : f003            >        beq skip0776
                       >        trap            ;failed not equal (non zero)
1e08 : 200440          >        jsr report_error
                       >
1e0b :                 >skip0776
                       >
1e0b : 68              >            pla         ;load status
1e0c : 48              >            pha
                       >            cmp_flag $ff
1e0d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e0f : f003            >        beq skip0779
                       >        trap            ;failed not equal (non zero)
1e11 : 200440          >        jsr report_error
                       >
1e14 :                 >skip0779
                       >
1e14 : 28              >            plp         ;restore status
                       >
1e15 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e17 : f003            >        beq skip0781
                       >        trap            ;failed not equal (non zero)
1e19 : 200440          >        jsr report_error
                       >
1e1c :                 >skip0781
                       >
1e1c : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e1e : f003            >        beq skip0783
                       >        trap            ;failed not equal (non zero)
1e20 : 200440          >        jsr report_error
                       >
1e23 :                 >skip0783
                       >
                        
                                nop_test $83,1
1e23 : a042            >            ldy #$42
1e25 : a203            >            ldx #4-1
1e27 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
1e28 : ca              >            dex
1e29 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1e2a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e2b : f003            >        beq skip0786
                       >        trap            ;failed not equal (non zero)
1e2d : 200440          >        jsr report_error
                       >
1e30 :                 >skip0786
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
1e30 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e32 : 48              >            pha         ;use stack to load status
1e33 : a97c            >            lda #$ff-$83     ;precharge accu
1e35 : 28              >            plp
                       >
1e36 : 83              >            db  $83          ;test nop integrity - flags off
1e37 : ea              >            nop
1e38 : ea              >            nop
                       >            tst_a $ff-$83,0
1e39 : 08              >            php         ;save flags
1e3a : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
1e3c : f003            >        beq skip0791
                       >        trap            ;failed not equal (non zero)
1e3e : 200440          >        jsr report_error
                       >
1e41 :                 >skip0791
                       >
1e41 : 68              >            pla         ;load status
1e42 : 48              >            pha
                       >            cmp_flag 0
1e43 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e45 : f003            >        beq skip0794
                       >        trap            ;failed not equal (non zero)
1e47 : 200440          >        jsr report_error
                       >
1e4a :                 >skip0794
                       >
1e4a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
1e4b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e4d : 48              >            pha         ;use stack to load status
1e4e : a927            >            lda #$aa-$83     ;precharge accu
1e50 : 28              >            plp
                       >
1e51 : 83              >            db  $83          ;test nop integrity - flags on
1e52 : ea              >            nop
1e53 : ea              >            nop
                       >            tst_a $aa-$83,$ff
1e54 : 08              >            php         ;save flags
1e55 : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
1e57 : f003            >        beq skip0799
                       >        trap            ;failed not equal (non zero)
1e59 : 200440          >        jsr report_error
                       >
1e5c :                 >skip0799
                       >
1e5c : 68              >            pla         ;load status
1e5d : 48              >            pha
                       >            cmp_flag $ff
1e5e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e60 : f003            >        beq skip0802
                       >        trap            ;failed not equal (non zero)
1e62 : 200440          >        jsr report_error
                       >
1e65 :                 >skip0802
                       >
1e65 : 28              >            plp         ;restore status
                       >
1e66 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e68 : f003            >        beq skip0804
                       >        trap            ;failed not equal (non zero)
1e6a : 200440          >        jsr report_error
                       >
1e6d :                 >skip0804
                       >
1e6d : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e6f : f003            >        beq skip0806
                       >        trap            ;failed not equal (non zero)
1e71 : 200440          >        jsr report_error
                       >
1e74 :                 >skip0806
                       >
                        
                                nop_test $93,1
1e74 : a042            >            ldy #$42
1e76 : a203            >            ldx #4-1
1e78 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
1e79 : ca              >            dex
1e7a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1e7b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e7c : f003            >        beq skip0809
                       >        trap            ;failed not equal (non zero)
1e7e : 200440          >        jsr report_error
                       >
1e81 :                 >skip0809
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
1e81 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e83 : 48              >            pha         ;use stack to load status
1e84 : a96c            >            lda #$ff-$93     ;precharge accu
1e86 : 28              >            plp
                       >
1e87 : 93              >            db  $93          ;test nop integrity - flags off
1e88 : ea              >            nop
1e89 : ea              >            nop
                       >            tst_a $ff-$93,0
1e8a : 08              >            php         ;save flags
1e8b : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
1e8d : f003            >        beq skip0814
                       >        trap            ;failed not equal (non zero)
1e8f : 200440          >        jsr report_error
                       >
1e92 :                 >skip0814
                       >
1e92 : 68              >            pla         ;load status
1e93 : 48              >            pha
                       >            cmp_flag 0
1e94 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e96 : f003            >        beq skip0817
                       >        trap            ;failed not equal (non zero)
1e98 : 200440          >        jsr report_error
                       >
1e9b :                 >skip0817
                       >
1e9b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
1e9c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e9e : 48              >            pha         ;use stack to load status
1e9f : a917            >            lda #$aa-$93     ;precharge accu
1ea1 : 28              >            plp
                       >
1ea2 : 93              >            db  $93          ;test nop integrity - flags on
1ea3 : ea              >            nop
1ea4 : ea              >            nop
                       >            tst_a $aa-$93,$ff
1ea5 : 08              >            php         ;save flags
1ea6 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
1ea8 : f003            >        beq skip0822
                       >        trap            ;failed not equal (non zero)
1eaa : 200440          >        jsr report_error
                       >
1ead :                 >skip0822
                       >
1ead : 68              >            pla         ;load status
1eae : 48              >            pha
                       >            cmp_flag $ff
1eaf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1eb1 : f003            >        beq skip0825
                       >        trap            ;failed not equal (non zero)
1eb3 : 200440          >        jsr report_error
                       >
1eb6 :                 >skip0825
                       >
1eb6 : 28              >            plp         ;restore status
                       >
1eb7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1eb9 : f003            >        beq skip0827
                       >        trap            ;failed not equal (non zero)
1ebb : 200440          >        jsr report_error
                       >
1ebe :                 >skip0827
                       >
1ebe : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ec0 : f003            >        beq skip0829
                       >        trap            ;failed not equal (non zero)
1ec2 : 200440          >        jsr report_error
                       >
1ec5 :                 >skip0829
                       >
                        
                                nop_test $a3,1
1ec5 : a042            >            ldy #$42
1ec7 : a203            >            ldx #4-1
1ec9 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
1eca : ca              >            dex
1ecb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1ecc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ecd : f003            >        beq skip0832
                       >        trap            ;failed not equal (non zero)
1ecf : 200440          >        jsr report_error
                       >
1ed2 :                 >skip0832
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
1ed2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ed4 : 48              >            pha         ;use stack to load status
1ed5 : a95c            >            lda #$ff-$a3     ;precharge accu
1ed7 : 28              >            plp
                       >
1ed8 : a3              >            db  $a3          ;test nop integrity - flags off
1ed9 : ea              >            nop
1eda : ea              >            nop
                       >            tst_a $ff-$a3,0
1edb : 08              >            php         ;save flags
1edc : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
1ede : f003            >        beq skip0837
                       >        trap            ;failed not equal (non zero)
1ee0 : 200440          >        jsr report_error
                       >
1ee3 :                 >skip0837
                       >
1ee3 : 68              >            pla         ;load status
1ee4 : 48              >            pha
                       >            cmp_flag 0
1ee5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ee7 : f003            >        beq skip0840
                       >        trap            ;failed not equal (non zero)
1ee9 : 200440          >        jsr report_error
                       >
1eec :                 >skip0840
                       >
1eec : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
1eed : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1eef : 48              >            pha         ;use stack to load status
1ef0 : a907            >            lda #$aa-$a3     ;precharge accu
1ef2 : 28              >            plp
                       >
1ef3 : a3              >            db  $a3          ;test nop integrity - flags on
1ef4 : ea              >            nop
1ef5 : ea              >            nop
                       >            tst_a $aa-$a3,$ff
1ef6 : 08              >            php         ;save flags
1ef7 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
1ef9 : f003            >        beq skip0845
                       >        trap            ;failed not equal (non zero)
1efb : 200440          >        jsr report_error
                       >
1efe :                 >skip0845
                       >
1efe : 68              >            pla         ;load status
1eff : 48              >            pha
                       >            cmp_flag $ff
1f00 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f02 : f003            >        beq skip0848
                       >        trap            ;failed not equal (non zero)
1f04 : 200440          >        jsr report_error
                       >
1f07 :                 >skip0848
                       >
1f07 : 28              >            plp         ;restore status
                       >
1f08 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f0a : f003            >        beq skip0850
                       >        trap            ;failed not equal (non zero)
1f0c : 200440          >        jsr report_error
                       >
1f0f :                 >skip0850
                       >
1f0f : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f11 : f003            >        beq skip0852
                       >        trap            ;failed not equal (non zero)
1f13 : 200440          >        jsr report_error
                       >
1f16 :                 >skip0852
                       >
                        
                                nop_test $b3,1
1f16 : a042            >            ldy #$42
1f18 : a203            >            ldx #4-1
1f1a : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
1f1b : ca              >            dex
1f1c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1f1d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f1e : f003            >        beq skip0855
                       >        trap            ;failed not equal (non zero)
1f20 : 200440          >        jsr report_error
                       >
1f23 :                 >skip0855
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
1f23 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f25 : 48              >            pha         ;use stack to load status
1f26 : a94c            >            lda #$ff-$b3     ;precharge accu
1f28 : 28              >            plp
                       >
1f29 : b3              >            db  $b3          ;test nop integrity - flags off
1f2a : ea              >            nop
1f2b : ea              >            nop
                       >            tst_a $ff-$b3,0
1f2c : 08              >            php         ;save flags
1f2d : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
1f2f : f003            >        beq skip0860
                       >        trap            ;failed not equal (non zero)
1f31 : 200440          >        jsr report_error
                       >
1f34 :                 >skip0860
                       >
1f34 : 68              >            pla         ;load status
1f35 : 48              >            pha
                       >            cmp_flag 0
1f36 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f38 : f003            >        beq skip0863
                       >        trap            ;failed not equal (non zero)
1f3a : 200440          >        jsr report_error
                       >
1f3d :                 >skip0863
                       >
1f3d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
1f3e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f40 : 48              >            pha         ;use stack to load status
1f41 : a9f7            >            lda #$aa-$b3     ;precharge accu
1f43 : 28              >            plp
                       >
1f44 : b3              >            db  $b3          ;test nop integrity - flags on
1f45 : ea              >            nop
1f46 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
1f47 : 08              >            php         ;save flags
1f48 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
1f4a : f003            >        beq skip0868
                       >        trap            ;failed not equal (non zero)
1f4c : 200440          >        jsr report_error
                       >
1f4f :                 >skip0868
                       >
1f4f : 68              >            pla         ;load status
1f50 : 48              >            pha
                       >            cmp_flag $ff
1f51 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f53 : f003            >        beq skip0871
                       >        trap            ;failed not equal (non zero)
1f55 : 200440          >        jsr report_error
                       >
1f58 :                 >skip0871
                       >
1f58 : 28              >            plp         ;restore status
                       >
1f59 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f5b : f003            >        beq skip0873
                       >        trap            ;failed not equal (non zero)
1f5d : 200440          >        jsr report_error
                       >
1f60 :                 >skip0873
                       >
1f60 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f62 : f003            >        beq skip0875
                       >        trap            ;failed not equal (non zero)
1f64 : 200440          >        jsr report_error
                       >
1f67 :                 >skip0875
                       >
                        
                                nop_test $c3,1
1f67 : a042            >            ldy #$42
1f69 : a203            >            ldx #4-1
1f6b : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
1f6c : ca              >            dex
1f6d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1f6e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f6f : f003            >        beq skip0878
                       >        trap            ;failed not equal (non zero)
1f71 : 200440          >        jsr report_error
                       >
1f74 :                 >skip0878
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
1f74 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f76 : 48              >            pha         ;use stack to load status
1f77 : a93c            >            lda #$ff-$c3     ;precharge accu
1f79 : 28              >            plp
                       >
1f7a : c3              >            db  $c3          ;test nop integrity - flags off
1f7b : ea              >            nop
1f7c : ea              >            nop
                       >            tst_a $ff-$c3,0
1f7d : 08              >            php         ;save flags
1f7e : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
1f80 : f003            >        beq skip0883
                       >        trap            ;failed not equal (non zero)
1f82 : 200440          >        jsr report_error
                       >
1f85 :                 >skip0883
                       >
1f85 : 68              >            pla         ;load status
1f86 : 48              >            pha
                       >            cmp_flag 0
1f87 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f89 : f003            >        beq skip0886
                       >        trap            ;failed not equal (non zero)
1f8b : 200440          >        jsr report_error
                       >
1f8e :                 >skip0886
                       >
1f8e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
1f8f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f91 : 48              >            pha         ;use stack to load status
1f92 : a9e7            >            lda #$aa-$c3     ;precharge accu
1f94 : 28              >            plp
                       >
1f95 : c3              >            db  $c3          ;test nop integrity - flags on
1f96 : ea              >            nop
1f97 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
1f98 : 08              >            php         ;save flags
1f99 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
1f9b : f003            >        beq skip0891
                       >        trap            ;failed not equal (non zero)
1f9d : 200440          >        jsr report_error
                       >
1fa0 :                 >skip0891
                       >
1fa0 : 68              >            pla         ;load status
1fa1 : 48              >            pha
                       >            cmp_flag $ff
1fa2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fa4 : f003            >        beq skip0894
                       >        trap            ;failed not equal (non zero)
1fa6 : 200440          >        jsr report_error
                       >
1fa9 :                 >skip0894
                       >
1fa9 : 28              >            plp         ;restore status
                       >
1faa : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1fac : f003            >        beq skip0896
                       >        trap            ;failed not equal (non zero)
1fae : 200440          >        jsr report_error
                       >
1fb1 :                 >skip0896
                       >
1fb1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1fb3 : f003            >        beq skip0898
                       >        trap            ;failed not equal (non zero)
1fb5 : 200440          >        jsr report_error
                       >
1fb8 :                 >skip0898
                       >
                        
                                nop_test $d3,1
1fb8 : a042            >            ldy #$42
1fba : a203            >            ldx #4-1
1fbc : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
1fbd : ca              >            dex
1fbe : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1fbf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1fc0 : f003            >        beq skip0901
                       >        trap            ;failed not equal (non zero)
1fc2 : 200440          >        jsr report_error
                       >
1fc5 :                 >skip0901
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
1fc5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fc7 : 48              >            pha         ;use stack to load status
1fc8 : a92c            >            lda #$ff-$d3     ;precharge accu
1fca : 28              >            plp
                       >
1fcb : d3              >            db  $d3          ;test nop integrity - flags off
1fcc : ea              >            nop
1fcd : ea              >            nop
                       >            tst_a $ff-$d3,0
1fce : 08              >            php         ;save flags
1fcf : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
1fd1 : f003            >        beq skip0906
                       >        trap            ;failed not equal (non zero)
1fd3 : 200440          >        jsr report_error
                       >
1fd6 :                 >skip0906
                       >
1fd6 : 68              >            pla         ;load status
1fd7 : 48              >            pha
                       >            cmp_flag 0
1fd8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fda : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
1fdc : 200440          >        jsr report_error
                       >
1fdf :                 >skip0909
                       >
1fdf : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
1fe0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fe2 : 48              >            pha         ;use stack to load status
1fe3 : a9d7            >            lda #$aa-$d3     ;precharge accu
1fe5 : 28              >            plp
                       >
1fe6 : d3              >            db  $d3          ;test nop integrity - flags on
1fe7 : ea              >            nop
1fe8 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
1fe9 : 08              >            php         ;save flags
1fea : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
1fec : f003            >        beq skip0914
                       >        trap            ;failed not equal (non zero)
1fee : 200440          >        jsr report_error
                       >
1ff1 :                 >skip0914
                       >
1ff1 : 68              >            pla         ;load status
1ff2 : 48              >            pha
                       >            cmp_flag $ff
1ff3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ff5 : f003            >        beq skip0917
                       >        trap            ;failed not equal (non zero)
1ff7 : 200440          >        jsr report_error
                       >
1ffa :                 >skip0917
                       >
1ffa : 28              >            plp         ;restore status
                       >
1ffb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ffd : f003            >        beq skip0919
                       >        trap            ;failed not equal (non zero)
1fff : 200440          >        jsr report_error
                       >
2002 :                 >skip0919
                       >
2002 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2004 : f003            >        beq skip0921
                       >        trap            ;failed not equal (non zero)
2006 : 200440          >        jsr report_error
                       >
2009 :                 >skip0921
                       >
                        
                                nop_test $e3,1
2009 : a042            >            ldy #$42
200b : a203            >            ldx #4-1
200d : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
200e : ca              >            dex
200f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2010 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2011 : f003            >        beq skip0924
                       >        trap            ;failed not equal (non zero)
2013 : 200440          >        jsr report_error
                       >
2016 :                 >skip0924
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
2016 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2018 : 48              >            pha         ;use stack to load status
2019 : a91c            >            lda #$ff-$e3     ;precharge accu
201b : 28              >            plp
                       >
201c : e3              >            db  $e3          ;test nop integrity - flags off
201d : ea              >            nop
201e : ea              >            nop
                       >            tst_a $ff-$e3,0
201f : 08              >            php         ;save flags
2020 : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
2022 : f003            >        beq skip0929
                       >        trap            ;failed not equal (non zero)
2024 : 200440          >        jsr report_error
                       >
2027 :                 >skip0929
                       >
2027 : 68              >            pla         ;load status
2028 : 48              >            pha
                       >            cmp_flag 0
2029 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
202b : f003            >        beq skip0932
                       >        trap            ;failed not equal (non zero)
202d : 200440          >        jsr report_error
                       >
2030 :                 >skip0932
                       >
2030 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
2031 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2033 : 48              >            pha         ;use stack to load status
2034 : a9c7            >            lda #$aa-$e3     ;precharge accu
2036 : 28              >            plp
                       >
2037 : e3              >            db  $e3          ;test nop integrity - flags on
2038 : ea              >            nop
2039 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
203a : 08              >            php         ;save flags
203b : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
203d : f003            >        beq skip0937
                       >        trap            ;failed not equal (non zero)
203f : 200440          >        jsr report_error
                       >
2042 :                 >skip0937
                       >
2042 : 68              >            pla         ;load status
2043 : 48              >            pha
                       >            cmp_flag $ff
2044 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2046 : f003            >        beq skip0940
                       >        trap            ;failed not equal (non zero)
2048 : 200440          >        jsr report_error
                       >
204b :                 >skip0940
                       >
204b : 28              >            plp         ;restore status
                       >
204c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
204e : f003            >        beq skip0942
                       >        trap            ;failed not equal (non zero)
2050 : 200440          >        jsr report_error
                       >
2053 :                 >skip0942
                       >
2053 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2055 : f003            >        beq skip0944
                       >        trap            ;failed not equal (non zero)
2057 : 200440          >        jsr report_error
                       >
205a :                 >skip0944
                       >
                        
                                nop_test $f3,1
205a : a042            >            ldy #$42
205c : a203            >            ldx #4-1
205e : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
205f : ca              >            dex
2060 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2061 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2062 : f003            >        beq skip0947
                       >        trap            ;failed not equal (non zero)
2064 : 200440          >        jsr report_error
                       >
2067 :                 >skip0947
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
2067 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2069 : 48              >            pha         ;use stack to load status
206a : a90c            >            lda #$ff-$f3     ;precharge accu
206c : 28              >            plp
                       >
206d : f3              >            db  $f3          ;test nop integrity - flags off
206e : ea              >            nop
206f : ea              >            nop
                       >            tst_a $ff-$f3,0
2070 : 08              >            php         ;save flags
2071 : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
2073 : f003            >        beq skip0952
                       >        trap            ;failed not equal (non zero)
2075 : 200440          >        jsr report_error
                       >
2078 :                 >skip0952
                       >
2078 : 68              >            pla         ;load status
2079 : 48              >            pha
                       >            cmp_flag 0
207a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
207c : f003            >        beq skip0955
                       >        trap            ;failed not equal (non zero)
207e : 200440          >        jsr report_error
                       >
2081 :                 >skip0955
                       >
2081 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
2082 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2084 : 48              >            pha         ;use stack to load status
2085 : a9b7            >            lda #$aa-$f3     ;precharge accu
2087 : 28              >            plp
                       >
2088 : f3              >            db  $f3          ;test nop integrity - flags on
2089 : ea              >            nop
208a : ea              >            nop
                       >            tst_a $aa-$f3,$ff
208b : 08              >            php         ;save flags
208c : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
208e : f003            >        beq skip0960
                       >        trap            ;failed not equal (non zero)
2090 : 200440          >        jsr report_error
                       >
2093 :                 >skip0960
                       >
2093 : 68              >            pla         ;load status
2094 : 48              >            pha
                       >            cmp_flag $ff
2095 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2097 : f003            >        beq skip0963
                       >        trap            ;failed not equal (non zero)
2099 : 200440          >        jsr report_error
                       >
209c :                 >skip0963
                       >
209c : 28              >            plp         ;restore status
                       >
209d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
209f : f003            >        beq skip0965
                       >        trap            ;failed not equal (non zero)
20a1 : 200440          >        jsr report_error
                       >
20a4 :                 >skip0965
                       >
20a4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
20a6 : f003            >        beq skip0967
                       >        trap            ;failed not equal (non zero)
20a8 : 200440          >        jsr report_error
                       >
20ab :                 >skip0967
                       >
                        
                                nop_test $0b,1
20ab : a042            >            ldy #$42
20ad : a203            >            ldx #4-1
20af : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
20b0 : ca              >            dex
20b1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
20b2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
20b3 : f003            >        beq skip0970
                       >        trap            ;failed not equal (non zero)
20b5 : 200440          >        jsr report_error
                       >
20b8 :                 >skip0970
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
20b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20ba : 48              >            pha         ;use stack to load status
20bb : a9f4            >            lda #$ff-$0b     ;precharge accu
20bd : 28              >            plp
                       >
20be : 0b              >            db  $0b          ;test nop integrity - flags off
20bf : ea              >            nop
20c0 : ea              >            nop
                       >            tst_a $ff-$0b,0
20c1 : 08              >            php         ;save flags
20c2 : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
20c4 : f003            >        beq skip0975
                       >        trap            ;failed not equal (non zero)
20c6 : 200440          >        jsr report_error
                       >
20c9 :                 >skip0975
                       >
20c9 : 68              >            pla         ;load status
20ca : 48              >            pha
                       >            cmp_flag 0
20cb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20cd : f003            >        beq skip0978
                       >        trap            ;failed not equal (non zero)
20cf : 200440          >        jsr report_error
                       >
20d2 :                 >skip0978
                       >
20d2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
20d3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20d5 : 48              >            pha         ;use stack to load status
20d6 : a99f            >            lda #$aa-$0b     ;precharge accu
20d8 : 28              >            plp
                       >
20d9 : 0b              >            db  $0b          ;test nop integrity - flags on
20da : ea              >            nop
20db : ea              >            nop
                       >            tst_a $aa-$0b,$ff
20dc : 08              >            php         ;save flags
20dd : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
20df : f003            >        beq skip0983
                       >        trap            ;failed not equal (non zero)
20e1 : 200440          >        jsr report_error
                       >
20e4 :                 >skip0983
                       >
20e4 : 68              >            pla         ;load status
20e5 : 48              >            pha
                       >            cmp_flag $ff
20e6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20e8 : f003            >        beq skip0986
                       >        trap            ;failed not equal (non zero)
20ea : 200440          >        jsr report_error
                       >
20ed :                 >skip0986
                       >
20ed : 28              >            plp         ;restore status
                       >
20ee : c042            >            cpy #$42
                       >            trap_ne         ;y changed
20f0 : f003            >        beq skip0988
                       >        trap            ;failed not equal (non zero)
20f2 : 200440          >        jsr report_error
                       >
20f5 :                 >skip0988
                       >
20f5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
20f7 : f003            >        beq skip0990
                       >        trap            ;failed not equal (non zero)
20f9 : 200440          >        jsr report_error
                       >
20fc :                 >skip0990
                       >
                        
                                nop_test $1b,1
20fc : a042            >            ldy #$42
20fe : a203            >            ldx #4-1
2100 : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
2101 : ca              >            dex
2102 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2103 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2104 : f003            >        beq skip0993
                       >        trap            ;failed not equal (non zero)
2106 : 200440          >        jsr report_error
                       >
2109 :                 >skip0993
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
2109 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
210b : 48              >            pha         ;use stack to load status
210c : a9e4            >            lda #$ff-$1b     ;precharge accu
210e : 28              >            plp
                       >
210f : 1b              >            db  $1b          ;test nop integrity - flags off
2110 : ea              >            nop
2111 : ea              >            nop
                       >            tst_a $ff-$1b,0
2112 : 08              >            php         ;save flags
2113 : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
2115 : f003            >        beq skip0998
                       >        trap            ;failed not equal (non zero)
2117 : 200440          >        jsr report_error
                       >
211a :                 >skip0998
                       >
211a : 68              >            pla         ;load status
211b : 48              >            pha
                       >            cmp_flag 0
211c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
211e : f003            >        beq skip1001
                       >        trap            ;failed not equal (non zero)
2120 : 200440          >        jsr report_error
                       >
2123 :                 >skip1001
                       >
2123 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
2124 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2126 : 48              >            pha         ;use stack to load status
2127 : a98f            >            lda #$aa-$1b     ;precharge accu
2129 : 28              >            plp
                       >
212a : 1b              >            db  $1b          ;test nop integrity - flags on
212b : ea              >            nop
212c : ea              >            nop
                       >            tst_a $aa-$1b,$ff
212d : 08              >            php         ;save flags
212e : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
2130 : f003            >        beq skip1006
                       >        trap            ;failed not equal (non zero)
2132 : 200440          >        jsr report_error
                       >
2135 :                 >skip1006
                       >
2135 : 68              >            pla         ;load status
2136 : 48              >            pha
                       >            cmp_flag $ff
2137 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2139 : f003            >        beq skip1009
                       >        trap            ;failed not equal (non zero)
213b : 200440          >        jsr report_error
                       >
213e :                 >skip1009
                       >
213e : 28              >            plp         ;restore status
                       >
213f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2141 : f003            >        beq skip1011
                       >        trap            ;failed not equal (non zero)
2143 : 200440          >        jsr report_error
                       >
2146 :                 >skip1011
                       >
2146 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2148 : f003            >        beq skip1013
                       >        trap            ;failed not equal (non zero)
214a : 200440          >        jsr report_error
                       >
214d :                 >skip1013
                       >
                        
                                nop_test $2b,1
214d : a042            >            ldy #$42
214f : a203            >            ldx #4-1
2151 : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
2152 : ca              >            dex
2153 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2154 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2155 : f003            >        beq skip1016
                       >        trap            ;failed not equal (non zero)
2157 : 200440          >        jsr report_error
                       >
215a :                 >skip1016
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
215a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
215c : 48              >            pha         ;use stack to load status
215d : a9d4            >            lda #$ff-$2b     ;precharge accu
215f : 28              >            plp
                       >
2160 : 2b              >            db  $2b          ;test nop integrity - flags off
2161 : ea              >            nop
2162 : ea              >            nop
                       >            tst_a $ff-$2b,0
2163 : 08              >            php         ;save flags
2164 : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
2166 : f003            >        beq skip1021
                       >        trap            ;failed not equal (non zero)
2168 : 200440          >        jsr report_error
                       >
216b :                 >skip1021
                       >
216b : 68              >            pla         ;load status
216c : 48              >            pha
                       >            cmp_flag 0
216d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
216f : f003            >        beq skip1024
                       >        trap            ;failed not equal (non zero)
2171 : 200440          >        jsr report_error
                       >
2174 :                 >skip1024
                       >
2174 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
2175 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2177 : 48              >            pha         ;use stack to load status
2178 : a97f            >            lda #$aa-$2b     ;precharge accu
217a : 28              >            plp
                       >
217b : 2b              >            db  $2b          ;test nop integrity - flags on
217c : ea              >            nop
217d : ea              >            nop
                       >            tst_a $aa-$2b,$ff
217e : 08              >            php         ;save flags
217f : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
2181 : f003            >        beq skip1029
                       >        trap            ;failed not equal (non zero)
2183 : 200440          >        jsr report_error
                       >
2186 :                 >skip1029
                       >
2186 : 68              >            pla         ;load status
2187 : 48              >            pha
                       >            cmp_flag $ff
2188 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
218a : f003            >        beq skip1032
                       >        trap            ;failed not equal (non zero)
218c : 200440          >        jsr report_error
                       >
218f :                 >skip1032
                       >
218f : 28              >            plp         ;restore status
                       >
2190 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2192 : f003            >        beq skip1034
                       >        trap            ;failed not equal (non zero)
2194 : 200440          >        jsr report_error
                       >
2197 :                 >skip1034
                       >
2197 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2199 : f003            >        beq skip1036
                       >        trap            ;failed not equal (non zero)
219b : 200440          >        jsr report_error
                       >
219e :                 >skip1036
                       >
                        
                                nop_test $3b,1
219e : a042            >            ldy #$42
21a0 : a203            >            ldx #4-1
21a2 : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
21a3 : ca              >            dex
21a4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
21a5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21a6 : f003            >        beq skip1039
                       >        trap            ;failed not equal (non zero)
21a8 : 200440          >        jsr report_error
                       >
21ab :                 >skip1039
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
21ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21ad : 48              >            pha         ;use stack to load status
21ae : a9c4            >            lda #$ff-$3b     ;precharge accu
21b0 : 28              >            plp
                       >
21b1 : 3b              >            db  $3b          ;test nop integrity - flags off
21b2 : ea              >            nop
21b3 : ea              >            nop
                       >            tst_a $ff-$3b,0
21b4 : 08              >            php         ;save flags
21b5 : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
21b7 : f003            >        beq skip1044
                       >        trap            ;failed not equal (non zero)
21b9 : 200440          >        jsr report_error
                       >
21bc :                 >skip1044
                       >
21bc : 68              >            pla         ;load status
21bd : 48              >            pha
                       >            cmp_flag 0
21be : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21c0 : f003            >        beq skip1047
                       >        trap            ;failed not equal (non zero)
21c2 : 200440          >        jsr report_error
                       >
21c5 :                 >skip1047
                       >
21c5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
21c6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21c8 : 48              >            pha         ;use stack to load status
21c9 : a96f            >            lda #$aa-$3b     ;precharge accu
21cb : 28              >            plp
                       >
21cc : 3b              >            db  $3b          ;test nop integrity - flags on
21cd : ea              >            nop
21ce : ea              >            nop
                       >            tst_a $aa-$3b,$ff
21cf : 08              >            php         ;save flags
21d0 : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
21d2 : f003            >        beq skip1052
                       >        trap            ;failed not equal (non zero)
21d4 : 200440          >        jsr report_error
                       >
21d7 :                 >skip1052
                       >
21d7 : 68              >            pla         ;load status
21d8 : 48              >            pha
                       >            cmp_flag $ff
21d9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21db : f003            >        beq skip1055
                       >        trap            ;failed not equal (non zero)
21dd : 200440          >        jsr report_error
                       >
21e0 :                 >skip1055
                       >
21e0 : 28              >            plp         ;restore status
                       >
21e1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
21e3 : f003            >        beq skip1057
                       >        trap            ;failed not equal (non zero)
21e5 : 200440          >        jsr report_error
                       >
21e8 :                 >skip1057
                       >
21e8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
21ea : f003            >        beq skip1059
                       >        trap            ;failed not equal (non zero)
21ec : 200440          >        jsr report_error
                       >
21ef :                 >skip1059
                       >
                        
                                nop_test $4b,1
21ef : a042            >            ldy #$42
21f1 : a203            >            ldx #4-1
21f3 : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
21f4 : ca              >            dex
21f5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
21f6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21f7 : f003            >        beq skip1062
                       >        trap            ;failed not equal (non zero)
21f9 : 200440          >        jsr report_error
                       >
21fc :                 >skip1062
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
21fc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21fe : 48              >            pha         ;use stack to load status
21ff : a9b4            >            lda #$ff-$4b     ;precharge accu
2201 : 28              >            plp
                       >
2202 : 4b              >            db  $4b          ;test nop integrity - flags off
2203 : ea              >            nop
2204 : ea              >            nop
                       >            tst_a $ff-$4b,0
2205 : 08              >            php         ;save flags
2206 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
2208 : f003            >        beq skip1067
                       >        trap            ;failed not equal (non zero)
220a : 200440          >        jsr report_error
                       >
220d :                 >skip1067
                       >
220d : 68              >            pla         ;load status
220e : 48              >            pha
                       >            cmp_flag 0
220f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2211 : f003            >        beq skip1070
                       >        trap            ;failed not equal (non zero)
2213 : 200440          >        jsr report_error
                       >
2216 :                 >skip1070
                       >
2216 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
2217 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2219 : 48              >            pha         ;use stack to load status
221a : a95f            >            lda #$aa-$4b     ;precharge accu
221c : 28              >            plp
                       >
221d : 4b              >            db  $4b          ;test nop integrity - flags on
221e : ea              >            nop
221f : ea              >            nop
                       >            tst_a $aa-$4b,$ff
2220 : 08              >            php         ;save flags
2221 : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
2223 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
2225 : 200440          >        jsr report_error
                       >
2228 :                 >skip1075
                       >
2228 : 68              >            pla         ;load status
2229 : 48              >            pha
                       >            cmp_flag $ff
222a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
222c : f003            >        beq skip1078
                       >        trap            ;failed not equal (non zero)
222e : 200440          >        jsr report_error
                       >
2231 :                 >skip1078
                       >
2231 : 28              >            plp         ;restore status
                       >
2232 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2234 : f003            >        beq skip1080
                       >        trap            ;failed not equal (non zero)
2236 : 200440          >        jsr report_error
                       >
2239 :                 >skip1080
                       >
2239 : e000            >            cpx #0
                       >            trap_ne         ;x changed
223b : f003            >        beq skip1082
                       >        trap            ;failed not equal (non zero)
223d : 200440          >        jsr report_error
                       >
2240 :                 >skip1082
                       >
                        
                                nop_test $5b,1
2240 : a042            >            ldy #$42
2242 : a203            >            ldx #4-1
2244 : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
2245 : ca              >            dex
2246 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2247 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2248 : f003            >        beq skip1085
                       >        trap            ;failed not equal (non zero)
224a : 200440          >        jsr report_error
                       >
224d :                 >skip1085
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
224d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
224f : 48              >            pha         ;use stack to load status
2250 : a9a4            >            lda #$ff-$5b     ;precharge accu
2252 : 28              >            plp
                       >
2253 : 5b              >            db  $5b          ;test nop integrity - flags off
2254 : ea              >            nop
2255 : ea              >            nop
                       >            tst_a $ff-$5b,0
2256 : 08              >            php         ;save flags
2257 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
2259 : f003            >        beq skip1090
                       >        trap            ;failed not equal (non zero)
225b : 200440          >        jsr report_error
                       >
225e :                 >skip1090
                       >
225e : 68              >            pla         ;load status
225f : 48              >            pha
                       >            cmp_flag 0
2260 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2262 : f003            >        beq skip1093
                       >        trap            ;failed not equal (non zero)
2264 : 200440          >        jsr report_error
                       >
2267 :                 >skip1093
                       >
2267 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
2268 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
226a : 48              >            pha         ;use stack to load status
226b : a94f            >            lda #$aa-$5b     ;precharge accu
226d : 28              >            plp
                       >
226e : 5b              >            db  $5b          ;test nop integrity - flags on
226f : ea              >            nop
2270 : ea              >            nop
                       >            tst_a $aa-$5b,$ff
2271 : 08              >            php         ;save flags
2272 : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
2274 : f003            >        beq skip1098
                       >        trap            ;failed not equal (non zero)
2276 : 200440          >        jsr report_error
                       >
2279 :                 >skip1098
                       >
2279 : 68              >            pla         ;load status
227a : 48              >            pha
                       >            cmp_flag $ff
227b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
227d : f003            >        beq skip1101
                       >        trap            ;failed not equal (non zero)
227f : 200440          >        jsr report_error
                       >
2282 :                 >skip1101
                       >
2282 : 28              >            plp         ;restore status
                       >
2283 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2285 : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
2287 : 200440          >        jsr report_error
                       >
228a :                 >skip1103
                       >
228a : e000            >            cpx #0
                       >            trap_ne         ;x changed
228c : f003            >        beq skip1105
                       >        trap            ;failed not equal (non zero)
228e : 200440          >        jsr report_error
                       >
2291 :                 >skip1105
                       >
                        
                                nop_test $6b,1
2291 : a042            >            ldy #$42
2293 : a203            >            ldx #4-1
2295 : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
2296 : ca              >            dex
2297 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2298 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2299 : f003            >        beq skip1108
                       >        trap            ;failed not equal (non zero)
229b : 200440          >        jsr report_error
                       >
229e :                 >skip1108
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
229e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22a0 : 48              >            pha         ;use stack to load status
22a1 : a994            >            lda #$ff-$6b     ;precharge accu
22a3 : 28              >            plp
                       >
22a4 : 6b              >            db  $6b          ;test nop integrity - flags off
22a5 : ea              >            nop
22a6 : ea              >            nop
                       >            tst_a $ff-$6b,0
22a7 : 08              >            php         ;save flags
22a8 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
22aa : f003            >        beq skip1113
                       >        trap            ;failed not equal (non zero)
22ac : 200440          >        jsr report_error
                       >
22af :                 >skip1113
                       >
22af : 68              >            pla         ;load status
22b0 : 48              >            pha
                       >            cmp_flag 0
22b1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22b3 : f003            >        beq skip1116
                       >        trap            ;failed not equal (non zero)
22b5 : 200440          >        jsr report_error
                       >
22b8 :                 >skip1116
                       >
22b8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
22b9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22bb : 48              >            pha         ;use stack to load status
22bc : a93f            >            lda #$aa-$6b     ;precharge accu
22be : 28              >            plp
                       >
22bf : 6b              >            db  $6b          ;test nop integrity - flags on
22c0 : ea              >            nop
22c1 : ea              >            nop
                       >            tst_a $aa-$6b,$ff
22c2 : 08              >            php         ;save flags
22c3 : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
22c5 : f003            >        beq skip1121
                       >        trap            ;failed not equal (non zero)
22c7 : 200440          >        jsr report_error
                       >
22ca :                 >skip1121
                       >
22ca : 68              >            pla         ;load status
22cb : 48              >            pha
                       >            cmp_flag $ff
22cc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22ce : f003            >        beq skip1124
                       >        trap            ;failed not equal (non zero)
22d0 : 200440          >        jsr report_error
                       >
22d3 :                 >skip1124
                       >
22d3 : 28              >            plp         ;restore status
                       >
22d4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22d6 : f003            >        beq skip1126
                       >        trap            ;failed not equal (non zero)
22d8 : 200440          >        jsr report_error
                       >
22db :                 >skip1126
                       >
22db : e000            >            cpx #0
                       >            trap_ne         ;x changed
22dd : f003            >        beq skip1128
                       >        trap            ;failed not equal (non zero)
22df : 200440          >        jsr report_error
                       >
22e2 :                 >skip1128
                       >
                        
                                nop_test $7b,1
22e2 : a042            >            ldy #$42
22e4 : a203            >            ldx #4-1
22e6 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
22e7 : ca              >            dex
22e8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
22e9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
22ea : f003            >        beq skip1131
                       >        trap            ;failed not equal (non zero)
22ec : 200440          >        jsr report_error
                       >
22ef :                 >skip1131
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
22ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22f1 : 48              >            pha         ;use stack to load status
22f2 : a984            >            lda #$ff-$7b     ;precharge accu
22f4 : 28              >            plp
                       >
22f5 : 7b              >            db  $7b          ;test nop integrity - flags off
22f6 : ea              >            nop
22f7 : ea              >            nop
                       >            tst_a $ff-$7b,0
22f8 : 08              >            php         ;save flags
22f9 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
22fb : f003            >        beq skip1136
                       >        trap            ;failed not equal (non zero)
22fd : 200440          >        jsr report_error
                       >
2300 :                 >skip1136
                       >
2300 : 68              >            pla         ;load status
2301 : 48              >            pha
                       >            cmp_flag 0
2302 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2304 : f003            >        beq skip1139
                       >        trap            ;failed not equal (non zero)
2306 : 200440          >        jsr report_error
                       >
2309 :                 >skip1139
                       >
2309 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
230a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
230c : 48              >            pha         ;use stack to load status
230d : a92f            >            lda #$aa-$7b     ;precharge accu
230f : 28              >            plp
                       >
2310 : 7b              >            db  $7b          ;test nop integrity - flags on
2311 : ea              >            nop
2312 : ea              >            nop
                       >            tst_a $aa-$7b,$ff
2313 : 08              >            php         ;save flags
2314 : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
2316 : f003            >        beq skip1144
                       >        trap            ;failed not equal (non zero)
2318 : 200440          >        jsr report_error
                       >
231b :                 >skip1144
                       >
231b : 68              >            pla         ;load status
231c : 48              >            pha
                       >            cmp_flag $ff
231d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
231f : f003            >        beq skip1147
                       >        trap            ;failed not equal (non zero)
2321 : 200440          >        jsr report_error
                       >
2324 :                 >skip1147
                       >
2324 : 28              >            plp         ;restore status
                       >
2325 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2327 : f003            >        beq skip1149
                       >        trap            ;failed not equal (non zero)
2329 : 200440          >        jsr report_error
                       >
232c :                 >skip1149
                       >
232c : e000            >            cpx #0
                       >            trap_ne         ;x changed
232e : f003            >        beq skip1151
                       >        trap            ;failed not equal (non zero)
2330 : 200440          >        jsr report_error
                       >
2333 :                 >skip1151
                       >
                        
                                nop_test $8b,1
2333 : a042            >            ldy #$42
2335 : a203            >            ldx #4-1
2337 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
2338 : ca              >            dex
2339 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
233a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
233b : f003            >        beq skip1154
                       >        trap            ;failed not equal (non zero)
233d : 200440          >        jsr report_error
                       >
2340 :                 >skip1154
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
2340 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2342 : 48              >            pha         ;use stack to load status
2343 : a974            >            lda #$ff-$8b     ;precharge accu
2345 : 28              >            plp
                       >
2346 : 8b              >            db  $8b          ;test nop integrity - flags off
2347 : ea              >            nop
2348 : ea              >            nop
                       >            tst_a $ff-$8b,0
2349 : 08              >            php         ;save flags
234a : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
234c : f003            >        beq skip1159
                       >        trap            ;failed not equal (non zero)
234e : 200440          >        jsr report_error
                       >
2351 :                 >skip1159
                       >
2351 : 68              >            pla         ;load status
2352 : 48              >            pha
                       >            cmp_flag 0
2353 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2355 : f003            >        beq skip1162
                       >        trap            ;failed not equal (non zero)
2357 : 200440          >        jsr report_error
                       >
235a :                 >skip1162
                       >
235a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
235b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
235d : 48              >            pha         ;use stack to load status
235e : a91f            >            lda #$aa-$8b     ;precharge accu
2360 : 28              >            plp
                       >
2361 : 8b              >            db  $8b          ;test nop integrity - flags on
2362 : ea              >            nop
2363 : ea              >            nop
                       >            tst_a $aa-$8b,$ff
2364 : 08              >            php         ;save flags
2365 : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
2367 : f003            >        beq skip1167
                       >        trap            ;failed not equal (non zero)
2369 : 200440          >        jsr report_error
                       >
236c :                 >skip1167
                       >
236c : 68              >            pla         ;load status
236d : 48              >            pha
                       >            cmp_flag $ff
236e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2370 : f003            >        beq skip1170
                       >        trap            ;failed not equal (non zero)
2372 : 200440          >        jsr report_error
                       >
2375 :                 >skip1170
                       >
2375 : 28              >            plp         ;restore status
                       >
2376 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2378 : f003            >        beq skip1172
                       >        trap            ;failed not equal (non zero)
237a : 200440          >        jsr report_error
                       >
237d :                 >skip1172
                       >
237d : e000            >            cpx #0
                       >            trap_ne         ;x changed
237f : f003            >        beq skip1174
                       >        trap            ;failed not equal (non zero)
2381 : 200440          >        jsr report_error
                       >
2384 :                 >skip1174
                       >
                        
                                nop_test $9b,1
2384 : a042            >            ldy #$42
2386 : a203            >            ldx #4-1
2388 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
2389 : ca              >            dex
238a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
238b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
238c : f003            >        beq skip1177
                       >        trap            ;failed not equal (non zero)
238e : 200440          >        jsr report_error
                       >
2391 :                 >skip1177
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
2391 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2393 : 48              >            pha         ;use stack to load status
2394 : a964            >            lda #$ff-$9b     ;precharge accu
2396 : 28              >            plp
                       >
2397 : 9b              >            db  $9b          ;test nop integrity - flags off
2398 : ea              >            nop
2399 : ea              >            nop
                       >            tst_a $ff-$9b,0
239a : 08              >            php         ;save flags
239b : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
239d : f003            >        beq skip1182
                       >        trap            ;failed not equal (non zero)
239f : 200440          >        jsr report_error
                       >
23a2 :                 >skip1182
                       >
23a2 : 68              >            pla         ;load status
23a3 : 48              >            pha
                       >            cmp_flag 0
23a4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23a6 : f003            >        beq skip1185
                       >        trap            ;failed not equal (non zero)
23a8 : 200440          >        jsr report_error
                       >
23ab :                 >skip1185
                       >
23ab : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
23ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23ae : 48              >            pha         ;use stack to load status
23af : a90f            >            lda #$aa-$9b     ;precharge accu
23b1 : 28              >            plp
                       >
23b2 : 9b              >            db  $9b          ;test nop integrity - flags on
23b3 : ea              >            nop
23b4 : ea              >            nop
                       >            tst_a $aa-$9b,$ff
23b5 : 08              >            php         ;save flags
23b6 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
23b8 : f003            >        beq skip1190
                       >        trap            ;failed not equal (non zero)
23ba : 200440          >        jsr report_error
                       >
23bd :                 >skip1190
                       >
23bd : 68              >            pla         ;load status
23be : 48              >            pha
                       >            cmp_flag $ff
23bf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23c1 : f003            >        beq skip1193
                       >        trap            ;failed not equal (non zero)
23c3 : 200440          >        jsr report_error
                       >
23c6 :                 >skip1193
                       >
23c6 : 28              >            plp         ;restore status
                       >
23c7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
23c9 : f003            >        beq skip1195
                       >        trap            ;failed not equal (non zero)
23cb : 200440          >        jsr report_error
                       >
23ce :                 >skip1195
                       >
23ce : e000            >            cpx #0
                       >            trap_ne         ;x changed
23d0 : f003            >        beq skip1197
                       >        trap            ;failed not equal (non zero)
23d2 : 200440          >        jsr report_error
                       >
23d5 :                 >skip1197
                       >
                        
                                nop_test $ab,1
23d5 : a042            >            ldy #$42
23d7 : a203            >            ldx #4-1
23d9 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
23da : ca              >            dex
23db : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
23dc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
23dd : f003            >        beq skip1200
                       >        trap            ;failed not equal (non zero)
23df : 200440          >        jsr report_error
                       >
23e2 :                 >skip1200
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
23e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23e4 : 48              >            pha         ;use stack to load status
23e5 : a954            >            lda #$ff-$ab     ;precharge accu
23e7 : 28              >            plp
                       >
23e8 : ab              >            db  $ab          ;test nop integrity - flags off
23e9 : ea              >            nop
23ea : ea              >            nop
                       >            tst_a $ff-$ab,0
23eb : 08              >            php         ;save flags
23ec : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
23ee : f003            >        beq skip1205
                       >        trap            ;failed not equal (non zero)
23f0 : 200440          >        jsr report_error
                       >
23f3 :                 >skip1205
                       >
23f3 : 68              >            pla         ;load status
23f4 : 48              >            pha
                       >            cmp_flag 0
23f5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23f7 : f003            >        beq skip1208
                       >        trap            ;failed not equal (non zero)
23f9 : 200440          >        jsr report_error
                       >
23fc :                 >skip1208
                       >
23fc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
23fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23ff : 48              >            pha         ;use stack to load status
2400 : a9ff            >            lda #$aa-$ab     ;precharge accu
2402 : 28              >            plp
                       >
2403 : ab              >            db  $ab          ;test nop integrity - flags on
2404 : ea              >            nop
2405 : ea              >            nop
                       >            tst_a $aa-$ab,$ff
2406 : 08              >            php         ;save flags
2407 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
2409 : f003            >        beq skip1213
                       >        trap            ;failed not equal (non zero)
240b : 200440          >        jsr report_error
                       >
240e :                 >skip1213
                       >
240e : 68              >            pla         ;load status
240f : 48              >            pha
                       >            cmp_flag $ff
2410 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2412 : f003            >        beq skip1216
                       >        trap            ;failed not equal (non zero)
2414 : 200440          >        jsr report_error
                       >
2417 :                 >skip1216
                       >
2417 : 28              >            plp         ;restore status
                       >
2418 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
241a : f003            >        beq skip1218
                       >        trap            ;failed not equal (non zero)
241c : 200440          >        jsr report_error
                       >
241f :                 >skip1218
                       >
241f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2421 : f003            >        beq skip1220
                       >        trap            ;failed not equal (non zero)
2423 : 200440          >        jsr report_error
                       >
2426 :                 >skip1220
                       >
                        
                                nop_test $bb,1
2426 : a042            >            ldy #$42
2428 : a203            >            ldx #4-1
242a : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
242b : ca              >            dex
242c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
242d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
242e : f003            >        beq skip1223
                       >        trap            ;failed not equal (non zero)
2430 : 200440          >        jsr report_error
                       >
2433 :                 >skip1223
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
2433 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2435 : 48              >            pha         ;use stack to load status
2436 : a944            >            lda #$ff-$bb     ;precharge accu
2438 : 28              >            plp
                       >
2439 : bb              >            db  $bb          ;test nop integrity - flags off
243a : ea              >            nop
243b : ea              >            nop
                       >            tst_a $ff-$bb,0
243c : 08              >            php         ;save flags
243d : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
243f : f003            >        beq skip1228
                       >        trap            ;failed not equal (non zero)
2441 : 200440          >        jsr report_error
                       >
2444 :                 >skip1228
                       >
2444 : 68              >            pla         ;load status
2445 : 48              >            pha
                       >            cmp_flag 0
2446 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2448 : f003            >        beq skip1231
                       >        trap            ;failed not equal (non zero)
244a : 200440          >        jsr report_error
                       >
244d :                 >skip1231
                       >
244d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
244e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2450 : 48              >            pha         ;use stack to load status
2451 : a9ef            >            lda #$aa-$bb     ;precharge accu
2453 : 28              >            plp
                       >
2454 : bb              >            db  $bb          ;test nop integrity - flags on
2455 : ea              >            nop
2456 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
2457 : 08              >            php         ;save flags
2458 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
245a : f003            >        beq skip1236
                       >        trap            ;failed not equal (non zero)
245c : 200440          >        jsr report_error
                       >
245f :                 >skip1236
                       >
245f : 68              >            pla         ;load status
2460 : 48              >            pha
                       >            cmp_flag $ff
2461 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2463 : f003            >        beq skip1239
                       >        trap            ;failed not equal (non zero)
2465 : 200440          >        jsr report_error
                       >
2468 :                 >skip1239
                       >
2468 : 28              >            plp         ;restore status
                       >
2469 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
246b : f003            >        beq skip1241
                       >        trap            ;failed not equal (non zero)
246d : 200440          >        jsr report_error
                       >
2470 :                 >skip1241
                       >
2470 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2472 : f003            >        beq skip1243
                       >        trap            ;failed not equal (non zero)
2474 : 200440          >        jsr report_error
                       >
2477 :                 >skip1243
                       >
                        
                                nop_test $eb,1
2477 : a042            >            ldy #$42
2479 : a203            >            ldx #4-1
247b : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
247c : ca              >            dex
247d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
247e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
247f : f003            >        beq skip1246
                       >        trap            ;failed not equal (non zero)
2481 : 200440          >        jsr report_error
                       >
2484 :                 >skip1246
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
2484 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2486 : 48              >            pha         ;use stack to load status
2487 : a914            >            lda #$ff-$eb     ;precharge accu
2489 : 28              >            plp
                       >
248a : eb              >            db  $eb          ;test nop integrity - flags off
248b : ea              >            nop
248c : ea              >            nop
                       >            tst_a $ff-$eb,0
248d : 08              >            php         ;save flags
248e : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
2490 : f003            >        beq skip1251
                       >        trap            ;failed not equal (non zero)
2492 : 200440          >        jsr report_error
                       >
2495 :                 >skip1251
                       >
2495 : 68              >            pla         ;load status
2496 : 48              >            pha
                       >            cmp_flag 0
2497 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2499 : f003            >        beq skip1254
                       >        trap            ;failed not equal (non zero)
249b : 200440          >        jsr report_error
                       >
249e :                 >skip1254
                       >
249e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
249f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24a1 : 48              >            pha         ;use stack to load status
24a2 : a9bf            >            lda #$aa-$eb     ;precharge accu
24a4 : 28              >            plp
                       >
24a5 : eb              >            db  $eb          ;test nop integrity - flags on
24a6 : ea              >            nop
24a7 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
24a8 : 08              >            php         ;save flags
24a9 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
24ab : f003            >        beq skip1259
                       >        trap            ;failed not equal (non zero)
24ad : 200440          >        jsr report_error
                       >
24b0 :                 >skip1259
                       >
24b0 : 68              >            pla         ;load status
24b1 : 48              >            pha
                       >            cmp_flag $ff
24b2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24b4 : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
24b6 : 200440          >        jsr report_error
                       >
24b9 :                 >skip1262
                       >
24b9 : 28              >            plp         ;restore status
                       >
24ba : c042            >            cpy #$42
                       >            trap_ne         ;y changed
24bc : f003            >        beq skip1264
                       >        trap            ;failed not equal (non zero)
24be : 200440          >        jsr report_error
                       >
24c1 :                 >skip1264
                       >
24c1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
24c3 : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
24c5 : 200440          >        jsr report_error
                       >
24c8 :                 >skip1266
                       >
                        
                                nop_test $fb,1
24c8 : a042            >            ldy #$42
24ca : a203            >            ldx #4-1
24cc : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
24cd : ca              >            dex
24ce : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24cf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24d0 : f003            >        beq skip1269
                       >        trap            ;failed not equal (non zero)
24d2 : 200440          >        jsr report_error
                       >
24d5 :                 >skip1269
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
24d5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24d7 : 48              >            pha         ;use stack to load status
24d8 : a904            >            lda #$ff-$fb     ;precharge accu
24da : 28              >            plp
                       >
24db : fb              >            db  $fb          ;test nop integrity - flags off
24dc : ea              >            nop
24dd : ea              >            nop
                       >            tst_a $ff-$fb,0
24de : 08              >            php         ;save flags
24df : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
24e1 : f003            >        beq skip1274
                       >        trap            ;failed not equal (non zero)
24e3 : 200440          >        jsr report_error
                       >
24e6 :                 >skip1274
                       >
24e6 : 68              >            pla         ;load status
24e7 : 48              >            pha
                       >            cmp_flag 0
24e8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24ea : f003            >        beq skip1277
                       >        trap            ;failed not equal (non zero)
24ec : 200440          >        jsr report_error
                       >
24ef :                 >skip1277
                       >
24ef : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
24f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24f2 : 48              >            pha         ;use stack to load status
24f3 : a9af            >            lda #$aa-$fb     ;precharge accu
24f5 : 28              >            plp
                       >
24f6 : fb              >            db  $fb          ;test nop integrity - flags on
24f7 : ea              >            nop
24f8 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
24f9 : 08              >            php         ;save flags
24fa : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
24fc : f003            >        beq skip1282
                       >        trap            ;failed not equal (non zero)
24fe : 200440          >        jsr report_error
                       >
2501 :                 >skip1282
                       >
2501 : 68              >            pla         ;load status
2502 : 48              >            pha
                       >            cmp_flag $ff
2503 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2505 : f003            >        beq skip1285
                       >        trap            ;failed not equal (non zero)
2507 : 200440          >        jsr report_error
                       >
250a :                 >skip1285
                       >
250a : 28              >            plp         ;restore status
                       >
250b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
250d : f003            >        beq skip1287
                       >        trap            ;failed not equal (non zero)
250f : 200440          >        jsr report_error
                       >
2512 :                 >skip1287
                       >
2512 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2514 : f003            >        beq skip1289
                       >        trap            ;failed not equal (non zero)
2516 : 200440          >        jsr report_error
                       >
2519 :                 >skip1289
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
2519 : a042            >            ldy #$42
251b : a203            >            ldx #4-1
251d : 07              >            db  $07          ;test nop length
                       >        if 1 = 1
251e : ca              >            dex
251f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2520 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2521 : f003            >        beq skip1292
                       >        trap            ;failed not equal (non zero)
2523 : 200440          >        jsr report_error
                       >
2526 :                 >skip1292
                       >
                       >            set_a $ff-$07,0
                       >            load_flag 0
2526 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2528 : 48              >            pha         ;use stack to load status
2529 : a9f8            >            lda #$ff-$07     ;precharge accu
252b : 28              >            plp
                       >
252c : 07              >            db  $07          ;test nop integrity - flags off
252d : ea              >            nop
252e : ea              >            nop
                       >            tst_a $ff-$07,0
252f : 08              >            php         ;save flags
2530 : c9f8            >            cmp #$ff-$07     ;test result
                       >            trap_ne
2532 : f003            >        beq skip1297
                       >        trap            ;failed not equal (non zero)
2534 : 200440          >        jsr report_error
                       >
2537 :                 >skip1297
                       >
2537 : 68              >            pla         ;load status
2538 : 48              >            pha
                       >            cmp_flag 0
2539 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
253b : f003            >        beq skip1300
                       >        trap            ;failed not equal (non zero)
253d : 200440          >        jsr report_error
                       >
2540 :                 >skip1300
                       >
2540 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$07,$ff
                       >            load_flag $ff
2541 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2543 : 48              >            pha         ;use stack to load status
2544 : a9a3            >            lda #$aa-$07     ;precharge accu
2546 : 28              >            plp
                       >
2547 : 07              >            db  $07          ;test nop integrity - flags on
2548 : ea              >            nop
2549 : ea              >            nop
                       >            tst_a $aa-$07,$ff
254a : 08              >            php         ;save flags
254b : c9a3            >            cmp #$aa-$07     ;test result
                       >            trap_ne
254d : f003            >        beq skip1305
                       >        trap            ;failed not equal (non zero)
254f : 200440          >        jsr report_error
                       >
2552 :                 >skip1305
                       >
2552 : 68              >            pla         ;load status
2553 : 48              >            pha
                       >            cmp_flag $ff
2554 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2556 : f003            >        beq skip1308
                       >        trap            ;failed not equal (non zero)
2558 : 200440          >        jsr report_error
                       >
255b :                 >skip1308
                       >
255b : 28              >            plp         ;restore status
                       >
255c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
255e : f003            >        beq skip1310
                       >        trap            ;failed not equal (non zero)
2560 : 200440          >        jsr report_error
                       >
2563 :                 >skip1310
                       >
2563 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2565 : f003            >        beq skip1312
                       >        trap            ;failed not equal (non zero)
2567 : 200440          >        jsr report_error
                       >
256a :                 >skip1312
                       >
                        
                                nop_test $17,1
256a : a042            >            ldy #$42
256c : a203            >            ldx #4-1
256e : 17              >            db  $17          ;test nop length
                       >        if 1 = 1
256f : ca              >            dex
2570 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2571 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2572 : f003            >        beq skip1315
                       >        trap            ;failed not equal (non zero)
2574 : 200440          >        jsr report_error
                       >
2577 :                 >skip1315
                       >
                       >            set_a $ff-$17,0
                       >            load_flag 0
2577 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2579 : 48              >            pha         ;use stack to load status
257a : a9e8            >            lda #$ff-$17     ;precharge accu
257c : 28              >            plp
                       >
257d : 17              >            db  $17          ;test nop integrity - flags off
257e : ea              >            nop
257f : ea              >            nop
                       >            tst_a $ff-$17,0
2580 : 08              >            php         ;save flags
2581 : c9e8            >            cmp #$ff-$17     ;test result
                       >            trap_ne
2583 : f003            >        beq skip1320
                       >        trap            ;failed not equal (non zero)
2585 : 200440          >        jsr report_error
                       >
2588 :                 >skip1320
                       >
2588 : 68              >            pla         ;load status
2589 : 48              >            pha
                       >            cmp_flag 0
258a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
258c : f003            >        beq skip1323
                       >        trap            ;failed not equal (non zero)
258e : 200440          >        jsr report_error
                       >
2591 :                 >skip1323
                       >
2591 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$17,$ff
                       >            load_flag $ff
2592 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2594 : 48              >            pha         ;use stack to load status
2595 : a993            >            lda #$aa-$17     ;precharge accu
2597 : 28              >            plp
                       >
2598 : 17              >            db  $17          ;test nop integrity - flags on
2599 : ea              >            nop
259a : ea              >            nop
                       >            tst_a $aa-$17,$ff
259b : 08              >            php         ;save flags
259c : c993            >            cmp #$aa-$17     ;test result
                       >            trap_ne
259e : f003            >        beq skip1328
                       >        trap            ;failed not equal (non zero)
25a0 : 200440          >        jsr report_error
                       >
25a3 :                 >skip1328
                       >
25a3 : 68              >            pla         ;load status
25a4 : 48              >            pha
                       >            cmp_flag $ff
25a5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25a7 : f003            >        beq skip1331
                       >        trap            ;failed not equal (non zero)
25a9 : 200440          >        jsr report_error
                       >
25ac :                 >skip1331
                       >
25ac : 28              >            plp         ;restore status
                       >
25ad : c042            >            cpy #$42
                       >            trap_ne         ;y changed
25af : f003            >        beq skip1333
                       >        trap            ;failed not equal (non zero)
25b1 : 200440          >        jsr report_error
                       >
25b4 :                 >skip1333
                       >
25b4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
25b6 : f003            >        beq skip1335
                       >        trap            ;failed not equal (non zero)
25b8 : 200440          >        jsr report_error
                       >
25bb :                 >skip1335
                       >
                        
                                nop_test $27,1
25bb : a042            >            ldy #$42
25bd : a203            >            ldx #4-1
25bf : 27              >            db  $27          ;test nop length
                       >        if 1 = 1
25c0 : ca              >            dex
25c1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
25c2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
25c3 : f003            >        beq skip1338
                       >        trap            ;failed not equal (non zero)
25c5 : 200440          >        jsr report_error
                       >
25c8 :                 >skip1338
                       >
                       >            set_a $ff-$27,0
                       >            load_flag 0
25c8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25ca : 48              >            pha         ;use stack to load status
25cb : a9d8            >            lda #$ff-$27     ;precharge accu
25cd : 28              >            plp
                       >
25ce : 27              >            db  $27          ;test nop integrity - flags off
25cf : ea              >            nop
25d0 : ea              >            nop
                       >            tst_a $ff-$27,0
25d1 : 08              >            php         ;save flags
25d2 : c9d8            >            cmp #$ff-$27     ;test result
                       >            trap_ne
25d4 : f003            >        beq skip1343
                       >        trap            ;failed not equal (non zero)
25d6 : 200440          >        jsr report_error
                       >
25d9 :                 >skip1343
                       >
25d9 : 68              >            pla         ;load status
25da : 48              >            pha
                       >            cmp_flag 0
25db : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25dd : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
25df : 200440          >        jsr report_error
                       >
25e2 :                 >skip1346
                       >
25e2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$27,$ff
                       >            load_flag $ff
25e3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25e5 : 48              >            pha         ;use stack to load status
25e6 : a983            >            lda #$aa-$27     ;precharge accu
25e8 : 28              >            plp
                       >
25e9 : 27              >            db  $27          ;test nop integrity - flags on
25ea : ea              >            nop
25eb : ea              >            nop
                       >            tst_a $aa-$27,$ff
25ec : 08              >            php         ;save flags
25ed : c983            >            cmp #$aa-$27     ;test result
                       >            trap_ne
25ef : f003            >        beq skip1351
                       >        trap            ;failed not equal (non zero)
25f1 : 200440          >        jsr report_error
                       >
25f4 :                 >skip1351
                       >
25f4 : 68              >            pla         ;load status
25f5 : 48              >            pha
                       >            cmp_flag $ff
25f6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25f8 : f003            >        beq skip1354
                       >        trap            ;failed not equal (non zero)
25fa : 200440          >        jsr report_error
                       >
25fd :                 >skip1354
                       >
25fd : 28              >            plp         ;restore status
                       >
25fe : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2600 : f003            >        beq skip1356
                       >        trap            ;failed not equal (non zero)
2602 : 200440          >        jsr report_error
                       >
2605 :                 >skip1356
                       >
2605 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2607 : f003            >        beq skip1358
                       >        trap            ;failed not equal (non zero)
2609 : 200440          >        jsr report_error
                       >
260c :                 >skip1358
                       >
                        
                                nop_test $37,1
260c : a042            >            ldy #$42
260e : a203            >            ldx #4-1
2610 : 37              >            db  $37          ;test nop length
                       >        if 1 = 1
2611 : ca              >            dex
2612 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2613 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2614 : f003            >        beq skip1361
                       >        trap            ;failed not equal (non zero)
2616 : 200440          >        jsr report_error
                       >
2619 :                 >skip1361
                       >
                       >            set_a $ff-$37,0
                       >            load_flag 0
2619 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
261b : 48              >            pha         ;use stack to load status
261c : a9c8            >            lda #$ff-$37     ;precharge accu
261e : 28              >            plp
                       >
261f : 37              >            db  $37          ;test nop integrity - flags off
2620 : ea              >            nop
2621 : ea              >            nop
                       >            tst_a $ff-$37,0
2622 : 08              >            php         ;save flags
2623 : c9c8            >            cmp #$ff-$37     ;test result
                       >            trap_ne
2625 : f003            >        beq skip1366
                       >        trap            ;failed not equal (non zero)
2627 : 200440          >        jsr report_error
                       >
262a :                 >skip1366
                       >
262a : 68              >            pla         ;load status
262b : 48              >            pha
                       >            cmp_flag 0
262c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
262e : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
2630 : 200440          >        jsr report_error
                       >
2633 :                 >skip1369
                       >
2633 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$37,$ff
                       >            load_flag $ff
2634 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2636 : 48              >            pha         ;use stack to load status
2637 : a973            >            lda #$aa-$37     ;precharge accu
2639 : 28              >            plp
                       >
263a : 37              >            db  $37          ;test nop integrity - flags on
263b : ea              >            nop
263c : ea              >            nop
                       >            tst_a $aa-$37,$ff
263d : 08              >            php         ;save flags
263e : c973            >            cmp #$aa-$37     ;test result
                       >            trap_ne
2640 : f003            >        beq skip1374
                       >        trap            ;failed not equal (non zero)
2642 : 200440          >        jsr report_error
                       >
2645 :                 >skip1374
                       >
2645 : 68              >            pla         ;load status
2646 : 48              >            pha
                       >            cmp_flag $ff
2647 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2649 : f003            >        beq skip1377
                       >        trap            ;failed not equal (non zero)
264b : 200440          >        jsr report_error
                       >
264e :                 >skip1377
                       >
264e : 28              >            plp         ;restore status
                       >
264f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2651 : f003            >        beq skip1379
                       >        trap            ;failed not equal (non zero)
2653 : 200440          >        jsr report_error
                       >
2656 :                 >skip1379
                       >
2656 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2658 : f003            >        beq skip1381
                       >        trap            ;failed not equal (non zero)
265a : 200440          >        jsr report_error
                       >
265d :                 >skip1381
                       >
                        
                                nop_test $47,1
265d : a042            >            ldy #$42
265f : a203            >            ldx #4-1
2661 : 47              >            db  $47          ;test nop length
                       >        if 1 = 1
2662 : ca              >            dex
2663 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2664 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2665 : f003            >        beq skip1384
                       >        trap            ;failed not equal (non zero)
2667 : 200440          >        jsr report_error
                       >
266a :                 >skip1384
                       >
                       >            set_a $ff-$47,0
                       >            load_flag 0
266a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
266c : 48              >            pha         ;use stack to load status
266d : a9b8            >            lda #$ff-$47     ;precharge accu
266f : 28              >            plp
                       >
2670 : 47              >            db  $47          ;test nop integrity - flags off
2671 : ea              >            nop
2672 : ea              >            nop
                       >            tst_a $ff-$47,0
2673 : 08              >            php         ;save flags
2674 : c9b8            >            cmp #$ff-$47     ;test result
                       >            trap_ne
2676 : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
2678 : 200440          >        jsr report_error
                       >
267b :                 >skip1389
                       >
267b : 68              >            pla         ;load status
267c : 48              >            pha
                       >            cmp_flag 0
267d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
267f : f003            >        beq skip1392
                       >        trap            ;failed not equal (non zero)
2681 : 200440          >        jsr report_error
                       >
2684 :                 >skip1392
                       >
2684 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$47,$ff
                       >            load_flag $ff
2685 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2687 : 48              >            pha         ;use stack to load status
2688 : a963            >            lda #$aa-$47     ;precharge accu
268a : 28              >            plp
                       >
268b : 47              >            db  $47          ;test nop integrity - flags on
268c : ea              >            nop
268d : ea              >            nop
                       >            tst_a $aa-$47,$ff
268e : 08              >            php         ;save flags
268f : c963            >            cmp #$aa-$47     ;test result
                       >            trap_ne
2691 : f003            >        beq skip1397
                       >        trap            ;failed not equal (non zero)
2693 : 200440          >        jsr report_error
                       >
2696 :                 >skip1397
                       >
2696 : 68              >            pla         ;load status
2697 : 48              >            pha
                       >            cmp_flag $ff
2698 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
269a : f003            >        beq skip1400
                       >        trap            ;failed not equal (non zero)
269c : 200440          >        jsr report_error
                       >
269f :                 >skip1400
                       >
269f : 28              >            plp         ;restore status
                       >
26a0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
26a2 : f003            >        beq skip1402
                       >        trap            ;failed not equal (non zero)
26a4 : 200440          >        jsr report_error
                       >
26a7 :                 >skip1402
                       >
26a7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
26a9 : f003            >        beq skip1404
                       >        trap            ;failed not equal (non zero)
26ab : 200440          >        jsr report_error
                       >
26ae :                 >skip1404
                       >
                        
                                nop_test $57,1
26ae : a042            >            ldy #$42
26b0 : a203            >            ldx #4-1
26b2 : 57              >            db  $57          ;test nop length
                       >        if 1 = 1
26b3 : ca              >            dex
26b4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
26b5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
26b6 : f003            >        beq skip1407
                       >        trap            ;failed not equal (non zero)
26b8 : 200440          >        jsr report_error
                       >
26bb :                 >skip1407
                       >
                       >            set_a $ff-$57,0
                       >            load_flag 0
26bb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26bd : 48              >            pha         ;use stack to load status
26be : a9a8            >            lda #$ff-$57     ;precharge accu
26c0 : 28              >            plp
                       >
26c1 : 57              >            db  $57          ;test nop integrity - flags off
26c2 : ea              >            nop
26c3 : ea              >            nop
                       >            tst_a $ff-$57,0
26c4 : 08              >            php         ;save flags
26c5 : c9a8            >            cmp #$ff-$57     ;test result
                       >            trap_ne
26c7 : f003            >        beq skip1412
                       >        trap            ;failed not equal (non zero)
26c9 : 200440          >        jsr report_error
                       >
26cc :                 >skip1412
                       >
26cc : 68              >            pla         ;load status
26cd : 48              >            pha
                       >            cmp_flag 0
26ce : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26d0 : f003            >        beq skip1415
                       >        trap            ;failed not equal (non zero)
26d2 : 200440          >        jsr report_error
                       >
26d5 :                 >skip1415
                       >
26d5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$57,$ff
                       >            load_flag $ff
26d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26d8 : 48              >            pha         ;use stack to load status
26d9 : a953            >            lda #$aa-$57     ;precharge accu
26db : 28              >            plp
                       >
26dc : 57              >            db  $57          ;test nop integrity - flags on
26dd : ea              >            nop
26de : ea              >            nop
                       >            tst_a $aa-$57,$ff
26df : 08              >            php         ;save flags
26e0 : c953            >            cmp #$aa-$57     ;test result
                       >            trap_ne
26e2 : f003            >        beq skip1420
                       >        trap            ;failed not equal (non zero)
26e4 : 200440          >        jsr report_error
                       >
26e7 :                 >skip1420
                       >
26e7 : 68              >            pla         ;load status
26e8 : 48              >            pha
                       >            cmp_flag $ff
26e9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26eb : f003            >        beq skip1423
                       >        trap            ;failed not equal (non zero)
26ed : 200440          >        jsr report_error
                       >
26f0 :                 >skip1423
                       >
26f0 : 28              >            plp         ;restore status
                       >
26f1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
26f3 : f003            >        beq skip1425
                       >        trap            ;failed not equal (non zero)
26f5 : 200440          >        jsr report_error
                       >
26f8 :                 >skip1425
                       >
26f8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
26fa : f003            >        beq skip1427
                       >        trap            ;failed not equal (non zero)
26fc : 200440          >        jsr report_error
                       >
26ff :                 >skip1427
                       >
                        
                                nop_test $67,1
26ff : a042            >            ldy #$42
2701 : a203            >            ldx #4-1
2703 : 67              >            db  $67          ;test nop length
                       >        if 1 = 1
2704 : ca              >            dex
2705 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2706 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2707 : f003            >        beq skip1430
                       >        trap            ;failed not equal (non zero)
2709 : 200440          >        jsr report_error
                       >
270c :                 >skip1430
                       >
                       >            set_a $ff-$67,0
                       >            load_flag 0
270c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
270e : 48              >            pha         ;use stack to load status
270f : a998            >            lda #$ff-$67     ;precharge accu
2711 : 28              >            plp
                       >
2712 : 67              >            db  $67          ;test nop integrity - flags off
2713 : ea              >            nop
2714 : ea              >            nop
                       >            tst_a $ff-$67,0
2715 : 08              >            php         ;save flags
2716 : c998            >            cmp #$ff-$67     ;test result
                       >            trap_ne
2718 : f003            >        beq skip1435
                       >        trap            ;failed not equal (non zero)
271a : 200440          >        jsr report_error
                       >
271d :                 >skip1435
                       >
271d : 68              >            pla         ;load status
271e : 48              >            pha
                       >            cmp_flag 0
271f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2721 : f003            >        beq skip1438
                       >        trap            ;failed not equal (non zero)
2723 : 200440          >        jsr report_error
                       >
2726 :                 >skip1438
                       >
2726 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$67,$ff
                       >            load_flag $ff
2727 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2729 : 48              >            pha         ;use stack to load status
272a : a943            >            lda #$aa-$67     ;precharge accu
272c : 28              >            plp
                       >
272d : 67              >            db  $67          ;test nop integrity - flags on
272e : ea              >            nop
272f : ea              >            nop
                       >            tst_a $aa-$67,$ff
2730 : 08              >            php         ;save flags
2731 : c943            >            cmp #$aa-$67     ;test result
                       >            trap_ne
2733 : f003            >        beq skip1443
                       >        trap            ;failed not equal (non zero)
2735 : 200440          >        jsr report_error
                       >
2738 :                 >skip1443
                       >
2738 : 68              >            pla         ;load status
2739 : 48              >            pha
                       >            cmp_flag $ff
273a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
273c : f003            >        beq skip1446
                       >        trap            ;failed not equal (non zero)
273e : 200440          >        jsr report_error
                       >
2741 :                 >skip1446
                       >
2741 : 28              >            plp         ;restore status
                       >
2742 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2744 : f003            >        beq skip1448
                       >        trap            ;failed not equal (non zero)
2746 : 200440          >        jsr report_error
                       >
2749 :                 >skip1448
                       >
2749 : e000            >            cpx #0
                       >            trap_ne         ;x changed
274b : f003            >        beq skip1450
                       >        trap            ;failed not equal (non zero)
274d : 200440          >        jsr report_error
                       >
2750 :                 >skip1450
                       >
                        
                                nop_test $77,1
2750 : a042            >            ldy #$42
2752 : a203            >            ldx #4-1
2754 : 77              >            db  $77          ;test nop length
                       >        if 1 = 1
2755 : ca              >            dex
2756 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2757 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2758 : f003            >        beq skip1453
                       >        trap            ;failed not equal (non zero)
275a : 200440          >        jsr report_error
                       >
275d :                 >skip1453
                       >
                       >            set_a $ff-$77,0
                       >            load_flag 0
275d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
275f : 48              >            pha         ;use stack to load status
2760 : a988            >            lda #$ff-$77     ;precharge accu
2762 : 28              >            plp
                       >
2763 : 77              >            db  $77          ;test nop integrity - flags off
2764 : ea              >            nop
2765 : ea              >            nop
                       >            tst_a $ff-$77,0
2766 : 08              >            php         ;save flags
2767 : c988            >            cmp #$ff-$77     ;test result
                       >            trap_ne
2769 : f003            >        beq skip1458
                       >        trap            ;failed not equal (non zero)
276b : 200440          >        jsr report_error
                       >
276e :                 >skip1458
                       >
276e : 68              >            pla         ;load status
276f : 48              >            pha
                       >            cmp_flag 0
2770 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2772 : f003            >        beq skip1461
                       >        trap            ;failed not equal (non zero)
2774 : 200440          >        jsr report_error
                       >
2777 :                 >skip1461
                       >
2777 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$77,$ff
                       >            load_flag $ff
2778 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
277a : 48              >            pha         ;use stack to load status
277b : a933            >            lda #$aa-$77     ;precharge accu
277d : 28              >            plp
                       >
277e : 77              >            db  $77          ;test nop integrity - flags on
277f : ea              >            nop
2780 : ea              >            nop
                       >            tst_a $aa-$77,$ff
2781 : 08              >            php         ;save flags
2782 : c933            >            cmp #$aa-$77     ;test result
                       >            trap_ne
2784 : f003            >        beq skip1466
                       >        trap            ;failed not equal (non zero)
2786 : 200440          >        jsr report_error
                       >
2789 :                 >skip1466
                       >
2789 : 68              >            pla         ;load status
278a : 48              >            pha
                       >            cmp_flag $ff
278b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
278d : f003            >        beq skip1469
                       >        trap            ;failed not equal (non zero)
278f : 200440          >        jsr report_error
                       >
2792 :                 >skip1469
                       >
2792 : 28              >            plp         ;restore status
                       >
2793 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2795 : f003            >        beq skip1471
                       >        trap            ;failed not equal (non zero)
2797 : 200440          >        jsr report_error
                       >
279a :                 >skip1471
                       >
279a : e000            >            cpx #0
                       >            trap_ne         ;x changed
279c : f003            >        beq skip1473
                       >        trap            ;failed not equal (non zero)
279e : 200440          >        jsr report_error
                       >
27a1 :                 >skip1473
                       >
                        
                                nop_test $87,1
27a1 : a042            >            ldy #$42
27a3 : a203            >            ldx #4-1
27a5 : 87              >            db  $87          ;test nop length
                       >        if 1 = 1
27a6 : ca              >            dex
27a7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27a8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27a9 : f003            >        beq skip1476
                       >        trap            ;failed not equal (non zero)
27ab : 200440          >        jsr report_error
                       >
27ae :                 >skip1476
                       >
                       >            set_a $ff-$87,0
                       >            load_flag 0
27ae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27b0 : 48              >            pha         ;use stack to load status
27b1 : a978            >            lda #$ff-$87     ;precharge accu
27b3 : 28              >            plp
                       >
27b4 : 87              >            db  $87          ;test nop integrity - flags off
27b5 : ea              >            nop
27b6 : ea              >            nop
                       >            tst_a $ff-$87,0
27b7 : 08              >            php         ;save flags
27b8 : c978            >            cmp #$ff-$87     ;test result
                       >            trap_ne
27ba : f003            >        beq skip1481
                       >        trap            ;failed not equal (non zero)
27bc : 200440          >        jsr report_error
                       >
27bf :                 >skip1481
                       >
27bf : 68              >            pla         ;load status
27c0 : 48              >            pha
                       >            cmp_flag 0
27c1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27c3 : f003            >        beq skip1484
                       >        trap            ;failed not equal (non zero)
27c5 : 200440          >        jsr report_error
                       >
27c8 :                 >skip1484
                       >
27c8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$87,$ff
                       >            load_flag $ff
27c9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27cb : 48              >            pha         ;use stack to load status
27cc : a923            >            lda #$aa-$87     ;precharge accu
27ce : 28              >            plp
                       >
27cf : 87              >            db  $87          ;test nop integrity - flags on
27d0 : ea              >            nop
27d1 : ea              >            nop
                       >            tst_a $aa-$87,$ff
27d2 : 08              >            php         ;save flags
27d3 : c923            >            cmp #$aa-$87     ;test result
                       >            trap_ne
27d5 : f003            >        beq skip1489
                       >        trap            ;failed not equal (non zero)
27d7 : 200440          >        jsr report_error
                       >
27da :                 >skip1489
                       >
27da : 68              >            pla         ;load status
27db : 48              >            pha
                       >            cmp_flag $ff
27dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27de : f003            >        beq skip1492
                       >        trap            ;failed not equal (non zero)
27e0 : 200440          >        jsr report_error
                       >
27e3 :                 >skip1492
                       >
27e3 : 28              >            plp         ;restore status
                       >
27e4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
27e6 : f003            >        beq skip1494
                       >        trap            ;failed not equal (non zero)
27e8 : 200440          >        jsr report_error
                       >
27eb :                 >skip1494
                       >
27eb : e000            >            cpx #0
                       >            trap_ne         ;x changed
27ed : f003            >        beq skip1496
                       >        trap            ;failed not equal (non zero)
27ef : 200440          >        jsr report_error
                       >
27f2 :                 >skip1496
                       >
                        
                                nop_test $97,1
27f2 : a042            >            ldy #$42
27f4 : a203            >            ldx #4-1
27f6 : 97              >            db  $97          ;test nop length
                       >        if 1 = 1
27f7 : ca              >            dex
27f8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27f9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27fa : f003            >        beq skip1499
                       >        trap            ;failed not equal (non zero)
27fc : 200440          >        jsr report_error
                       >
27ff :                 >skip1499
                       >
                       >            set_a $ff-$97,0
                       >            load_flag 0
27ff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2801 : 48              >            pha         ;use stack to load status
2802 : a968            >            lda #$ff-$97     ;precharge accu
2804 : 28              >            plp
                       >
2805 : 97              >            db  $97          ;test nop integrity - flags off
2806 : ea              >            nop
2807 : ea              >            nop
                       >            tst_a $ff-$97,0
2808 : 08              >            php         ;save flags
2809 : c968            >            cmp #$ff-$97     ;test result
                       >            trap_ne
280b : f003            >        beq skip1504
                       >        trap            ;failed not equal (non zero)
280d : 200440          >        jsr report_error
                       >
2810 :                 >skip1504
                       >
2810 : 68              >            pla         ;load status
2811 : 48              >            pha
                       >            cmp_flag 0
2812 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2814 : f003            >        beq skip1507
                       >        trap            ;failed not equal (non zero)
2816 : 200440          >        jsr report_error
                       >
2819 :                 >skip1507
                       >
2819 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$97,$ff
                       >            load_flag $ff
281a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
281c : 48              >            pha         ;use stack to load status
281d : a913            >            lda #$aa-$97     ;precharge accu
281f : 28              >            plp
                       >
2820 : 97              >            db  $97          ;test nop integrity - flags on
2821 : ea              >            nop
2822 : ea              >            nop
                       >            tst_a $aa-$97,$ff
2823 : 08              >            php         ;save flags
2824 : c913            >            cmp #$aa-$97     ;test result
                       >            trap_ne
2826 : f003            >        beq skip1512
                       >        trap            ;failed not equal (non zero)
2828 : 200440          >        jsr report_error
                       >
282b :                 >skip1512
                       >
282b : 68              >            pla         ;load status
282c : 48              >            pha
                       >            cmp_flag $ff
282d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
282f : f003            >        beq skip1515
                       >        trap            ;failed not equal (non zero)
2831 : 200440          >        jsr report_error
                       >
2834 :                 >skip1515
                       >
2834 : 28              >            plp         ;restore status
                       >
2835 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2837 : f003            >        beq skip1517
                       >        trap            ;failed not equal (non zero)
2839 : 200440          >        jsr report_error
                       >
283c :                 >skip1517
                       >
283c : e000            >            cpx #0
                       >            trap_ne         ;x changed
283e : f003            >        beq skip1519
                       >        trap            ;failed not equal (non zero)
2840 : 200440          >        jsr report_error
                       >
2843 :                 >skip1519
                       >
                        
                                nop_test $a7,1
2843 : a042            >            ldy #$42
2845 : a203            >            ldx #4-1
2847 : a7              >            db  $a7          ;test nop length
                       >        if 1 = 1
2848 : ca              >            dex
2849 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
284a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
284b : f003            >        beq skip1522
                       >        trap            ;failed not equal (non zero)
284d : 200440          >        jsr report_error
                       >
2850 :                 >skip1522
                       >
                       >            set_a $ff-$a7,0
                       >            load_flag 0
2850 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2852 : 48              >            pha         ;use stack to load status
2853 : a958            >            lda #$ff-$a7     ;precharge accu
2855 : 28              >            plp
                       >
2856 : a7              >            db  $a7          ;test nop integrity - flags off
2857 : ea              >            nop
2858 : ea              >            nop
                       >            tst_a $ff-$a7,0
2859 : 08              >            php         ;save flags
285a : c958            >            cmp #$ff-$a7     ;test result
                       >            trap_ne
285c : f003            >        beq skip1527
                       >        trap            ;failed not equal (non zero)
285e : 200440          >        jsr report_error
                       >
2861 :                 >skip1527
                       >
2861 : 68              >            pla         ;load status
2862 : 48              >            pha
                       >            cmp_flag 0
2863 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2865 : f003            >        beq skip1530
                       >        trap            ;failed not equal (non zero)
2867 : 200440          >        jsr report_error
                       >
286a :                 >skip1530
                       >
286a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a7,$ff
                       >            load_flag $ff
286b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
286d : 48              >            pha         ;use stack to load status
286e : a903            >            lda #$aa-$a7     ;precharge accu
2870 : 28              >            plp
                       >
2871 : a7              >            db  $a7          ;test nop integrity - flags on
2872 : ea              >            nop
2873 : ea              >            nop
                       >            tst_a $aa-$a7,$ff
2874 : 08              >            php         ;save flags
2875 : c903            >            cmp #$aa-$a7     ;test result
                       >            trap_ne
2877 : f003            >        beq skip1535
                       >        trap            ;failed not equal (non zero)
2879 : 200440          >        jsr report_error
                       >
287c :                 >skip1535
                       >
287c : 68              >            pla         ;load status
287d : 48              >            pha
                       >            cmp_flag $ff
287e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2880 : f003            >        beq skip1538
                       >        trap            ;failed not equal (non zero)
2882 : 200440          >        jsr report_error
                       >
2885 :                 >skip1538
                       >
2885 : 28              >            plp         ;restore status
                       >
2886 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2888 : f003            >        beq skip1540
                       >        trap            ;failed not equal (non zero)
288a : 200440          >        jsr report_error
                       >
288d :                 >skip1540
                       >
288d : e000            >            cpx #0
                       >            trap_ne         ;x changed
288f : f003            >        beq skip1542
                       >        trap            ;failed not equal (non zero)
2891 : 200440          >        jsr report_error
                       >
2894 :                 >skip1542
                       >
                        
                                nop_test $b7,1
2894 : a042            >            ldy #$42
2896 : a203            >            ldx #4-1
2898 : b7              >            db  $b7          ;test nop length
                       >        if 1 = 1
2899 : ca              >            dex
289a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
289b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
289c : f003            >        beq skip1545
                       >        trap            ;failed not equal (non zero)
289e : 200440          >        jsr report_error
                       >
28a1 :                 >skip1545
                       >
                       >            set_a $ff-$b7,0
                       >            load_flag 0
28a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28a3 : 48              >            pha         ;use stack to load status
28a4 : a948            >            lda #$ff-$b7     ;precharge accu
28a6 : 28              >            plp
                       >
28a7 : b7              >            db  $b7          ;test nop integrity - flags off
28a8 : ea              >            nop
28a9 : ea              >            nop
                       >            tst_a $ff-$b7,0
28aa : 08              >            php         ;save flags
28ab : c948            >            cmp #$ff-$b7     ;test result
                       >            trap_ne
28ad : f003            >        beq skip1550
                       >        trap            ;failed not equal (non zero)
28af : 200440          >        jsr report_error
                       >
28b2 :                 >skip1550
                       >
28b2 : 68              >            pla         ;load status
28b3 : 48              >            pha
                       >            cmp_flag 0
28b4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28b6 : f003            >        beq skip1553
                       >        trap            ;failed not equal (non zero)
28b8 : 200440          >        jsr report_error
                       >
28bb :                 >skip1553
                       >
28bb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b7,$ff
                       >            load_flag $ff
28bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28be : 48              >            pha         ;use stack to load status
28bf : a9f3            >            lda #$aa-$b7     ;precharge accu
28c1 : 28              >            plp
                       >
28c2 : b7              >            db  $b7          ;test nop integrity - flags on
28c3 : ea              >            nop
28c4 : ea              >            nop
                       >            tst_a $aa-$b7,$ff
28c5 : 08              >            php         ;save flags
28c6 : c9f3            >            cmp #$aa-$b7     ;test result
                       >            trap_ne
28c8 : f003            >        beq skip1558
                       >        trap            ;failed not equal (non zero)
28ca : 200440          >        jsr report_error
                       >
28cd :                 >skip1558
                       >
28cd : 68              >            pla         ;load status
28ce : 48              >            pha
                       >            cmp_flag $ff
28cf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28d1 : f003            >        beq skip1561
                       >        trap            ;failed not equal (non zero)
28d3 : 200440          >        jsr report_error
                       >
28d6 :                 >skip1561
                       >
28d6 : 28              >            plp         ;restore status
                       >
28d7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
28d9 : f003            >        beq skip1563
                       >        trap            ;failed not equal (non zero)
28db : 200440          >        jsr report_error
                       >
28de :                 >skip1563
                       >
28de : e000            >            cpx #0
                       >            trap_ne         ;x changed
28e0 : f003            >        beq skip1565
                       >        trap            ;failed not equal (non zero)
28e2 : 200440          >        jsr report_error
                       >
28e5 :                 >skip1565
                       >
                        
                                nop_test $c7,1
28e5 : a042            >            ldy #$42
28e7 : a203            >            ldx #4-1
28e9 : c7              >            db  $c7          ;test nop length
                       >        if 1 = 1
28ea : ca              >            dex
28eb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
28ec : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
28ed : f003            >        beq skip1568
                       >        trap            ;failed not equal (non zero)
28ef : 200440          >        jsr report_error
                       >
28f2 :                 >skip1568
                       >
                       >            set_a $ff-$c7,0
                       >            load_flag 0
28f2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28f4 : 48              >            pha         ;use stack to load status
28f5 : a938            >            lda #$ff-$c7     ;precharge accu
28f7 : 28              >            plp
                       >
28f8 : c7              >            db  $c7          ;test nop integrity - flags off
28f9 : ea              >            nop
28fa : ea              >            nop
                       >            tst_a $ff-$c7,0
28fb : 08              >            php         ;save flags
28fc : c938            >            cmp #$ff-$c7     ;test result
                       >            trap_ne
28fe : f003            >        beq skip1573
                       >        trap            ;failed not equal (non zero)
2900 : 200440          >        jsr report_error
                       >
2903 :                 >skip1573
                       >
2903 : 68              >            pla         ;load status
2904 : 48              >            pha
                       >            cmp_flag 0
2905 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2907 : f003            >        beq skip1576
                       >        trap            ;failed not equal (non zero)
2909 : 200440          >        jsr report_error
                       >
290c :                 >skip1576
                       >
290c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c7,$ff
                       >            load_flag $ff
290d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
290f : 48              >            pha         ;use stack to load status
2910 : a9e3            >            lda #$aa-$c7     ;precharge accu
2912 : 28              >            plp
                       >
2913 : c7              >            db  $c7          ;test nop integrity - flags on
2914 : ea              >            nop
2915 : ea              >            nop
                       >            tst_a $aa-$c7,$ff
2916 : 08              >            php         ;save flags
2917 : c9e3            >            cmp #$aa-$c7     ;test result
                       >            trap_ne
2919 : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
291b : 200440          >        jsr report_error
                       >
291e :                 >skip1581
                       >
291e : 68              >            pla         ;load status
291f : 48              >            pha
                       >            cmp_flag $ff
2920 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2922 : f003            >        beq skip1584
                       >        trap            ;failed not equal (non zero)
2924 : 200440          >        jsr report_error
                       >
2927 :                 >skip1584
                       >
2927 : 28              >            plp         ;restore status
                       >
2928 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
292a : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
292c : 200440          >        jsr report_error
                       >
292f :                 >skip1586
                       >
292f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2931 : f003            >        beq skip1588
                       >        trap            ;failed not equal (non zero)
2933 : 200440          >        jsr report_error
                       >
2936 :                 >skip1588
                       >
                        
                                nop_test $d7,1
2936 : a042            >            ldy #$42
2938 : a203            >            ldx #4-1
293a : d7              >            db  $d7          ;test nop length
                       >        if 1 = 1
293b : ca              >            dex
293c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
293d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
293e : f003            >        beq skip1591
                       >        trap            ;failed not equal (non zero)
2940 : 200440          >        jsr report_error
                       >
2943 :                 >skip1591
                       >
                       >            set_a $ff-$d7,0
                       >            load_flag 0
2943 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2945 : 48              >            pha         ;use stack to load status
2946 : a928            >            lda #$ff-$d7     ;precharge accu
2948 : 28              >            plp
                       >
2949 : d7              >            db  $d7          ;test nop integrity - flags off
294a : ea              >            nop
294b : ea              >            nop
                       >            tst_a $ff-$d7,0
294c : 08              >            php         ;save flags
294d : c928            >            cmp #$ff-$d7     ;test result
                       >            trap_ne
294f : f003            >        beq skip1596
                       >        trap            ;failed not equal (non zero)
2951 : 200440          >        jsr report_error
                       >
2954 :                 >skip1596
                       >
2954 : 68              >            pla         ;load status
2955 : 48              >            pha
                       >            cmp_flag 0
2956 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2958 : f003            >        beq skip1599
                       >        trap            ;failed not equal (non zero)
295a : 200440          >        jsr report_error
                       >
295d :                 >skip1599
                       >
295d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d7,$ff
                       >            load_flag $ff
295e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2960 : 48              >            pha         ;use stack to load status
2961 : a9d3            >            lda #$aa-$d7     ;precharge accu
2963 : 28              >            plp
                       >
2964 : d7              >            db  $d7          ;test nop integrity - flags on
2965 : ea              >            nop
2966 : ea              >            nop
                       >            tst_a $aa-$d7,$ff
2967 : 08              >            php         ;save flags
2968 : c9d3            >            cmp #$aa-$d7     ;test result
                       >            trap_ne
296a : f003            >        beq skip1604
                       >        trap            ;failed not equal (non zero)
296c : 200440          >        jsr report_error
                       >
296f :                 >skip1604
                       >
296f : 68              >            pla         ;load status
2970 : 48              >            pha
                       >            cmp_flag $ff
2971 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2973 : f003            >        beq skip1607
                       >        trap            ;failed not equal (non zero)
2975 : 200440          >        jsr report_error
                       >
2978 :                 >skip1607
                       >
2978 : 28              >            plp         ;restore status
                       >
2979 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
297b : f003            >        beq skip1609
                       >        trap            ;failed not equal (non zero)
297d : 200440          >        jsr report_error
                       >
2980 :                 >skip1609
                       >
2980 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2982 : f003            >        beq skip1611
                       >        trap            ;failed not equal (non zero)
2984 : 200440          >        jsr report_error
                       >
2987 :                 >skip1611
                       >
                        
                                nop_test $e7,1
2987 : a042            >            ldy #$42
2989 : a203            >            ldx #4-1
298b : e7              >            db  $e7          ;test nop length
                       >        if 1 = 1
298c : ca              >            dex
298d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
298e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
298f : f003            >        beq skip1614
                       >        trap            ;failed not equal (non zero)
2991 : 200440          >        jsr report_error
                       >
2994 :                 >skip1614
                       >
                       >            set_a $ff-$e7,0
                       >            load_flag 0
2994 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2996 : 48              >            pha         ;use stack to load status
2997 : a918            >            lda #$ff-$e7     ;precharge accu
2999 : 28              >            plp
                       >
299a : e7              >            db  $e7          ;test nop integrity - flags off
299b : ea              >            nop
299c : ea              >            nop
                       >            tst_a $ff-$e7,0
299d : 08              >            php         ;save flags
299e : c918            >            cmp #$ff-$e7     ;test result
                       >            trap_ne
29a0 : f003            >        beq skip1619
                       >        trap            ;failed not equal (non zero)
29a2 : 200440          >        jsr report_error
                       >
29a5 :                 >skip1619
                       >
29a5 : 68              >            pla         ;load status
29a6 : 48              >            pha
                       >            cmp_flag 0
29a7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29a9 : f003            >        beq skip1622
                       >        trap            ;failed not equal (non zero)
29ab : 200440          >        jsr report_error
                       >
29ae :                 >skip1622
                       >
29ae : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e7,$ff
                       >            load_flag $ff
29af : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29b1 : 48              >            pha         ;use stack to load status
29b2 : a9c3            >            lda #$aa-$e7     ;precharge accu
29b4 : 28              >            plp
                       >
29b5 : e7              >            db  $e7          ;test nop integrity - flags on
29b6 : ea              >            nop
29b7 : ea              >            nop
                       >            tst_a $aa-$e7,$ff
29b8 : 08              >            php         ;save flags
29b9 : c9c3            >            cmp #$aa-$e7     ;test result
                       >            trap_ne
29bb : f003            >        beq skip1627
                       >        trap            ;failed not equal (non zero)
29bd : 200440          >        jsr report_error
                       >
29c0 :                 >skip1627
                       >
29c0 : 68              >            pla         ;load status
29c1 : 48              >            pha
                       >            cmp_flag $ff
29c2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29c4 : f003            >        beq skip1630
                       >        trap            ;failed not equal (non zero)
29c6 : 200440          >        jsr report_error
                       >
29c9 :                 >skip1630
                       >
29c9 : 28              >            plp         ;restore status
                       >
29ca : c042            >            cpy #$42
                       >            trap_ne         ;y changed
29cc : f003            >        beq skip1632
                       >        trap            ;failed not equal (non zero)
29ce : 200440          >        jsr report_error
                       >
29d1 :                 >skip1632
                       >
29d1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
29d3 : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
29d5 : 200440          >        jsr report_error
                       >
29d8 :                 >skip1634
                       >
                        
                                nop_test $f7,1
29d8 : a042            >            ldy #$42
29da : a203            >            ldx #4-1
29dc : f7              >            db  $f7          ;test nop length
                       >        if 1 = 1
29dd : ca              >            dex
29de : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
29df : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
29e0 : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
29e2 : 200440          >        jsr report_error
                       >
29e5 :                 >skip1637
                       >
                       >            set_a $ff-$f7,0
                       >            load_flag 0
29e5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29e7 : 48              >            pha         ;use stack to load status
29e8 : a908            >            lda #$ff-$f7     ;precharge accu
29ea : 28              >            plp
                       >
29eb : f7              >            db  $f7          ;test nop integrity - flags off
29ec : ea              >            nop
29ed : ea              >            nop
                       >            tst_a $ff-$f7,0
29ee : 08              >            php         ;save flags
29ef : c908            >            cmp #$ff-$f7     ;test result
                       >            trap_ne
29f1 : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
29f3 : 200440          >        jsr report_error
                       >
29f6 :                 >skip1642
                       >
29f6 : 68              >            pla         ;load status
29f7 : 48              >            pha
                       >            cmp_flag 0
29f8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29fa : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
29fc : 200440          >        jsr report_error
                       >
29ff :                 >skip1645
                       >
29ff : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f7,$ff
                       >            load_flag $ff
2a00 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a02 : 48              >            pha         ;use stack to load status
2a03 : a9b3            >            lda #$aa-$f7     ;precharge accu
2a05 : 28              >            plp
                       >
2a06 : f7              >            db  $f7          ;test nop integrity - flags on
2a07 : ea              >            nop
2a08 : ea              >            nop
                       >            tst_a $aa-$f7,$ff
2a09 : 08              >            php         ;save flags
2a0a : c9b3            >            cmp #$aa-$f7     ;test result
                       >            trap_ne
2a0c : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
2a0e : 200440          >        jsr report_error
                       >
2a11 :                 >skip1650
                       >
2a11 : 68              >            pla         ;load status
2a12 : 48              >            pha
                       >            cmp_flag $ff
2a13 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a15 : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
2a17 : 200440          >        jsr report_error
                       >
2a1a :                 >skip1653
                       >
2a1a : 28              >            plp         ;restore status
                       >
2a1b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2a1d : f003            >        beq skip1655
                       >        trap            ;failed not equal (non zero)
2a1f : 200440          >        jsr report_error
                       >
2a22 :                 >skip1655
                       >
2a22 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2a24 : f003            >        beq skip1657
                       >        trap            ;failed not equal (non zero)
2a26 : 200440          >        jsr report_error
                       >
2a29 :                 >skip1657
                       >
                        
                                nop_test $0f,1
2a29 : a042            >            ldy #$42
2a2b : a203            >            ldx #4-1
2a2d : 0f              >            db  $0f          ;test nop length
                       >        if 1 = 1
2a2e : ca              >            dex
2a2f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2a30 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2a31 : f003            >        beq skip1660
                       >        trap            ;failed not equal (non zero)
2a33 : 200440          >        jsr report_error
                       >
2a36 :                 >skip1660
                       >
                       >            set_a $ff-$0f,0
                       >            load_flag 0
2a36 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a38 : 48              >            pha         ;use stack to load status
2a39 : a9f0            >            lda #$ff-$0f     ;precharge accu
2a3b : 28              >            plp
                       >
2a3c : 0f              >            db  $0f          ;test nop integrity - flags off
2a3d : ea              >            nop
2a3e : ea              >            nop
                       >            tst_a $ff-$0f,0
2a3f : 08              >            php         ;save flags
2a40 : c9f0            >            cmp #$ff-$0f     ;test result
                       >            trap_ne
2a42 : f003            >        beq skip1665
                       >        trap            ;failed not equal (non zero)
2a44 : 200440          >        jsr report_error
                       >
2a47 :                 >skip1665
                       >
2a47 : 68              >            pla         ;load status
2a48 : 48              >            pha
                       >            cmp_flag 0
2a49 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a4b : f003            >        beq skip1668
                       >        trap            ;failed not equal (non zero)
2a4d : 200440          >        jsr report_error
                       >
2a50 :                 >skip1668
                       >
2a50 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0f,$ff
                       >            load_flag $ff
2a51 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a53 : 48              >            pha         ;use stack to load status
2a54 : a99b            >            lda #$aa-$0f     ;precharge accu
2a56 : 28              >            plp
                       >
2a57 : 0f              >            db  $0f          ;test nop integrity - flags on
2a58 : ea              >            nop
2a59 : ea              >            nop
                       >            tst_a $aa-$0f,$ff
2a5a : 08              >            php         ;save flags
2a5b : c99b            >            cmp #$aa-$0f     ;test result
                       >            trap_ne
2a5d : f003            >        beq skip1673
                       >        trap            ;failed not equal (non zero)
2a5f : 200440          >        jsr report_error
                       >
2a62 :                 >skip1673
                       >
2a62 : 68              >            pla         ;load status
2a63 : 48              >            pha
                       >            cmp_flag $ff
2a64 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a66 : f003            >        beq skip1676
                       >        trap            ;failed not equal (non zero)
2a68 : 200440          >        jsr report_error
                       >
2a6b :                 >skip1676
                       >
2a6b : 28              >            plp         ;restore status
                       >
2a6c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2a6e : f003            >        beq skip1678
                       >        trap            ;failed not equal (non zero)
2a70 : 200440          >        jsr report_error
                       >
2a73 :                 >skip1678
                       >
2a73 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2a75 : f003            >        beq skip1680
                       >        trap            ;failed not equal (non zero)
2a77 : 200440          >        jsr report_error
                       >
2a7a :                 >skip1680
                       >
                        
                                nop_test $1f,1
2a7a : a042            >            ldy #$42
2a7c : a203            >            ldx #4-1
2a7e : 1f              >            db  $1f          ;test nop length
                       >        if 1 = 1
2a7f : ca              >            dex
2a80 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2a81 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2a82 : f003            >        beq skip1683
                       >        trap            ;failed not equal (non zero)
2a84 : 200440          >        jsr report_error
                       >
2a87 :                 >skip1683
                       >
                       >            set_a $ff-$1f,0
                       >            load_flag 0
2a87 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a89 : 48              >            pha         ;use stack to load status
2a8a : a9e0            >            lda #$ff-$1f     ;precharge accu
2a8c : 28              >            plp
                       >
2a8d : 1f              >            db  $1f          ;test nop integrity - flags off
2a8e : ea              >            nop
2a8f : ea              >            nop
                       >            tst_a $ff-$1f,0
2a90 : 08              >            php         ;save flags
2a91 : c9e0            >            cmp #$ff-$1f     ;test result
                       >            trap_ne
2a93 : f003            >        beq skip1688
                       >        trap            ;failed not equal (non zero)
2a95 : 200440          >        jsr report_error
                       >
2a98 :                 >skip1688
                       >
2a98 : 68              >            pla         ;load status
2a99 : 48              >            pha
                       >            cmp_flag 0
2a9a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a9c : f003            >        beq skip1691
                       >        trap            ;failed not equal (non zero)
2a9e : 200440          >        jsr report_error
                       >
2aa1 :                 >skip1691
                       >
2aa1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1f,$ff
                       >            load_flag $ff
2aa2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2aa4 : 48              >            pha         ;use stack to load status
2aa5 : a98b            >            lda #$aa-$1f     ;precharge accu
2aa7 : 28              >            plp
                       >
2aa8 : 1f              >            db  $1f          ;test nop integrity - flags on
2aa9 : ea              >            nop
2aaa : ea              >            nop
                       >            tst_a $aa-$1f,$ff
2aab : 08              >            php         ;save flags
2aac : c98b            >            cmp #$aa-$1f     ;test result
                       >            trap_ne
2aae : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
2ab0 : 200440          >        jsr report_error
                       >
2ab3 :                 >skip1696
                       >
2ab3 : 68              >            pla         ;load status
2ab4 : 48              >            pha
                       >            cmp_flag $ff
2ab5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ab7 : f003            >        beq skip1699
                       >        trap            ;failed not equal (non zero)
2ab9 : 200440          >        jsr report_error
                       >
2abc :                 >skip1699
                       >
2abc : 28              >            plp         ;restore status
                       >
2abd : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2abf : f003            >        beq skip1701
                       >        trap            ;failed not equal (non zero)
2ac1 : 200440          >        jsr report_error
                       >
2ac4 :                 >skip1701
                       >
2ac4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2ac6 : f003            >        beq skip1703
                       >        trap            ;failed not equal (non zero)
2ac8 : 200440          >        jsr report_error
                       >
2acb :                 >skip1703
                       >
                        
                                nop_test $2f,1
2acb : a042            >            ldy #$42
2acd : a203            >            ldx #4-1
2acf : 2f              >            db  $2f          ;test nop length
                       >        if 1 = 1
2ad0 : ca              >            dex
2ad1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2ad2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2ad3 : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
2ad5 : 200440          >        jsr report_error
                       >
2ad8 :                 >skip1706
                       >
                       >            set_a $ff-$2f,0
                       >            load_flag 0
2ad8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ada : 48              >            pha         ;use stack to load status
2adb : a9d0            >            lda #$ff-$2f     ;precharge accu
2add : 28              >            plp
                       >
2ade : 2f              >            db  $2f          ;test nop integrity - flags off
2adf : ea              >            nop
2ae0 : ea              >            nop
                       >            tst_a $ff-$2f,0
2ae1 : 08              >            php         ;save flags
2ae2 : c9d0            >            cmp #$ff-$2f     ;test result
                       >            trap_ne
2ae4 : f003            >        beq skip1711
                       >        trap            ;failed not equal (non zero)
2ae6 : 200440          >        jsr report_error
                       >
2ae9 :                 >skip1711
                       >
2ae9 : 68              >            pla         ;load status
2aea : 48              >            pha
                       >            cmp_flag 0
2aeb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2aed : f003            >        beq skip1714
                       >        trap            ;failed not equal (non zero)
2aef : 200440          >        jsr report_error
                       >
2af2 :                 >skip1714
                       >
2af2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2f,$ff
                       >            load_flag $ff
2af3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2af5 : 48              >            pha         ;use stack to load status
2af6 : a97b            >            lda #$aa-$2f     ;precharge accu
2af8 : 28              >            plp
                       >
2af9 : 2f              >            db  $2f          ;test nop integrity - flags on
2afa : ea              >            nop
2afb : ea              >            nop
                       >            tst_a $aa-$2f,$ff
2afc : 08              >            php         ;save flags
2afd : c97b            >            cmp #$aa-$2f     ;test result
                       >            trap_ne
2aff : f003            >        beq skip1719
                       >        trap            ;failed not equal (non zero)
2b01 : 200440          >        jsr report_error
                       >
2b04 :                 >skip1719
                       >
2b04 : 68              >            pla         ;load status
2b05 : 48              >            pha
                       >            cmp_flag $ff
2b06 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b08 : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
2b0a : 200440          >        jsr report_error
                       >
2b0d :                 >skip1722
                       >
2b0d : 28              >            plp         ;restore status
                       >
2b0e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2b10 : f003            >        beq skip1724
                       >        trap            ;failed not equal (non zero)
2b12 : 200440          >        jsr report_error
                       >
2b15 :                 >skip1724
                       >
2b15 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2b17 : f003            >        beq skip1726
                       >        trap            ;failed not equal (non zero)
2b19 : 200440          >        jsr report_error
                       >
2b1c :                 >skip1726
                       >
                        
                                nop_test $3f,1
2b1c : a042            >            ldy #$42
2b1e : a203            >            ldx #4-1
2b20 : 3f              >            db  $3f          ;test nop length
                       >        if 1 = 1
2b21 : ca              >            dex
2b22 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2b23 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2b24 : f003            >        beq skip1729
                       >        trap            ;failed not equal (non zero)
2b26 : 200440          >        jsr report_error
                       >
2b29 :                 >skip1729
                       >
                       >            set_a $ff-$3f,0
                       >            load_flag 0
2b29 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b2b : 48              >            pha         ;use stack to load status
2b2c : a9c0            >            lda #$ff-$3f     ;precharge accu
2b2e : 28              >            plp
                       >
2b2f : 3f              >            db  $3f          ;test nop integrity - flags off
2b30 : ea              >            nop
2b31 : ea              >            nop
                       >            tst_a $ff-$3f,0
2b32 : 08              >            php         ;save flags
2b33 : c9c0            >            cmp #$ff-$3f     ;test result
                       >            trap_ne
2b35 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
2b37 : 200440          >        jsr report_error
                       >
2b3a :                 >skip1734
                       >
2b3a : 68              >            pla         ;load status
2b3b : 48              >            pha
                       >            cmp_flag 0
2b3c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b3e : f003            >        beq skip1737
                       >        trap            ;failed not equal (non zero)
2b40 : 200440          >        jsr report_error
                       >
2b43 :                 >skip1737
                       >
2b43 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3f,$ff
                       >            load_flag $ff
2b44 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b46 : 48              >            pha         ;use stack to load status
2b47 : a96b            >            lda #$aa-$3f     ;precharge accu
2b49 : 28              >            plp
                       >
2b4a : 3f              >            db  $3f          ;test nop integrity - flags on
2b4b : ea              >            nop
2b4c : ea              >            nop
                       >            tst_a $aa-$3f,$ff
2b4d : 08              >            php         ;save flags
2b4e : c96b            >            cmp #$aa-$3f     ;test result
                       >            trap_ne
2b50 : f003            >        beq skip1742
                       >        trap            ;failed not equal (non zero)
2b52 : 200440          >        jsr report_error
                       >
2b55 :                 >skip1742
                       >
2b55 : 68              >            pla         ;load status
2b56 : 48              >            pha
                       >            cmp_flag $ff
2b57 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b59 : f003            >        beq skip1745
                       >        trap            ;failed not equal (non zero)
2b5b : 200440          >        jsr report_error
                       >
2b5e :                 >skip1745
                       >
2b5e : 28              >            plp         ;restore status
                       >
2b5f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2b61 : f003            >        beq skip1747
                       >        trap            ;failed not equal (non zero)
2b63 : 200440          >        jsr report_error
                       >
2b66 :                 >skip1747
                       >
2b66 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2b68 : f003            >        beq skip1749
                       >        trap            ;failed not equal (non zero)
2b6a : 200440          >        jsr report_error
                       >
2b6d :                 >skip1749
                       >
                        
                                nop_test $4f,1
2b6d : a042            >            ldy #$42
2b6f : a203            >            ldx #4-1
2b71 : 4f              >            db  $4f          ;test nop length
                       >        if 1 = 1
2b72 : ca              >            dex
2b73 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2b74 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2b75 : f003            >        beq skip1752
                       >        trap            ;failed not equal (non zero)
2b77 : 200440          >        jsr report_error
                       >
2b7a :                 >skip1752
                       >
                       >            set_a $ff-$4f,0
                       >            load_flag 0
2b7a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b7c : 48              >            pha         ;use stack to load status
2b7d : a9b0            >            lda #$ff-$4f     ;precharge accu
2b7f : 28              >            plp
                       >
2b80 : 4f              >            db  $4f          ;test nop integrity - flags off
2b81 : ea              >            nop
2b82 : ea              >            nop
                       >            tst_a $ff-$4f,0
2b83 : 08              >            php         ;save flags
2b84 : c9b0            >            cmp #$ff-$4f     ;test result
                       >            trap_ne
2b86 : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
2b88 : 200440          >        jsr report_error
                       >
2b8b :                 >skip1757
                       >
2b8b : 68              >            pla         ;load status
2b8c : 48              >            pha
                       >            cmp_flag 0
2b8d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b8f : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
2b91 : 200440          >        jsr report_error
                       >
2b94 :                 >skip1760
                       >
2b94 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4f,$ff
                       >            load_flag $ff
2b95 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b97 : 48              >            pha         ;use stack to load status
2b98 : a95b            >            lda #$aa-$4f     ;precharge accu
2b9a : 28              >            plp
                       >
2b9b : 4f              >            db  $4f          ;test nop integrity - flags on
2b9c : ea              >            nop
2b9d : ea              >            nop
                       >            tst_a $aa-$4f,$ff
2b9e : 08              >            php         ;save flags
2b9f : c95b            >            cmp #$aa-$4f     ;test result
                       >            trap_ne
2ba1 : f003            >        beq skip1765
                       >        trap            ;failed not equal (non zero)
2ba3 : 200440          >        jsr report_error
                       >
2ba6 :                 >skip1765
                       >
2ba6 : 68              >            pla         ;load status
2ba7 : 48              >            pha
                       >            cmp_flag $ff
2ba8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2baa : f003            >        beq skip1768
                       >        trap            ;failed not equal (non zero)
2bac : 200440          >        jsr report_error
                       >
2baf :                 >skip1768
                       >
2baf : 28              >            plp         ;restore status
                       >
2bb0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2bb2 : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
2bb4 : 200440          >        jsr report_error
                       >
2bb7 :                 >skip1770
                       >
2bb7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2bb9 : f003            >        beq skip1772
                       >        trap            ;failed not equal (non zero)
2bbb : 200440          >        jsr report_error
                       >
2bbe :                 >skip1772
                       >
                        
                                nop_test $5f,1
2bbe : a042            >            ldy #$42
2bc0 : a203            >            ldx #4-1
2bc2 : 5f              >            db  $5f          ;test nop length
                       >        if 1 = 1
2bc3 : ca              >            dex
2bc4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2bc5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2bc6 : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
2bc8 : 200440          >        jsr report_error
                       >
2bcb :                 >skip1775
                       >
                       >            set_a $ff-$5f,0
                       >            load_flag 0
2bcb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2bcd : 48              >            pha         ;use stack to load status
2bce : a9a0            >            lda #$ff-$5f     ;precharge accu
2bd0 : 28              >            plp
                       >
2bd1 : 5f              >            db  $5f          ;test nop integrity - flags off
2bd2 : ea              >            nop
2bd3 : ea              >            nop
                       >            tst_a $ff-$5f,0
2bd4 : 08              >            php         ;save flags
2bd5 : c9a0            >            cmp #$ff-$5f     ;test result
                       >            trap_ne
2bd7 : f003            >        beq skip1780
                       >        trap            ;failed not equal (non zero)
2bd9 : 200440          >        jsr report_error
                       >
2bdc :                 >skip1780
                       >
2bdc : 68              >            pla         ;load status
2bdd : 48              >            pha
                       >            cmp_flag 0
2bde : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2be0 : f003            >        beq skip1783
                       >        trap            ;failed not equal (non zero)
2be2 : 200440          >        jsr report_error
                       >
2be5 :                 >skip1783
                       >
2be5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5f,$ff
                       >            load_flag $ff
2be6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2be8 : 48              >            pha         ;use stack to load status
2be9 : a94b            >            lda #$aa-$5f     ;precharge accu
2beb : 28              >            plp
                       >
2bec : 5f              >            db  $5f          ;test nop integrity - flags on
2bed : ea              >            nop
2bee : ea              >            nop
                       >            tst_a $aa-$5f,$ff
2bef : 08              >            php         ;save flags
2bf0 : c94b            >            cmp #$aa-$5f     ;test result
                       >            trap_ne
2bf2 : f003            >        beq skip1788
                       >        trap            ;failed not equal (non zero)
2bf4 : 200440          >        jsr report_error
                       >
2bf7 :                 >skip1788
                       >
2bf7 : 68              >            pla         ;load status
2bf8 : 48              >            pha
                       >            cmp_flag $ff
2bf9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2bfb : f003            >        beq skip1791
                       >        trap            ;failed not equal (non zero)
2bfd : 200440          >        jsr report_error
                       >
2c00 :                 >skip1791
                       >
2c00 : 28              >            plp         ;restore status
                       >
2c01 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2c03 : f003            >        beq skip1793
                       >        trap            ;failed not equal (non zero)
2c05 : 200440          >        jsr report_error
                       >
2c08 :                 >skip1793
                       >
2c08 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2c0a : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
2c0c : 200440          >        jsr report_error
                       >
2c0f :                 >skip1795
                       >
                        
                                nop_test $6f,1
2c0f : a042            >            ldy #$42
2c11 : a203            >            ldx #4-1
2c13 : 6f              >            db  $6f          ;test nop length
                       >        if 1 = 1
2c14 : ca              >            dex
2c15 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2c16 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2c17 : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
2c19 : 200440          >        jsr report_error
                       >
2c1c :                 >skip1798
                       >
                       >            set_a $ff-$6f,0
                       >            load_flag 0
2c1c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c1e : 48              >            pha         ;use stack to load status
2c1f : a990            >            lda #$ff-$6f     ;precharge accu
2c21 : 28              >            plp
                       >
2c22 : 6f              >            db  $6f          ;test nop integrity - flags off
2c23 : ea              >            nop
2c24 : ea              >            nop
                       >            tst_a $ff-$6f,0
2c25 : 08              >            php         ;save flags
2c26 : c990            >            cmp #$ff-$6f     ;test result
                       >            trap_ne
2c28 : f003            >        beq skip1803
                       >        trap            ;failed not equal (non zero)
2c2a : 200440          >        jsr report_error
                       >
2c2d :                 >skip1803
                       >
2c2d : 68              >            pla         ;load status
2c2e : 48              >            pha
                       >            cmp_flag 0
2c2f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c31 : f003            >        beq skip1806
                       >        trap            ;failed not equal (non zero)
2c33 : 200440          >        jsr report_error
                       >
2c36 :                 >skip1806
                       >
2c36 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6f,$ff
                       >            load_flag $ff
2c37 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c39 : 48              >            pha         ;use stack to load status
2c3a : a93b            >            lda #$aa-$6f     ;precharge accu
2c3c : 28              >            plp
                       >
2c3d : 6f              >            db  $6f          ;test nop integrity - flags on
2c3e : ea              >            nop
2c3f : ea              >            nop
                       >            tst_a $aa-$6f,$ff
2c40 : 08              >            php         ;save flags
2c41 : c93b            >            cmp #$aa-$6f     ;test result
                       >            trap_ne
2c43 : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
2c45 : 200440          >        jsr report_error
                       >
2c48 :                 >skip1811
                       >
2c48 : 68              >            pla         ;load status
2c49 : 48              >            pha
                       >            cmp_flag $ff
2c4a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c4c : f003            >        beq skip1814
                       >        trap            ;failed not equal (non zero)
2c4e : 200440          >        jsr report_error
                       >
2c51 :                 >skip1814
                       >
2c51 : 28              >            plp         ;restore status
                       >
2c52 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2c54 : f003            >        beq skip1816
                       >        trap            ;failed not equal (non zero)
2c56 : 200440          >        jsr report_error
                       >
2c59 :                 >skip1816
                       >
2c59 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2c5b : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
2c5d : 200440          >        jsr report_error
                       >
2c60 :                 >skip1818
                       >
                        
                                nop_test $7f,1
2c60 : a042            >            ldy #$42
2c62 : a203            >            ldx #4-1
2c64 : 7f              >            db  $7f          ;test nop length
                       >        if 1 = 1
2c65 : ca              >            dex
2c66 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2c67 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2c68 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
2c6a : 200440          >        jsr report_error
                       >
2c6d :                 >skip1821
                       >
                       >            set_a $ff-$7f,0
                       >            load_flag 0
2c6d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c6f : 48              >            pha         ;use stack to load status
2c70 : a980            >            lda #$ff-$7f     ;precharge accu
2c72 : 28              >            plp
                       >
2c73 : 7f              >            db  $7f          ;test nop integrity - flags off
2c74 : ea              >            nop
2c75 : ea              >            nop
                       >            tst_a $ff-$7f,0
2c76 : 08              >            php         ;save flags
2c77 : c980            >            cmp #$ff-$7f     ;test result
                       >            trap_ne
2c79 : f003            >        beq skip1826
                       >        trap            ;failed not equal (non zero)
2c7b : 200440          >        jsr report_error
                       >
2c7e :                 >skip1826
                       >
2c7e : 68              >            pla         ;load status
2c7f : 48              >            pha
                       >            cmp_flag 0
2c80 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c82 : f003            >        beq skip1829
                       >        trap            ;failed not equal (non zero)
2c84 : 200440          >        jsr report_error
                       >
2c87 :                 >skip1829
                       >
2c87 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7f,$ff
                       >            load_flag $ff
2c88 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c8a : 48              >            pha         ;use stack to load status
2c8b : a92b            >            lda #$aa-$7f     ;precharge accu
2c8d : 28              >            plp
                       >
2c8e : 7f              >            db  $7f          ;test nop integrity - flags on
2c8f : ea              >            nop
2c90 : ea              >            nop
                       >            tst_a $aa-$7f,$ff
2c91 : 08              >            php         ;save flags
2c92 : c92b            >            cmp #$aa-$7f     ;test result
                       >            trap_ne
2c94 : f003            >        beq skip1834
                       >        trap            ;failed not equal (non zero)
2c96 : 200440          >        jsr report_error
                       >
2c99 :                 >skip1834
                       >
2c99 : 68              >            pla         ;load status
2c9a : 48              >            pha
                       >            cmp_flag $ff
2c9b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c9d : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
2c9f : 200440          >        jsr report_error
                       >
2ca2 :                 >skip1837
                       >
2ca2 : 28              >            plp         ;restore status
                       >
2ca3 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2ca5 : f003            >        beq skip1839
                       >        trap            ;failed not equal (non zero)
2ca7 : 200440          >        jsr report_error
                       >
2caa :                 >skip1839
                       >
2caa : e000            >            cpx #0
                       >            trap_ne         ;x changed
2cac : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
2cae : 200440          >        jsr report_error
                       >
2cb1 :                 >skip1841
                       >
                        
                                nop_test $8f,1
2cb1 : a042            >            ldy #$42
2cb3 : a203            >            ldx #4-1
2cb5 : 8f              >            db  $8f          ;test nop length
                       >        if 1 = 1
2cb6 : ca              >            dex
2cb7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2cb8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2cb9 : f003            >        beq skip1844
                       >        trap            ;failed not equal (non zero)
2cbb : 200440          >        jsr report_error
                       >
2cbe :                 >skip1844
                       >
                       >            set_a $ff-$8f,0
                       >            load_flag 0
2cbe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2cc0 : 48              >            pha         ;use stack to load status
2cc1 : a970            >            lda #$ff-$8f     ;precharge accu
2cc3 : 28              >            plp
                       >
2cc4 : 8f              >            db  $8f          ;test nop integrity - flags off
2cc5 : ea              >            nop
2cc6 : ea              >            nop
                       >            tst_a $ff-$8f,0
2cc7 : 08              >            php         ;save flags
2cc8 : c970            >            cmp #$ff-$8f     ;test result
                       >            trap_ne
2cca : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
2ccc : 200440          >        jsr report_error
                       >
2ccf :                 >skip1849
                       >
2ccf : 68              >            pla         ;load status
2cd0 : 48              >            pha
                       >            cmp_flag 0
2cd1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2cd3 : f003            >        beq skip1852
                       >        trap            ;failed not equal (non zero)
2cd5 : 200440          >        jsr report_error
                       >
2cd8 :                 >skip1852
                       >
2cd8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8f,$ff
                       >            load_flag $ff
2cd9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2cdb : 48              >            pha         ;use stack to load status
2cdc : a91b            >            lda #$aa-$8f     ;precharge accu
2cde : 28              >            plp
                       >
2cdf : 8f              >            db  $8f          ;test nop integrity - flags on
2ce0 : ea              >            nop
2ce1 : ea              >            nop
                       >            tst_a $aa-$8f,$ff
2ce2 : 08              >            php         ;save flags
2ce3 : c91b            >            cmp #$aa-$8f     ;test result
                       >            trap_ne
2ce5 : f003            >        beq skip1857
                       >        trap            ;failed not equal (non zero)
2ce7 : 200440          >        jsr report_error
                       >
2cea :                 >skip1857
                       >
2cea : 68              >            pla         ;load status
2ceb : 48              >            pha
                       >            cmp_flag $ff
2cec : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2cee : f003            >        beq skip1860
                       >        trap            ;failed not equal (non zero)
2cf0 : 200440          >        jsr report_error
                       >
2cf3 :                 >skip1860
                       >
2cf3 : 28              >            plp         ;restore status
                       >
2cf4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2cf6 : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
2cf8 : 200440          >        jsr report_error
                       >
2cfb :                 >skip1862
                       >
2cfb : e000            >            cpx #0
                       >            trap_ne         ;x changed
2cfd : f003            >        beq skip1864
                       >        trap            ;failed not equal (non zero)
2cff : 200440          >        jsr report_error
                       >
2d02 :                 >skip1864
                       >
                        
                                nop_test $9f,1
2d02 : a042            >            ldy #$42
2d04 : a203            >            ldx #4-1
2d06 : 9f              >            db  $9f          ;test nop length
                       >        if 1 = 1
2d07 : ca              >            dex
2d08 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2d09 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2d0a : f003            >        beq skip1867
                       >        trap            ;failed not equal (non zero)
2d0c : 200440          >        jsr report_error
                       >
2d0f :                 >skip1867
                       >
                       >            set_a $ff-$9f,0
                       >            load_flag 0
2d0f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d11 : 48              >            pha         ;use stack to load status
2d12 : a960            >            lda #$ff-$9f     ;precharge accu
2d14 : 28              >            plp
                       >
2d15 : 9f              >            db  $9f          ;test nop integrity - flags off
2d16 : ea              >            nop
2d17 : ea              >            nop
                       >            tst_a $ff-$9f,0
2d18 : 08              >            php         ;save flags
2d19 : c960            >            cmp #$ff-$9f     ;test result
                       >            trap_ne
2d1b : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
2d1d : 200440          >        jsr report_error
                       >
2d20 :                 >skip1872
                       >
2d20 : 68              >            pla         ;load status
2d21 : 48              >            pha
                       >            cmp_flag 0
2d22 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d24 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
2d26 : 200440          >        jsr report_error
                       >
2d29 :                 >skip1875
                       >
2d29 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9f,$ff
                       >            load_flag $ff
2d2a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d2c : 48              >            pha         ;use stack to load status
2d2d : a90b            >            lda #$aa-$9f     ;precharge accu
2d2f : 28              >            plp
                       >
2d30 : 9f              >            db  $9f          ;test nop integrity - flags on
2d31 : ea              >            nop
2d32 : ea              >            nop
                       >            tst_a $aa-$9f,$ff
2d33 : 08              >            php         ;save flags
2d34 : c90b            >            cmp #$aa-$9f     ;test result
                       >            trap_ne
2d36 : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
2d38 : 200440          >        jsr report_error
                       >
2d3b :                 >skip1880
                       >
2d3b : 68              >            pla         ;load status
2d3c : 48              >            pha
                       >            cmp_flag $ff
2d3d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d3f : f003            >        beq skip1883
                       >        trap            ;failed not equal (non zero)
2d41 : 200440          >        jsr report_error
                       >
2d44 :                 >skip1883
                       >
2d44 : 28              >            plp         ;restore status
                       >
2d45 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2d47 : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
2d49 : 200440          >        jsr report_error
                       >
2d4c :                 >skip1885
                       >
2d4c : e000            >            cpx #0
                       >            trap_ne         ;x changed
2d4e : f003            >        beq skip1887
                       >        trap            ;failed not equal (non zero)
2d50 : 200440          >        jsr report_error
                       >
2d53 :                 >skip1887
                       >
                        
                                nop_test $af,1
2d53 : a042            >            ldy #$42
2d55 : a203            >            ldx #4-1
2d57 : af              >            db  $af          ;test nop length
                       >        if 1 = 1
2d58 : ca              >            dex
2d59 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2d5a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2d5b : f003            >        beq skip1890
                       >        trap            ;failed not equal (non zero)
2d5d : 200440          >        jsr report_error
                       >
2d60 :                 >skip1890
                       >
                       >            set_a $ff-$af,0
                       >            load_flag 0
2d60 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d62 : 48              >            pha         ;use stack to load status
2d63 : a950            >            lda #$ff-$af     ;precharge accu
2d65 : 28              >            plp
                       >
2d66 : af              >            db  $af          ;test nop integrity - flags off
2d67 : ea              >            nop
2d68 : ea              >            nop
                       >            tst_a $ff-$af,0
2d69 : 08              >            php         ;save flags
2d6a : c950            >            cmp #$ff-$af     ;test result
                       >            trap_ne
2d6c : f003            >        beq skip1895
                       >        trap            ;failed not equal (non zero)
2d6e : 200440          >        jsr report_error
                       >
2d71 :                 >skip1895
                       >
2d71 : 68              >            pla         ;load status
2d72 : 48              >            pha
                       >            cmp_flag 0
2d73 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d75 : f003            >        beq skip1898
                       >        trap            ;failed not equal (non zero)
2d77 : 200440          >        jsr report_error
                       >
2d7a :                 >skip1898
                       >
2d7a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$af,$ff
                       >            load_flag $ff
2d7b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d7d : 48              >            pha         ;use stack to load status
2d7e : a9fb            >            lda #$aa-$af     ;precharge accu
2d80 : 28              >            plp
                       >
2d81 : af              >            db  $af          ;test nop integrity - flags on
2d82 : ea              >            nop
2d83 : ea              >            nop
                       >            tst_a $aa-$af,$ff
2d84 : 08              >            php         ;save flags
2d85 : c9fb            >            cmp #$aa-$af     ;test result
                       >            trap_ne
2d87 : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
2d89 : 200440          >        jsr report_error
                       >
2d8c :                 >skip1903
                       >
2d8c : 68              >            pla         ;load status
2d8d : 48              >            pha
                       >            cmp_flag $ff
2d8e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d90 : f003            >        beq skip1906
                       >        trap            ;failed not equal (non zero)
2d92 : 200440          >        jsr report_error
                       >
2d95 :                 >skip1906
                       >
2d95 : 28              >            plp         ;restore status
                       >
2d96 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2d98 : f003            >        beq skip1908
                       >        trap            ;failed not equal (non zero)
2d9a : 200440          >        jsr report_error
                       >
2d9d :                 >skip1908
                       >
2d9d : e000            >            cpx #0
                       >            trap_ne         ;x changed
2d9f : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
2da1 : 200440          >        jsr report_error
                       >
2da4 :                 >skip1910
                       >
                        
                                nop_test $bf,1
2da4 : a042            >            ldy #$42
2da6 : a203            >            ldx #4-1
2da8 : bf              >            db  $bf          ;test nop length
                       >        if 1 = 1
2da9 : ca              >            dex
2daa : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2dab : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2dac : f003            >        beq skip1913
                       >        trap            ;failed not equal (non zero)
2dae : 200440          >        jsr report_error
                       >
2db1 :                 >skip1913
                       >
                       >            set_a $ff-$bf,0
                       >            load_flag 0
2db1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2db3 : 48              >            pha         ;use stack to load status
2db4 : a940            >            lda #$ff-$bf     ;precharge accu
2db6 : 28              >            plp
                       >
2db7 : bf              >            db  $bf          ;test nop integrity - flags off
2db8 : ea              >            nop
2db9 : ea              >            nop
                       >            tst_a $ff-$bf,0
2dba : 08              >            php         ;save flags
2dbb : c940            >            cmp #$ff-$bf     ;test result
                       >            trap_ne
2dbd : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
2dbf : 200440          >        jsr report_error
                       >
2dc2 :                 >skip1918
                       >
2dc2 : 68              >            pla         ;load status
2dc3 : 48              >            pha
                       >            cmp_flag 0
2dc4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2dc6 : f003            >        beq skip1921
                       >        trap            ;failed not equal (non zero)
2dc8 : 200440          >        jsr report_error
                       >
2dcb :                 >skip1921
                       >
2dcb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bf,$ff
                       >            load_flag $ff
2dcc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2dce : 48              >            pha         ;use stack to load status
2dcf : a9eb            >            lda #$aa-$bf     ;precharge accu
2dd1 : 28              >            plp
                       >
2dd2 : bf              >            db  $bf          ;test nop integrity - flags on
2dd3 : ea              >            nop
2dd4 : ea              >            nop
                       >            tst_a $aa-$bf,$ff
2dd5 : 08              >            php         ;save flags
2dd6 : c9eb            >            cmp #$aa-$bf     ;test result
                       >            trap_ne
2dd8 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
2dda : 200440          >        jsr report_error
                       >
2ddd :                 >skip1926
                       >
2ddd : 68              >            pla         ;load status
2dde : 48              >            pha
                       >            cmp_flag $ff
2ddf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2de1 : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
2de3 : 200440          >        jsr report_error
                       >
2de6 :                 >skip1929
                       >
2de6 : 28              >            plp         ;restore status
                       >
2de7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2de9 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
2deb : 200440          >        jsr report_error
                       >
2dee :                 >skip1931
                       >
2dee : e000            >            cpx #0
                       >            trap_ne         ;x changed
2df0 : f003            >        beq skip1933
                       >        trap            ;failed not equal (non zero)
2df2 : 200440          >        jsr report_error
                       >
2df5 :                 >skip1933
                       >
                        
                                nop_test $cf,1
2df5 : a042            >            ldy #$42
2df7 : a203            >            ldx #4-1
2df9 : cf              >            db  $cf          ;test nop length
                       >        if 1 = 1
2dfa : ca              >            dex
2dfb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2dfc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2dfd : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
2dff : 200440          >        jsr report_error
                       >
2e02 :                 >skip1936
                       >
                       >            set_a $ff-$cf,0
                       >            load_flag 0
2e02 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e04 : 48              >            pha         ;use stack to load status
2e05 : a930            >            lda #$ff-$cf     ;precharge accu
2e07 : 28              >            plp
                       >
2e08 : cf              >            db  $cf          ;test nop integrity - flags off
2e09 : ea              >            nop
2e0a : ea              >            nop
                       >            tst_a $ff-$cf,0
2e0b : 08              >            php         ;save flags
2e0c : c930            >            cmp #$ff-$cf     ;test result
                       >            trap_ne
2e0e : f003            >        beq skip1941
                       >        trap            ;failed not equal (non zero)
2e10 : 200440          >        jsr report_error
                       >
2e13 :                 >skip1941
                       >
2e13 : 68              >            pla         ;load status
2e14 : 48              >            pha
                       >            cmp_flag 0
2e15 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e17 : f003            >        beq skip1944
                       >        trap            ;failed not equal (non zero)
2e19 : 200440          >        jsr report_error
                       >
2e1c :                 >skip1944
                       >
2e1c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cf,$ff
                       >            load_flag $ff
2e1d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e1f : 48              >            pha         ;use stack to load status
2e20 : a9db            >            lda #$aa-$cf     ;precharge accu
2e22 : 28              >            plp
                       >
2e23 : cf              >            db  $cf          ;test nop integrity - flags on
2e24 : ea              >            nop
2e25 : ea              >            nop
                       >            tst_a $aa-$cf,$ff
2e26 : 08              >            php         ;save flags
2e27 : c9db            >            cmp #$aa-$cf     ;test result
                       >            trap_ne
2e29 : f003            >        beq skip1949
                       >        trap            ;failed not equal (non zero)
2e2b : 200440          >        jsr report_error
                       >
2e2e :                 >skip1949
                       >
2e2e : 68              >            pla         ;load status
2e2f : 48              >            pha
                       >            cmp_flag $ff
2e30 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e32 : f003            >        beq skip1952
                       >        trap            ;failed not equal (non zero)
2e34 : 200440          >        jsr report_error
                       >
2e37 :                 >skip1952
                       >
2e37 : 28              >            plp         ;restore status
                       >
2e38 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2e3a : f003            >        beq skip1954
                       >        trap            ;failed not equal (non zero)
2e3c : 200440          >        jsr report_error
                       >
2e3f :                 >skip1954
                       >
2e3f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2e41 : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
2e43 : 200440          >        jsr report_error
                       >
2e46 :                 >skip1956
                       >
                        
                                nop_test $df,1
2e46 : a042            >            ldy #$42
2e48 : a203            >            ldx #4-1
2e4a : df              >            db  $df          ;test nop length
                       >        if 1 = 1
2e4b : ca              >            dex
2e4c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2e4d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2e4e : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
2e50 : 200440          >        jsr report_error
                       >
2e53 :                 >skip1959
                       >
                       >            set_a $ff-$df,0
                       >            load_flag 0
2e53 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e55 : 48              >            pha         ;use stack to load status
2e56 : a920            >            lda #$ff-$df     ;precharge accu
2e58 : 28              >            plp
                       >
2e59 : df              >            db  $df          ;test nop integrity - flags off
2e5a : ea              >            nop
2e5b : ea              >            nop
                       >            tst_a $ff-$df,0
2e5c : 08              >            php         ;save flags
2e5d : c920            >            cmp #$ff-$df     ;test result
                       >            trap_ne
2e5f : f003            >        beq skip1964
                       >        trap            ;failed not equal (non zero)
2e61 : 200440          >        jsr report_error
                       >
2e64 :                 >skip1964
                       >
2e64 : 68              >            pla         ;load status
2e65 : 48              >            pha
                       >            cmp_flag 0
2e66 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e68 : f003            >        beq skip1967
                       >        trap            ;failed not equal (non zero)
2e6a : 200440          >        jsr report_error
                       >
2e6d :                 >skip1967
                       >
2e6d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$df,$ff
                       >            load_flag $ff
2e6e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e70 : 48              >            pha         ;use stack to load status
2e71 : a9cb            >            lda #$aa-$df     ;precharge accu
2e73 : 28              >            plp
                       >
2e74 : df              >            db  $df          ;test nop integrity - flags on
2e75 : ea              >            nop
2e76 : ea              >            nop
                       >            tst_a $aa-$df,$ff
2e77 : 08              >            php         ;save flags
2e78 : c9cb            >            cmp #$aa-$df     ;test result
                       >            trap_ne
2e7a : f003            >        beq skip1972
                       >        trap            ;failed not equal (non zero)
2e7c : 200440          >        jsr report_error
                       >
2e7f :                 >skip1972
                       >
2e7f : 68              >            pla         ;load status
2e80 : 48              >            pha
                       >            cmp_flag $ff
2e81 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e83 : f003            >        beq skip1975
                       >        trap            ;failed not equal (non zero)
2e85 : 200440          >        jsr report_error
                       >
2e88 :                 >skip1975
                       >
2e88 : 28              >            plp         ;restore status
                       >
2e89 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2e8b : f003            >        beq skip1977
                       >        trap            ;failed not equal (non zero)
2e8d : 200440          >        jsr report_error
                       >
2e90 :                 >skip1977
                       >
2e90 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2e92 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
2e94 : 200440          >        jsr report_error
                       >
2e97 :                 >skip1979
                       >
                        
                                nop_test $ef,1
2e97 : a042            >            ldy #$42
2e99 : a203            >            ldx #4-1
2e9b : ef              >            db  $ef          ;test nop length
                       >        if 1 = 1
2e9c : ca              >            dex
2e9d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2e9e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2e9f : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
2ea1 : 200440          >        jsr report_error
                       >
2ea4 :                 >skip1982
                       >
                       >            set_a $ff-$ef,0
                       >            load_flag 0
2ea4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ea6 : 48              >            pha         ;use stack to load status
2ea7 : a910            >            lda #$ff-$ef     ;precharge accu
2ea9 : 28              >            plp
                       >
2eaa : ef              >            db  $ef          ;test nop integrity - flags off
2eab : ea              >            nop
2eac : ea              >            nop
                       >            tst_a $ff-$ef,0
2ead : 08              >            php         ;save flags
2eae : c910            >            cmp #$ff-$ef     ;test result
                       >            trap_ne
2eb0 : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
2eb2 : 200440          >        jsr report_error
                       >
2eb5 :                 >skip1987
                       >
2eb5 : 68              >            pla         ;load status
2eb6 : 48              >            pha
                       >            cmp_flag 0
2eb7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2eb9 : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
2ebb : 200440          >        jsr report_error
                       >
2ebe :                 >skip1990
                       >
2ebe : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ef,$ff
                       >            load_flag $ff
2ebf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ec1 : 48              >            pha         ;use stack to load status
2ec2 : a9bb            >            lda #$aa-$ef     ;precharge accu
2ec4 : 28              >            plp
                       >
2ec5 : ef              >            db  $ef          ;test nop integrity - flags on
2ec6 : ea              >            nop
2ec7 : ea              >            nop
                       >            tst_a $aa-$ef,$ff
2ec8 : 08              >            php         ;save flags
2ec9 : c9bb            >            cmp #$aa-$ef     ;test result
                       >            trap_ne
2ecb : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
2ecd : 200440          >        jsr report_error
                       >
2ed0 :                 >skip1995
                       >
2ed0 : 68              >            pla         ;load status
2ed1 : 48              >            pha
                       >            cmp_flag $ff
2ed2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ed4 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
2ed6 : 200440          >        jsr report_error
                       >
2ed9 :                 >skip1998
                       >
2ed9 : 28              >            plp         ;restore status
                       >
2eda : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2edc : f003            >        beq skip2000
                       >        trap            ;failed not equal (non zero)
2ede : 200440          >        jsr report_error
                       >
2ee1 :                 >skip2000
                       >
2ee1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2ee3 : f003            >        beq skip2002
                       >        trap            ;failed not equal (non zero)
2ee5 : 200440          >        jsr report_error
                       >
2ee8 :                 >skip2002
                       >
                        
                                nop_test $ff,1
2ee8 : a042            >            ldy #$42
2eea : a203            >            ldx #4-1
2eec : ff              >            db  $ff          ;test nop length
                       >        if 1 = 1
2eed : ca              >            dex
2eee : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2eef : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2ef0 : f003            >        beq skip2005
                       >        trap            ;failed not equal (non zero)
2ef2 : 200440          >        jsr report_error
                       >
2ef5 :                 >skip2005
                       >
                       >            set_a $ff-$ff,0
                       >            load_flag 0
2ef5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ef7 : 48              >            pha         ;use stack to load status
2ef8 : a900            >            lda #$ff-$ff     ;precharge accu
2efa : 28              >            plp
                       >
2efb : ff              >            db  $ff          ;test nop integrity - flags off
2efc : ea              >            nop
2efd : ea              >            nop
                       >            tst_a $ff-$ff,0
2efe : 08              >            php         ;save flags
2eff : c900            >            cmp #$ff-$ff     ;test result
                       >            trap_ne
2f01 : f003            >        beq skip2010
                       >        trap            ;failed not equal (non zero)
2f03 : 200440          >        jsr report_error
                       >
2f06 :                 >skip2010
                       >
2f06 : 68              >            pla         ;load status
2f07 : 48              >            pha
                       >            cmp_flag 0
2f08 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f0a : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
2f0c : 200440          >        jsr report_error
                       >
2f0f :                 >skip2013
                       >
2f0f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ff,$ff
                       >            load_flag $ff
2f10 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f12 : 48              >            pha         ;use stack to load status
2f13 : a9ab            >            lda #$aa-$ff     ;precharge accu
2f15 : 28              >            plp
                       >
2f16 : ff              >            db  $ff          ;test nop integrity - flags on
2f17 : ea              >            nop
2f18 : ea              >            nop
                       >            tst_a $aa-$ff,$ff
2f19 : 08              >            php         ;save flags
2f1a : c9ab            >            cmp #$aa-$ff     ;test result
                       >            trap_ne
2f1c : f003            >        beq skip2018
                       >        trap            ;failed not equal (non zero)
2f1e : 200440          >        jsr report_error
                       >
2f21 :                 >skip2018
                       >
2f21 : 68              >            pla         ;load status
2f22 : 48              >            pha
                       >            cmp_flag $ff
2f23 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f25 : f003            >        beq skip2021
                       >        trap            ;failed not equal (non zero)
2f27 : 200440          >        jsr report_error
                       >
2f2a :                 >skip2021
                       >
2f2a : 28              >            plp         ;restore status
                       >
2f2b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2f2d : f003            >        beq skip2023
                       >        trap            ;failed not equal (non zero)
2f2f : 200440          >        jsr report_error
                       >
2f32 :                 >skip2023
                       >
2f32 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2f34 : f003            >        beq skip2025
                       >        trap            ;failed not equal (non zero)
2f36 : 200440          >        jsr report_error
                       >
2f39 :                 >skip2025
                       >
                        
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
2f39 : a042            >            ldy #$42
2f3b : a203            >            ldx #4-1
2f3d : cb              >            db  $cb          ;test nop length
                       >        if 1 = 1
2f3e : ca              >            dex
2f3f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2f40 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2f41 : f003            >        beq skip2028
                       >        trap            ;failed not equal (non zero)
2f43 : 200440          >        jsr report_error
                       >
2f46 :                 >skip2028
                       >
                       >            set_a $ff-$cb,0
                       >            load_flag 0
2f46 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f48 : 48              >            pha         ;use stack to load status
2f49 : a934            >            lda #$ff-$cb     ;precharge accu
2f4b : 28              >            plp
                       >
2f4c : cb              >            db  $cb          ;test nop integrity - flags off
2f4d : ea              >            nop
2f4e : ea              >            nop
                       >            tst_a $ff-$cb,0
2f4f : 08              >            php         ;save flags
2f50 : c934            >            cmp #$ff-$cb     ;test result
                       >            trap_ne
2f52 : f003            >        beq skip2033
                       >        trap            ;failed not equal (non zero)
2f54 : 200440          >        jsr report_error
                       >
2f57 :                 >skip2033
                       >
2f57 : 68              >            pla         ;load status
2f58 : 48              >            pha
                       >            cmp_flag 0
2f59 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f5b : f003            >        beq skip2036
                       >        trap            ;failed not equal (non zero)
2f5d : 200440          >        jsr report_error
                       >
2f60 :                 >skip2036
                       >
2f60 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cb,$ff
                       >            load_flag $ff
2f61 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f63 : 48              >            pha         ;use stack to load status
2f64 : a9df            >            lda #$aa-$cb     ;precharge accu
2f66 : 28              >            plp
                       >
2f67 : cb              >            db  $cb          ;test nop integrity - flags on
2f68 : ea              >            nop
2f69 : ea              >            nop
                       >            tst_a $aa-$cb,$ff
2f6a : 08              >            php         ;save flags
2f6b : c9df            >            cmp #$aa-$cb     ;test result
                       >            trap_ne
2f6d : f003            >        beq skip2041
                       >        trap            ;failed not equal (non zero)
2f6f : 200440          >        jsr report_error
                       >
2f72 :                 >skip2041
                       >
2f72 : 68              >            pla         ;load status
2f73 : 48              >            pha
                       >            cmp_flag $ff
2f74 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f76 : f003            >        beq skip2044
                       >        trap            ;failed not equal (non zero)
2f78 : 200440          >        jsr report_error
                       >
2f7b :                 >skip2044
                       >
2f7b : 28              >            plp         ;restore status
                       >
2f7c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2f7e : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
2f80 : 200440          >        jsr report_error
                       >
2f83 :                 >skip2046
                       >
2f83 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2f85 : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
2f87 : 200440          >        jsr report_error
                       >
2f8a :                 >skip2048
                       >
                        
                                nop_test $db,1
2f8a : a042            >            ldy #$42
2f8c : a203            >            ldx #4-1
2f8e : db              >            db  $db          ;test nop length
                       >        if 1 = 1
2f8f : ca              >            dex
2f90 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2f91 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2f92 : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
2f94 : 200440          >        jsr report_error
                       >
2f97 :                 >skip2051
                       >
                       >            set_a $ff-$db,0
                       >            load_flag 0
2f97 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f99 : 48              >            pha         ;use stack to load status
2f9a : a924            >            lda #$ff-$db     ;precharge accu
2f9c : 28              >            plp
                       >
2f9d : db              >            db  $db          ;test nop integrity - flags off
2f9e : ea              >            nop
2f9f : ea              >            nop
                       >            tst_a $ff-$db,0
2fa0 : 08              >            php         ;save flags
2fa1 : c924            >            cmp #$ff-$db     ;test result
                       >            trap_ne
2fa3 : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
2fa5 : 200440          >        jsr report_error
                       >
2fa8 :                 >skip2056
                       >
2fa8 : 68              >            pla         ;load status
2fa9 : 48              >            pha
                       >            cmp_flag 0
2faa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fac : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
2fae : 200440          >        jsr report_error
                       >
2fb1 :                 >skip2059
                       >
2fb1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$db,$ff
                       >            load_flag $ff
2fb2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fb4 : 48              >            pha         ;use stack to load status
2fb5 : a9cf            >            lda #$aa-$db     ;precharge accu
2fb7 : 28              >            plp
                       >
2fb8 : db              >            db  $db          ;test nop integrity - flags on
2fb9 : ea              >            nop
2fba : ea              >            nop
                       >            tst_a $aa-$db,$ff
2fbb : 08              >            php         ;save flags
2fbc : c9cf            >            cmp #$aa-$db     ;test result
                       >            trap_ne
2fbe : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
2fc0 : 200440          >        jsr report_error
                       >
2fc3 :                 >skip2064
                       >
2fc3 : 68              >            pla         ;load status
2fc4 : 48              >            pha
                       >            cmp_flag $ff
2fc5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fc7 : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
2fc9 : 200440          >        jsr report_error
                       >
2fcc :                 >skip2067
                       >
2fcc : 28              >            plp         ;restore status
                       >
2fcd : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2fcf : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
2fd1 : 200440          >        jsr report_error
                       >
2fd4 :                 >skip2069
                       >
2fd4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2fd6 : f003            >        beq skip2071
                       >        trap            ;failed not equal (non zero)
2fd8 : 200440          >        jsr report_error
                       >
2fdb :                 >skip2071
                       >
                        
                            endif
                                next_test
2fdb : ad0211          >            lda test_case   ;previous test
2fde : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2fe0 : f003            >        beq skip2074
                       >        trap            ;failed not equal (non zero)
2fe2 : 200440          >        jsr report_error
                       >
2fe5 :                 >skip2074
                       >
0007 =                 >test_num = test_num + 1
2fe5 : a907            >            lda #test_num   ;*** next tests' number
2fe7 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                                    
                        ; jump indirect (test page cross bug is fixed)
2fea : a203                     ldx #3          ;prepare table
2fec : bdff3e           ji1     lda ji_adr,x
2fef : 9dfd11                   sta ji_tab,x
2ff2 : ca                       dex
2ff3 : 10f7                     bpl ji1
2ff5 : a943                     lda #hi(ji_px) ;high address if page cross bug
2ff7 : 8d0011                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2ffa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ffc : 48              >            pha         ;use stack to load status
2ffd : 28              >            plp
                        
2ffe : a949                     lda #'I'
3000 : a24e                     ldx #'N'
3002 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
3004 : 6cfd11                   jmp (ji_tab)
3007 : ea                       nop
                                trap_ne         ;runover protection
3008 : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
300a : 200440          >        jsr report_error
                       >
300d :                 >skip2078
                        
                        
300d : 88                       dey
300e : 88                       dey
300f : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
3010 : 88                       dey
3011 : 88                       dey
3012 : 88                       dey
3013 : 28                       plp
                                trap_eq         ;returned flags OK?
3014 : d003            >        bne skip2080
                       >        trap           ;failed equal (zero)
3016 : 200440          >        jsr report_error
                       >
3019 :                 >skip2080
                        
                                trap_pl
3019 : 3003            >        bmi skip2082
                       >        trap            ;failed plus (bit 7 clear)
301b : 200440          >        jsr report_error
                       >
301e :                 >skip2082
                        
                                trap_cc
301e : b003            >        bcs skip2084
                       >        trap            ;failed carry clear
3020 : 200440          >        jsr report_error
                       >
3023 :                 >skip2084
                        
                                trap_vc
3023 : 7003            >        bvs skip2086
                       >        trap            ;failed overflow clear
3025 : 200440          >        jsr report_error
                       >
3028 :                 >skip2086
                        
3028 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
302a : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
302c : 200440          >        jsr report_error
                       >
302f :                 >skip2088
                        
302f : e04f                     cpx #('N'+1)
                                trap_ne
3031 : f003            >        beq skip2090
                       >        trap            ;failed not equal (non zero)
3033 : 200440          >        jsr report_error
                       >
3036 :                 >skip2090
                        
3036 : c03e                     cpy #('D'-6)
                                trap_ne
3038 : f003            >        beq skip2092
                       >        trap            ;failed not equal (non zero)
303a : 200440          >        jsr report_error
                       >
303d :                 >skip2092
                        
303d : ba                       tsx             ;SP check
303e : e0ff                     cpx #$ff
                                trap_ne
3040 : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
3042 : 200440          >        jsr report_error
                       >
3045 :                 >skip2094
                        
                                next_test
3045 : ad0211          >            lda test_case   ;previous test
3048 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
304a : f003            >        beq skip2097
                       >        trap            ;failed not equal (non zero)
304c : 200440          >        jsr report_error
                       >
304f :                 >skip2097
                       >
0008 =                 >test_num = test_num + 1
304f : a908            >            lda #test_num   ;*** next tests' number
3051 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
3054 : a20b                     ldx #11         ;prepare table
3056 : bd533f           jxi1    lda jxi_adr,x
3059 : 9df911                   sta jxi_tab,x
305c : ca                       dex
305d : 10f7                     bpl jxi1
305f : a942                     lda #hi(jxi_px) ;high address if page cross bug
3061 : 8d0011                   sta pg_x
                                set_stat 0
                       >            load_flag 0
3064 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3066 : 48              >            pha         ;use stack to load status
3067 : 28              >            plp
                        
3068 : a958                     lda #'X'
306a : a204                     ldx #4
306c : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
306e : 7cf911                   jmp (jxi_tab,x)
3071 : ea                       nop
                                trap_ne         ;runover protection
3072 : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
3074 : 200440          >        jsr report_error
                       >
3077 :                 >skip2101
                        
                        
3077 : 88                       dey
3078 : 88                       dey
3079 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
307a : 88                       dey
307b : 88                       dey
307c : 88                       dey
307d : 28                       plp
                                trap_eq         ;returned flags OK?
307e : d003            >        bne skip2103
                       >        trap           ;failed equal (zero)
3080 : 200440          >        jsr report_error
                       >
3083 :                 >skip2103
                        
                                trap_pl
3083 : 3003            >        bmi skip2105
                       >        trap            ;failed plus (bit 7 clear)
3085 : 200440          >        jsr report_error
                       >
3088 :                 >skip2105
                        
                                trap_cc
3088 : b003            >        bcs skip2107
                       >        trap            ;failed carry clear
308a : 200440          >        jsr report_error
                       >
308d :                 >skip2107
                        
                                trap_vc
308d : 7003            >        bvs skip2109
                       >        trap            ;failed overflow clear
308f : 200440          >        jsr report_error
                       >
3092 :                 >skip2109
                        
3092 : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
3094 : f003            >        beq skip2111
                       >        trap            ;failed not equal (non zero)
3096 : 200440          >        jsr report_error
                       >
3099 :                 >skip2111
                        
3099 : e006                     cpx #6
                                trap_ne
309b : f003            >        beq skip2113
                       >        trap            ;failed not equal (non zero)
309d : 200440          >        jsr report_error
                       >
30a0 :                 >skip2113
                        
30a0 : c043                     cpy #('I'-6)
                                trap_ne
30a2 : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
30a4 : 200440          >        jsr report_error
                       >
30a7 :                 >skip2115
                        
30a7 : ba                       tsx             ;SP check
30a8 : e0ff                     cpx #$ff
                                trap_ne
30aa : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
30ac : 200440          >        jsr report_error
                       >
30af :                 >skip2117
                        
                        
30af : a9cb                     lda #lo(jxp_ok) ;test with index causing a page cross
30b1 : 8d0012                   sta jxp_tab
30b4 : a930                     lda #hi(jxp_ok)
30b6 : 8d0112                   sta jxp_tab+1
30b9 : a9c8                     lda #lo(jxp_px)
30bb : 8d0011                   sta pg_x
30be : a930                     lda #hi(jxp_px)
30c0 : 8d0111                   sta pg_x+1
30c3 : a2ff                     ldx #$ff
30c5 : 7c0111                   jmp (jxp_tab-$ff,x)
                                
30c8 :                  jxp_px  
                                trap            ;page cross by index to wrong page
30c8 : 200440          >        jsr report_error
                        
                        
30cb :                  jxp_ok
                                next_test
30cb : ad0211          >            lda test_case   ;previous test
30ce : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
30d0 : f003            >        beq skip2121
                       >        trap            ;failed not equal (non zero)
30d2 : 200440          >        jsr report_error
                       >
30d5 :                 >skip2121
                       >
0009 =                 >test_num = test_num + 1
30d5 : a909            >            lda #test_num   ;*** next tests' number
30d7 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                                dey             ;should not be executed
                        brk_ret0                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #'R'+1
                                trap_ne
                                cpy #'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                        ;pass 2
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                                dey             ;should not be executed
                        brk_ret1                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #$ff-'R'+1
                                trap_ne
                                cpy #$ff-'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
30da : a2ac                     ldx #$ac    ;protect x & y
30dc : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
30de : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30e0 : 48              >            pha         ;use stack to load status
30e1 : a9fe            >            lda #$fe     ;precharge accu
30e3 : 28              >            plp
                        
30e4 : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
30e5 : 48              >            pha
30e6 : 08              >            php         ;save flags
30e7 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
30e9 : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
30eb : 200440          >        jsr report_error
                       >
30ee :                 >skip2126
                       >
30ee : 68              >            pla         ;load status
30ef : 48              >            pha
                       >            cmp_flag $ff-zero
30f0 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30f2 : f003            >        beq skip2129
                       >        trap            ;failed not equal (non zero)
30f4 : 200440          >        jsr report_error
                       >
30f7 :                 >skip2129
                       >
30f7 : 28              >            plp         ;restore status
30f8 : 68              >            pla
                        
30f9 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
30fa : 48              >            pha
30fb : 08              >            php         ;save flags
30fc : c900            >            cmp #0     ;test result
                       >            trap_ne
30fe : f003            >        beq skip2132
                       >        trap            ;failed not equal (non zero)
3100 : 200440          >        jsr report_error
                       >
3103 :                 >skip2132
                       >
3103 : 68              >            pla         ;load status
3104 : 48              >            pha
                       >            cmp_flag $ff-minus
3105 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3107 : f003            >        beq skip2135
                       >        trap            ;failed not equal (non zero)
3109 : 200440          >        jsr report_error
                       >
310c :                 >skip2135
                       >
310c : 28              >            plp         ;restore status
310d : 68              >            pla
                        
310e : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
310f : 48              >            pha
3110 : 08              >            php         ;save flags
3111 : c901            >            cmp #1     ;test result
                       >            trap_ne
3113 : f003            >        beq skip2138
                       >        trap            ;failed not equal (non zero)
3115 : 200440          >        jsr report_error
                       >
3118 :                 >skip2138
                       >
3118 : 68              >            pla         ;load status
3119 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
311a : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
311c : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
311e : 200440          >        jsr report_error
                       >
3121 :                 >skip2141
                       >
3121 : 28              >            plp         ;restore status
3122 : 68              >            pla
                        
3123 : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
3124 : 48              >            pha
3125 : 08              >            php         ;save flags
3126 : c900            >            cmp #0     ;test result
                       >            trap_ne
3128 : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
312a : 200440          >        jsr report_error
                       >
312d :                 >skip2144
                       >
312d : 68              >            pla         ;load status
312e : 48              >            pha
                       >            cmp_flag $ff-minus
312f : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3131 : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
3133 : 200440          >        jsr report_error
                       >
3136 :                 >skip2147
                       >
3136 : 28              >            plp         ;restore status
3137 : 68              >            pla
                        
3138 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
3139 : 48              >            pha
313a : 08              >            php         ;save flags
313b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
313d : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
313f : 200440          >        jsr report_error
                       >
3142 :                 >skip2150
                       >
3142 : 68              >            pla         ;load status
3143 : 48              >            pha
                       >            cmp_flag $ff-zero
3144 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3146 : f003            >        beq skip2153
                       >        trap            ;failed not equal (non zero)
3148 : 200440          >        jsr report_error
                       >
314b :                 >skip2153
                       >
314b : 28              >            plp         ;restore status
314c : 68              >            pla
                        
314d : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
314e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3150 : 48              >            pha         ;use stack to load status
3151 : a9fe            >            lda #$fe     ;precharge accu
3153 : 28              >            plp
                        
3154 : 1a                       inc a           ;ff
                                tst_as $ff,minus
3155 : 48              >            pha
3156 : 08              >            php         ;save flags
3157 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3159 : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
315b : 200440          >        jsr report_error
                       >
315e :                 >skip2158
                       >
315e : 68              >            pla         ;load status
315f : 48              >            pha
                       >            cmp_flag minus
3160 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3162 : f003            >        beq skip2161
                       >        trap            ;failed not equal (non zero)
3164 : 200440          >        jsr report_error
                       >
3167 :                 >skip2161
                       >
3167 : 28              >            plp         ;restore status
3168 : 68              >            pla
                        
3169 : 1a                       inc a           ;00
                                tst_as 0,zero
316a : 48              >            pha
316b : 08              >            php         ;save flags
316c : c900            >            cmp #0     ;test result
                       >            trap_ne
316e : f003            >        beq skip2164
                       >        trap            ;failed not equal (non zero)
3170 : 200440          >        jsr report_error
                       >
3173 :                 >skip2164
                       >
3173 : 68              >            pla         ;load status
3174 : 48              >            pha
                       >            cmp_flag zero
3175 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3177 : f003            >        beq skip2167
                       >        trap            ;failed not equal (non zero)
3179 : 200440          >        jsr report_error
                       >
317c :                 >skip2167
                       >
317c : 28              >            plp         ;restore status
317d : 68              >            pla
                        
317e : 1a                       inc a           ;01
                                tst_as 1,0
317f : 48              >            pha
3180 : 08              >            php         ;save flags
3181 : c901            >            cmp #1     ;test result
                       >            trap_ne
3183 : f003            >        beq skip2170
                       >        trap            ;failed not equal (non zero)
3185 : 200440          >        jsr report_error
                       >
3188 :                 >skip2170
                       >
3188 : 68              >            pla         ;load status
3189 : 48              >            pha
                       >            cmp_flag 0
318a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
318c : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
318e : 200440          >        jsr report_error
                       >
3191 :                 >skip2173
                       >
3191 : 28              >            plp         ;restore status
3192 : 68              >            pla
                        
3193 : 3a                       dec a           ;00
                                tst_as 0,zero
3194 : 48              >            pha
3195 : 08              >            php         ;save flags
3196 : c900            >            cmp #0     ;test result
                       >            trap_ne
3198 : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
319a : 200440          >        jsr report_error
                       >
319d :                 >skip2176
                       >
319d : 68              >            pla         ;load status
319e : 48              >            pha
                       >            cmp_flag zero
319f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31a1 : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
31a3 : 200440          >        jsr report_error
                       >
31a6 :                 >skip2179
                       >
31a6 : 28              >            plp         ;restore status
31a7 : 68              >            pla
                        
31a8 : 3a                       dec a           ;ff
                                tst_as $ff,minus
31a9 : 48              >            pha
31aa : 08              >            php         ;save flags
31ab : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
31ad : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
31af : 200440          >        jsr report_error
                       >
31b2 :                 >skip2182
                       >
31b2 : 68              >            pla         ;load status
31b3 : 48              >            pha
                       >            cmp_flag minus
31b4 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31b6 : f003            >        beq skip2185
                       >        trap            ;failed not equal (non zero)
31b8 : 200440          >        jsr report_error
                       >
31bb :                 >skip2185
                       >
31bb : 28              >            plp         ;restore status
31bc : 68              >            pla
                        
31bd : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
31bf : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
31c1 : 200440          >        jsr report_error
                       >
31c4 :                 >skip2187
                        
31c4 : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
31c6 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
31c8 : 200440          >        jsr report_error
                       >
31cb :                 >skip2189
                        
31cb : ba                       tsx
31cc : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
31ce : f003            >        beq skip2191
                       >        trap            ;failed not equal (non zero)
31d0 : 200440          >        jsr report_error
                       >
31d3 :                 >skip2191
                        
                                next_test
31d3 : ad0211          >            lda test_case   ;previous test
31d6 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
31d8 : f003            >        beq skip2194
                       >        trap            ;failed not equal (non zero)
31da : 200440          >        jsr report_error
                       >
31dd :                 >skip2194
                       >
000a =                 >test_num = test_num + 1
31dd : a90a            >            lda #test_num   ;*** next tests' number
31df : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
31e2 : a299                     ldx #$99    ;protect x & y
31e4 : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
31e6 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
31e8 : 48              >            pha         ;use stack to load status
31e9 : 28              >            plp
                        
31ea : b26a                     lda (ind1)
31ec : 08                       php         ;test stores do not alter flags
31ed : 49c3                     eor #$c3
31ef : 28                       plp
31f0 : 9276                     sta (indt)
31f2 : 08                       php         ;flags after load/store sequence
31f3 : 49c3                     eor #$c3
31f5 : c9c3                     cmp #$c3    ;test result
                                trap_ne
31f7 : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
31f9 : 200440          >        jsr report_error
                       >
31fc :                 >skip2198
                        
31fc : 68                       pla         ;load status
                                eor_flag 0
31fd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
31ff : cd1511                   cmp fLDx    ;test flags
                                trap_ne
3202 : f003            >        beq skip2201
                       >        trap            ;failed not equal (non zero)
3204 : 200440          >        jsr report_error
                       >
3207 :                 >skip2201
                        
                                set_stat 0
                       >            load_flag 0
3207 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3209 : 48              >            pha         ;use stack to load status
320a : 28              >            plp
                        
320b : b26c                     lda (ind1+2)
320d : 08                       php         ;test stores do not alter flags
320e : 49c3                     eor #$c3
3210 : 28                       plp
3211 : 9278                     sta (indt+2)
3213 : 08                       php         ;flags after load/store sequence
3214 : 49c3                     eor #$c3
3216 : c982                     cmp #$82    ;test result
                                trap_ne
3218 : f003            >        beq skip2205
                       >        trap            ;failed not equal (non zero)
321a : 200440          >        jsr report_error
                       >
321d :                 >skip2205
                        
321d : 68                       pla         ;load status
                                eor_flag 0
321e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3220 : cd1611                   cmp fLDx+1  ;test flags
                                trap_ne
3223 : f003            >        beq skip2208
                       >        trap            ;failed not equal (non zero)
3225 : 200440          >        jsr report_error
                       >
3228 :                 >skip2208
                        
                                set_stat 0
                       >            load_flag 0
3228 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
322a : 48              >            pha         ;use stack to load status
322b : 28              >            plp
                        
322c : b26e                     lda (ind1+4)
322e : 08                       php         ;test stores do not alter flags
322f : 49c3                     eor #$c3
3231 : 28                       plp
3232 : 927a                     sta (indt+4)
3234 : 08                       php         ;flags after load/store sequence
3235 : 49c3                     eor #$c3
3237 : c941                     cmp #$41    ;test result
                                trap_ne
3239 : f003            >        beq skip2212
                       >        trap            ;failed not equal (non zero)
323b : 200440          >        jsr report_error
                       >
323e :                 >skip2212
                        
323e : 68                       pla         ;load status
                                eor_flag 0
323f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3241 : cd1711                   cmp fLDx+2  ;test flags
                                trap_ne
3244 : f003            >        beq skip2215
                       >        trap            ;failed not equal (non zero)
3246 : 200440          >        jsr report_error
                       >
3249 :                 >skip2215
                        
                                set_stat 0
                       >            load_flag 0
3249 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
324b : 48              >            pha         ;use stack to load status
324c : 28              >            plp
                        
324d : b270                     lda (ind1+6)
324f : 08                       php         ;test stores do not alter flags
3250 : 49c3                     eor #$c3
3252 : 28                       plp
3253 : 927c                     sta (indt+6)
3255 : 08                       php         ;flags after load/store sequence
3256 : 49c3                     eor #$c3
3258 : c900                     cmp #0      ;test result
                                trap_ne
325a : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
325c : 200440          >        jsr report_error
                       >
325f :                 >skip2219
                        
325f : 68                       pla         ;load status
                                eor_flag 0
3260 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3262 : cd1811                   cmp fLDx+3  ;test flags
                                trap_ne
3265 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
3267 : 200440          >        jsr report_error
                       >
326a :                 >skip2222
                        
326a : e099                     cpx #$99
                                trap_ne     ;x altered during test
326c : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
326e : 200440          >        jsr report_error
                       >
3271 :                 >skip2224
                        
3271 : c066                     cpy #$66
                                trap_ne     ;y altered during test
3273 : f003            >        beq skip2226
                       >        trap            ;failed not equal (non zero)
3275 : 200440          >        jsr report_error
                       >
3278 :                 >skip2226
                        
                        
3278 : a003                     ldy #3      ;testing store result
327a : a200                     ldx #0
327c : b90511           tstai1  lda abst,y
327f : 49c3                     eor #$c3
3281 : d91011                   cmp abs1,y
                                trap_ne     ;store to indirect data
3284 : f003            >        beq skip2228
                       >        trap            ;failed not equal (non zero)
3286 : 200440          >        jsr report_error
                       >
3289 :                 >skip2228
                        
3289 : 8a                       txa
328a : 990511                   sta abst,y  ;clear                
328d : 88                       dey
328e : 10ec                     bpl tstai1
                        
3290 : a299                     ldx #$99    ;protect x & y
3292 : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
3294 : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
3296 : 48              >            pha         ;use stack to load status
3297 : 28              >            plp
                        
3298 : b26a                     lda (ind1)
329a : 08                       php         ;test stores do not alter flags
329b : 49c3                     eor #$c3
329d : 28                       plp
329e : 9276                     sta (indt)
32a0 : 08                       php         ;flags after load/store sequence
32a1 : 49c3                     eor #$c3
32a3 : c9c3                     cmp #$c3    ;test result
                                trap_ne
32a5 : f003            >        beq skip2232
                       >        trap            ;failed not equal (non zero)
32a7 : 200440          >        jsr report_error
                       >
32aa :                 >skip2232
                        
32aa : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
32ab : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
32ad : cd1511                   cmp fLDx    ;test flags
                                trap_ne
32b0 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
32b2 : 200440          >        jsr report_error
                       >
32b5 :                 >skip2235
                        
                                set_stat $ff
                       >            load_flag $ff
32b5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32b7 : 48              >            pha         ;use stack to load status
32b8 : 28              >            plp
                        
32b9 : b26c                     lda (ind1+2)
32bb : 08                       php         ;test stores do not alter flags
32bc : 49c3                     eor #$c3
32be : 28                       plp
32bf : 9278                     sta (indt+2)
32c1 : 08                       php         ;flags after load/store sequence
32c2 : 49c3                     eor #$c3
32c4 : c982                     cmp #$82    ;test result
                                trap_ne
32c6 : f003            >        beq skip2239
                       >        trap            ;failed not equal (non zero)
32c8 : 200440          >        jsr report_error
                       >
32cb :                 >skip2239
                        
32cb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
32cc : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
32ce : cd1611                   cmp fLDx+1  ;test flags
                                trap_ne
32d1 : f003            >        beq skip2242
                       >        trap            ;failed not equal (non zero)
32d3 : 200440          >        jsr report_error
                       >
32d6 :                 >skip2242
                        
                                set_stat $ff
                       >            load_flag $ff
32d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32d8 : 48              >            pha         ;use stack to load status
32d9 : 28              >            plp
                        
32da : b26e                     lda (ind1+4)
32dc : 08                       php         ;test stores do not alter flags
32dd : 49c3                     eor #$c3
32df : 28                       plp
32e0 : 927a                     sta (indt+4)
32e2 : 08                       php         ;flags after load/store sequence
32e3 : 49c3                     eor #$c3
32e5 : c941                     cmp #$41    ;test result
                                trap_ne
32e7 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
32e9 : 200440          >        jsr report_error
                       >
32ec :                 >skip2246
                        
32ec : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
32ed : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
32ef : cd1711                   cmp fLDx+2  ;test flags
                                trap_ne
32f2 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
32f4 : 200440          >        jsr report_error
                       >
32f7 :                 >skip2249
                        
                                set_stat $ff
                       >            load_flag $ff
32f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32f9 : 48              >            pha         ;use stack to load status
32fa : 28              >            plp
                        
32fb : b270                     lda (ind1+6)
32fd : 08                       php         ;test stores do not alter flags
32fe : 49c3                     eor #$c3
3300 : 28                       plp
3301 : 927c                     sta (indt+6)
3303 : 08                       php         ;flags after load/store sequence
3304 : 49c3                     eor #$c3
3306 : c900                     cmp #0      ;test result
                                trap_ne
3308 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
330a : 200440          >        jsr report_error
                       >
330d :                 >skip2253
                        
330d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
330e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
3310 : cd1811                   cmp fLDx+3  ;test flags
                                trap_ne
3313 : f003            >        beq skip2256
                       >        trap            ;failed not equal (non zero)
3315 : 200440          >        jsr report_error
                       >
3318 :                 >skip2256
                        
3318 : e099                     cpx #$99
                                trap_ne     ;x altered during test
331a : f003            >        beq skip2258
                       >        trap            ;failed not equal (non zero)
331c : 200440          >        jsr report_error
                       >
331f :                 >skip2258
                        
331f : c066                     cpy #$66
                                trap_ne     ;y altered during test
3321 : f003            >        beq skip2260
                       >        trap            ;failed not equal (non zero)
3323 : 200440          >        jsr report_error
                       >
3326 :                 >skip2260
                        
                        
3326 : a003                     ldy #3      ;testing store result
3328 : a200                     ldx #0
332a : b90511           tstai2  lda abst,y
332d : 49c3                     eor #$c3
332f : d91011                   cmp abs1,y
                                trap_ne     ;store to indirect data
3332 : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
3334 : 200440          >        jsr report_error
                       >
3337 :                 >skip2262
                        
3337 : 8a                       txa
3338 : 990511                   sta abst,y  ;clear                
333b : 88                       dey
333c : 10ec                     bpl tstai2
333e : ba                       tsx
333f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3341 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
3343 : 200440          >        jsr report_error
                       >
3346 :                 >skip2264
                        
                                next_test
3346 : ad0211          >            lda test_case   ;previous test
3349 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
334b : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
334d : 200440          >        jsr report_error
                       >
3350 :                 >skip2267
                       >
000b =                 >test_num = test_num + 1
3350 : a90b            >            lda #test_num   ;*** next tests' number
3352 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
3355 : a07b                     ldy #123    ;protect y
3357 : a204                     ldx #4      ;precharge test area
3359 : a907                     lda #7
335b : 9552             tstz1   sta zpt,x
335d : 0a                       asl a
335e : ca                       dex
335f : 10fa                     bpl tstz1
3361 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
3363 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3365 : 48              >            pha         ;use stack to load status
3366 : a955            >            lda #$55     ;precharge accu
3368 : 28              >            plp
                        
3369 : 6452                     stz zpt     
336b : 6453                     stz zpt+1
336d : 6454                     stz zpt+2
336f : 6455                     stz zpt+3
3371 : 6456                     stz zpt+4
                                tst_a $55,$ff
3373 : 08              >            php         ;save flags
3374 : c955            >            cmp #$55     ;test result
                       >            trap_ne
3376 : f003            >        beq skip2272
                       >        trap            ;failed not equal (non zero)
3378 : 200440          >        jsr report_error
                       >
337b :                 >skip2272
                       >
337b : 68              >            pla         ;load status
337c : 48              >            pha
                       >            cmp_flag $ff
337d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
337f : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
3381 : 200440          >        jsr report_error
                       >
3384 :                 >skip2275
                       >
3384 : 28              >            plp         ;restore status
                        
3385 : b552             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3387 : f003            >        beq skip2277
                       >        trap            ;failed not equal (non zero)
3389 : 200440          >        jsr report_error
                       >
338c :                 >skip2277
                        
338c : ca                       dex
338d : 10f6                     bpl tstz2
338f : a204                     ldx #4      ;precharge test area
3391 : a907                     lda #7
3393 : 9552             tstz3   sta zpt,x
3395 : 0a                       asl a
3396 : ca                       dex
3397 : 10fa                     bpl tstz3
3399 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
339b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
339d : 48              >            pha         ;use stack to load status
339e : a9aa            >            lda #$aa     ;precharge accu
33a0 : 28              >            plp
                        
33a1 : 6452                     stz zpt     
33a3 : 6453                     stz zpt+1
33a5 : 6454                     stz zpt+2
33a7 : 6455                     stz zpt+3
33a9 : 6456                     stz zpt+4
                                tst_a $aa,0
33ab : 08              >            php         ;save flags
33ac : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
33ae : f003            >        beq skip2282
                       >        trap            ;failed not equal (non zero)
33b0 : 200440          >        jsr report_error
                       >
33b3 :                 >skip2282
                       >
33b3 : 68              >            pla         ;load status
33b4 : 48              >            pha
                       >            cmp_flag 0
33b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33b7 : f003            >        beq skip2285
                       >        trap            ;failed not equal (non zero)
33b9 : 200440          >        jsr report_error
                       >
33bc :                 >skip2285
                       >
33bc : 28              >            plp         ;restore status
                        
33bd : b552             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
33bf : f003            >        beq skip2287
                       >        trap            ;failed not equal (non zero)
33c1 : 200440          >        jsr report_error
                       >
33c4 :                 >skip2287
                        
33c4 : ca                       dex
33c5 : 10f6                     bpl tstz4
                                
33c7 : a204                     ldx #4      ;precharge test area
33c9 : a907                     lda #7
33cb : 9d0511           tstz5   sta abst,x
33ce : 0a                       asl a
33cf : ca                       dex
33d0 : 10f9                     bpl tstz5
33d2 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
33d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33d6 : 48              >            pha         ;use stack to load status
33d7 : a955            >            lda #$55     ;precharge accu
33d9 : 28              >            plp
                        
33da : 9c0511                   stz abst     
33dd : 9c0611                   stz abst+1
33e0 : 9c0711                   stz abst+2
33e3 : 9c0811                   stz abst+3
33e6 : 9c0911                   stz abst+4
                                tst_a $55,$ff
33e9 : 08              >            php         ;save flags
33ea : c955            >            cmp #$55     ;test result
                       >            trap_ne
33ec : f003            >        beq skip2292
                       >        trap            ;failed not equal (non zero)
33ee : 200440          >        jsr report_error
                       >
33f1 :                 >skip2292
                       >
33f1 : 68              >            pla         ;load status
33f2 : 48              >            pha
                       >            cmp_flag $ff
33f3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33f5 : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
33f7 : 200440          >        jsr report_error
                       >
33fa :                 >skip2295
                       >
33fa : 28              >            plp         ;restore status
                        
33fb : bd0511           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
33fe : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
3400 : 200440          >        jsr report_error
                       >
3403 :                 >skip2297
                        
3403 : ca                       dex
3404 : 10f5                     bpl tstz6
3406 : a204                     ldx #4      ;precharge test area
3408 : a907                     lda #7
340a : 9d0511           tstz7   sta abst,x
340d : 0a                       asl a
340e : ca                       dex
340f : 10f9                     bpl tstz7
3411 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
3413 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3415 : 48              >            pha         ;use stack to load status
3416 : a9aa            >            lda #$aa     ;precharge accu
3418 : 28              >            plp
                        
3419 : 9c0511                   stz abst     
341c : 9c0611                   stz abst+1
341f : 9c0711                   stz abst+2
3422 : 9c0811                   stz abst+3
3425 : 9c0911                   stz abst+4
                                tst_a $aa,0
3428 : 08              >            php         ;save flags
3429 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
342b : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
342d : 200440          >        jsr report_error
                       >
3430 :                 >skip2302
                       >
3430 : 68              >            pla         ;load status
3431 : 48              >            pha
                       >            cmp_flag 0
3432 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3434 : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
3436 : 200440          >        jsr report_error
                       >
3439 :                 >skip2305
                       >
3439 : 28              >            plp         ;restore status
                        
343a : bd0511           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
343d : f003            >        beq skip2307
                       >        trap            ;failed not equal (non zero)
343f : 200440          >        jsr report_error
                       >
3442 :                 >skip2307
                        
3442 : ca                       dex
3443 : 10f5                     bpl tstz8
                                
3445 : a204                     ldx #4      ;precharge test area
3447 : a907                     lda #7
3449 : 9552             tstz11  sta zpt,x
344b : 0a                       asl a
344c : ca                       dex
344d : 10fa                     bpl tstz11
344f : a204                     ldx #4
3451 :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
3451 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3453 : 48              >            pha         ;use stack to load status
3454 : a955            >            lda #$55     ;precharge accu
3456 : 28              >            plp
                        
3457 : 7452                     stz zpt,x     
                                tst_a $55,$ff
3459 : 08              >            php         ;save flags
345a : c955            >            cmp #$55     ;test result
                       >            trap_ne
345c : f003            >        beq skip2312
                       >        trap            ;failed not equal (non zero)
345e : 200440          >        jsr report_error
                       >
3461 :                 >skip2312
                       >
3461 : 68              >            pla         ;load status
3462 : 48              >            pha
                       >            cmp_flag $ff
3463 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3465 : f003            >        beq skip2315
                       >        trap            ;failed not equal (non zero)
3467 : 200440          >        jsr report_error
                       >
346a :                 >skip2315
                       >
346a : 28              >            plp         ;restore status
                        
346b : ca                       dex
346c : 10e3                     bpl tstz15
346e : a204                     ldx #4
3470 : b552             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3472 : f003            >        beq skip2317
                       >        trap            ;failed not equal (non zero)
3474 : 200440          >        jsr report_error
                       >
3477 :                 >skip2317
                        
3477 : ca                       dex
3478 : 10f6                     bpl tstz12
347a : a204                     ldx #4      ;precharge test area
347c : a907                     lda #7
347e : 9552             tstz13  sta zpt,x
3480 : 0a                       asl a
3481 : ca                       dex
3482 : 10fa                     bpl tstz13
3484 : a204                     ldx #4
3486 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
3486 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3488 : 48              >            pha         ;use stack to load status
3489 : a9aa            >            lda #$aa     ;precharge accu
348b : 28              >            plp
                        
348c : 7452                     stz zpt,x
                                tst_a $aa,0
348e : 08              >            php         ;save flags
348f : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
3491 : f003            >        beq skip2322
                       >        trap            ;failed not equal (non zero)
3493 : 200440          >        jsr report_error
                       >
3496 :                 >skip2322
                       >
3496 : 68              >            pla         ;load status
3497 : 48              >            pha
                       >            cmp_flag 0
3498 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
349a : f003            >        beq skip2325
                       >        trap            ;failed not equal (non zero)
349c : 200440          >        jsr report_error
                       >
349f :                 >skip2325
                       >
349f : 28              >            plp         ;restore status
                        
34a0 : ca                       dex
34a1 : 10e3                     bpl tstz16
34a3 : a204                     ldx #4
34a5 : b552             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
34a7 : f003            >        beq skip2327
                       >        trap            ;failed not equal (non zero)
34a9 : 200440          >        jsr report_error
                       >
34ac :                 >skip2327
                        
34ac : ca                       dex
34ad : 10f6                     bpl tstz14
                                
34af : a204                     ldx #4      ;precharge test area
34b1 : a907                     lda #7
34b3 : 9d0511           tstz21  sta abst,x
34b6 : 0a                       asl a
34b7 : ca                       dex
34b8 : 10f9                     bpl tstz21
34ba : a204                     ldx #4
34bc :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
34bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34be : 48              >            pha         ;use stack to load status
34bf : a955            >            lda #$55     ;precharge accu
34c1 : 28              >            plp
                        
34c2 : 9e0511                   stz abst,x     
                                tst_a $55,$ff
34c5 : 08              >            php         ;save flags
34c6 : c955            >            cmp #$55     ;test result
                       >            trap_ne
34c8 : f003            >        beq skip2332
                       >        trap            ;failed not equal (non zero)
34ca : 200440          >        jsr report_error
                       >
34cd :                 >skip2332
                       >
34cd : 68              >            pla         ;load status
34ce : 48              >            pha
                       >            cmp_flag $ff
34cf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34d1 : f003            >        beq skip2335
                       >        trap            ;failed not equal (non zero)
34d3 : 200440          >        jsr report_error
                       >
34d6 :                 >skip2335
                       >
34d6 : 28              >            plp         ;restore status
                        
34d7 : ca                       dex
34d8 : 10e2                     bpl tstz25
34da : a204                     ldx #4
34dc : bd0511           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
34df : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
34e1 : 200440          >        jsr report_error
                       >
34e4 :                 >skip2337
                        
34e4 : ca                       dex
34e5 : 10f5                     bpl tstz22
34e7 : a204                     ldx #4      ;precharge test area
34e9 : a907                     lda #7
34eb : 9d0511           tstz23  sta abst,x
34ee : 0a                       asl a
34ef : ca                       dex
34f0 : 10f9                     bpl tstz23
34f2 : a204                     ldx #4
34f4 :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
34f4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34f6 : 48              >            pha         ;use stack to load status
34f7 : a9aa            >            lda #$aa     ;precharge accu
34f9 : 28              >            plp
                        
34fa : 9e0511                   stz abst,x
                                tst_a $aa,0
34fd : 08              >            php         ;save flags
34fe : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
3500 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
3502 : 200440          >        jsr report_error
                       >
3505 :                 >skip2342
                       >
3505 : 68              >            pla         ;load status
3506 : 48              >            pha
                       >            cmp_flag 0
3507 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3509 : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
350b : 200440          >        jsr report_error
                       >
350e :                 >skip2345
                       >
350e : 28              >            plp         ;restore status
                        
350f : ca                       dex
3510 : 10e2                     bpl tstz26
3512 : a204                     ldx #4
3514 : bd0511           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3517 : f003            >        beq skip2347
                       >        trap            ;failed not equal (non zero)
3519 : 200440          >        jsr report_error
                       >
351c :                 >skip2347
                        
351c : ca                       dex
351d : 10f5                     bpl tstz24
                                
351f : c07b                     cpy #123
                                trap_ne     ;y altered during test 
3521 : f003            >        beq skip2349
                       >        trap            ;failed not equal (non zero)
3523 : 200440          >        jsr report_error
                       >
3526 :                 >skip2349
                        
3526 : ba                       tsx
3527 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3529 : f003            >        beq skip2351
                       >        trap            ;failed not equal (non zero)
352b : 200440          >        jsr report_error
                       >
352e :                 >skip2351
                        
                                next_test
352e : ad0211          >            lda test_case   ;previous test
3531 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3533 : f003            >        beq skip2354
                       >        trap            ;failed not equal (non zero)
3535 : 200440          >        jsr report_error
                       >
3538 :                 >skip2354
                       >
000c =                 >test_num = test_num + 1
3538 : a90c            >            lda #test_num   ;*** next tests' number
353a : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
353d : a042                     ldy #$42
353f : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
3541 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3543 : 48              >            pha         ;use stack to load status
3544 : a9ff            >            lda #$ff     ;precharge accu
3546 : 28              >            plp
                        
3547 : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
3549 : 08              >            php         ;save flags
354a : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
354c : f003            >        beq skip2359
                       >        trap            ;failed not equal (non zero)
354e : 200440          >        jsr report_error
                       >
3551 :                 >skip2359
                       >
3551 : 68              >            pla         ;load status
3552 : 48              >            pha
                       >            cmp_flag fz 
3553 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3555 : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
3557 : 200440          >        jsr report_error
                       >
355a :                 >skip2362
                       >
355a : 28              >            plp         ;restore status
                        
355b : ca                       dex
                                set_a 1,0
                       >            load_flag 0
355c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
355e : 48              >            pha         ;use stack to load status
355f : a901            >            lda #1     ;precharge accu
3561 : 28              >            plp
                        
3562 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
3564 : 08              >            php         ;save flags
3565 : c901            >            cmp #1     ;test result
                       >            trap_ne
3567 : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
3569 : 200440          >        jsr report_error
                       >
356c :                 >skip2367
                       >
356c : 68              >            pla         ;load status
356d : 48              >            pha
                       >            cmp_flag fv
356e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3570 : f003            >        beq skip2370
                       >        trap            ;failed not equal (non zero)
3572 : 200440          >        jsr report_error
                       >
3575 :                 >skip2370
                       >
3575 : 28              >            plp         ;restore status
                        
3576 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3577 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3579 : 48              >            pha         ;use stack to load status
357a : a901            >            lda #1     ;precharge accu
357c : 28              >            plp
                        
357d : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
357f : 08              >            php         ;save flags
3580 : c901            >            cmp #1     ;test result
                       >            trap_ne
3582 : f003            >        beq skip2375
                       >        trap            ;failed not equal (non zero)
3584 : 200440          >        jsr report_error
                       >
3587 :                 >skip2375
                       >
3587 : 68              >            pla         ;load status
3588 : 48              >            pha
                       >            cmp_flag fnz
3589 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
358b : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
358d : 200440          >        jsr report_error
                       >
3590 :                 >skip2378
                       >
3590 : 28              >            plp         ;restore status
                        
3591 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3592 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3594 : 48              >            pha         ;use stack to load status
3595 : a901            >            lda #1     ;precharge accu
3597 : 28              >            plp
                        
3598 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
359a : 08              >            php         ;save flags
359b : c901            >            cmp #1     ;test result
                       >            trap_ne
359d : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
359f : 200440          >        jsr report_error
                       >
35a2 :                 >skip2383
                       >
35a2 : 68              >            pla         ;load status
35a3 : 48              >            pha
                       >            cmp_flag fnv
35a4 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35a6 : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
35a8 : 200440          >        jsr report_error
                       >
35ab :                 >skip2386
                       >
35ab : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
35ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35ae : 48              >            pha         ;use stack to load status
35af : a901            >            lda #1     ;precharge accu
35b1 : 28              >            plp
                        
35b2 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
35b4 : 08              >            php         ;save flags
35b5 : c901            >            cmp #1     ;test result
                       >            trap_ne
35b7 : f003            >        beq skip2391
                       >        trap            ;failed not equal (non zero)
35b9 : 200440          >        jsr report_error
                       >
35bc :                 >skip2391
                       >
35bc : 68              >            pla         ;load status
35bd : 48              >            pha
                       >            cmp_flag ~fz
35be : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c0 : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
35c2 : 200440          >        jsr report_error
                       >
35c5 :                 >skip2394
                       >
35c5 : 28              >            plp         ;restore status
                        
35c6 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
35c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35c9 : 48              >            pha         ;use stack to load status
35ca : a901            >            lda #1     ;precharge accu
35cc : 28              >            plp
                        
35cd : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
35cf : 08              >            php         ;save flags
35d0 : c901            >            cmp #1     ;test result
                       >            trap_ne
35d2 : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
35d4 : 200440          >        jsr report_error
                       >
35d7 :                 >skip2399
                       >
35d7 : 68              >            pla         ;load status
35d8 : 48              >            pha
                       >            cmp_flag ~fv
35d9 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35db : f003            >        beq skip2402
                       >        trap            ;failed not equal (non zero)
35dd : 200440          >        jsr report_error
                       >
35e0 :                 >skip2402
                       >
35e0 : 28              >            plp         ;restore status
                        
35e1 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
35e2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35e4 : 48              >            pha         ;use stack to load status
35e5 : a901            >            lda #1     ;precharge accu
35e7 : 28              >            plp
                        
35e8 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
35ea : 08              >            php         ;save flags
35eb : c901            >            cmp #1     ;test result
                       >            trap_ne
35ed : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
35ef : 200440          >        jsr report_error
                       >
35f2 :                 >skip2407
                       >
35f2 : 68              >            pla         ;load status
35f3 : 48              >            pha
                       >            cmp_flag ~fnz
35f4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35f6 : f003            >        beq skip2410
                       >        trap            ;failed not equal (non zero)
35f8 : 200440          >        jsr report_error
                       >
35fb :                 >skip2410
                       >
35fb : 28              >            plp         ;restore status
                        
35fc : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
35fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35ff : 48              >            pha         ;use stack to load status
3600 : a9ff            >            lda #$ff     ;precharge accu
3602 : 28              >            plp
                        
3603 : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
3605 : 08              >            php         ;save flags
3606 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3608 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
360a : 200440          >        jsr report_error
                       >
360d :                 >skip2415
                       >
360d : 68              >            pla         ;load status
360e : 48              >            pha
                       >            cmp_flag ~fnv 
360f : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3611 : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
3613 : 200440          >        jsr report_error
                       >
3616 :                 >skip2418
                       >
3616 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
3617 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3619 : 48              >            pha         ;use stack to load status
361a : a9ff            >            lda #$ff     ;precharge accu
361c : 28              >            plp
                        
361d : 3c1011                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
3620 : 08              >            php         ;save flags
3621 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3623 : f003            >        beq skip2423
                       >        trap            ;failed not equal (non zero)
3625 : 200440          >        jsr report_error
                       >
3628 :                 >skip2423
                       >
3628 : 68              >            pla         ;load status
3629 : 48              >            pha
                       >            cmp_flag fz 
362a : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
362c : f003            >        beq skip2426
                       >        trap            ;failed not equal (non zero)
362e : 200440          >        jsr report_error
                       >
3631 :                 >skip2426
                       >
3631 : 28              >            plp         ;restore status
                        
3632 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3633 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3635 : 48              >            pha         ;use stack to load status
3636 : a901            >            lda #1     ;precharge accu
3638 : 28              >            plp
                        
3639 : 3c1011                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
363c : 08              >            php         ;save flags
363d : c901            >            cmp #1     ;test result
                       >            trap_ne
363f : f003            >        beq skip2431
                       >        trap            ;failed not equal (non zero)
3641 : 200440          >        jsr report_error
                       >
3644 :                 >skip2431
                       >
3644 : 68              >            pla         ;load status
3645 : 48              >            pha
                       >            cmp_flag fv
3646 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3648 : f003            >        beq skip2434
                       >        trap            ;failed not equal (non zero)
364a : 200440          >        jsr report_error
                       >
364d :                 >skip2434
                       >
364d : 28              >            plp         ;restore status
                        
364e : ca                       dex
                                set_a 1,0
                       >            load_flag 0
364f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3651 : 48              >            pha         ;use stack to load status
3652 : a901            >            lda #1     ;precharge accu
3654 : 28              >            plp
                        
3655 : 3c1011                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
3658 : 08              >            php         ;save flags
3659 : c901            >            cmp #1     ;test result
                       >            trap_ne
365b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
365d : 200440          >        jsr report_error
                       >
3660 :                 >skip2439
                       >
3660 : 68              >            pla         ;load status
3661 : 48              >            pha
                       >            cmp_flag fnz
3662 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3664 : f003            >        beq skip2442
                       >        trap            ;failed not equal (non zero)
3666 : 200440          >        jsr report_error
                       >
3669 :                 >skip2442
                       >
3669 : 28              >            plp         ;restore status
                        
366a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
366b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
366d : 48              >            pha         ;use stack to load status
366e : a901            >            lda #1     ;precharge accu
3670 : 28              >            plp
                        
3671 : 3c1011                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
3674 : 08              >            php         ;save flags
3675 : c901            >            cmp #1     ;test result
                       >            trap_ne
3677 : f003            >        beq skip2447
                       >        trap            ;failed not equal (non zero)
3679 : 200440          >        jsr report_error
                       >
367c :                 >skip2447
                       >
367c : 68              >            pla         ;load status
367d : 48              >            pha
                       >            cmp_flag fnv
367e : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3680 : f003            >        beq skip2450
                       >        trap            ;failed not equal (non zero)
3682 : 200440          >        jsr report_error
                       >
3685 :                 >skip2450
                       >
3685 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
3686 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3688 : 48              >            pha         ;use stack to load status
3689 : a901            >            lda #1     ;precharge accu
368b : 28              >            plp
                        
368c : 3c1011                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
368f : 08              >            php         ;save flags
3690 : c901            >            cmp #1     ;test result
                       >            trap_ne
3692 : f003            >        beq skip2455
                       >        trap            ;failed not equal (non zero)
3694 : 200440          >        jsr report_error
                       >
3697 :                 >skip2455
                       >
3697 : 68              >            pla         ;load status
3698 : 48              >            pha
                       >            cmp_flag ~fz
3699 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
369b : f003            >        beq skip2458
                       >        trap            ;failed not equal (non zero)
369d : 200440          >        jsr report_error
                       >
36a0 :                 >skip2458
                       >
36a0 : 28              >            plp         ;restore status
                        
36a1 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
36a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36a4 : 48              >            pha         ;use stack to load status
36a5 : a901            >            lda #1     ;precharge accu
36a7 : 28              >            plp
                        
36a8 : 3c1011                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
36ab : 08              >            php         ;save flags
36ac : c901            >            cmp #1     ;test result
                       >            trap_ne
36ae : f003            >        beq skip2463
                       >        trap            ;failed not equal (non zero)
36b0 : 200440          >        jsr report_error
                       >
36b3 :                 >skip2463
                       >
36b3 : 68              >            pla         ;load status
36b4 : 48              >            pha
                       >            cmp_flag ~fv
36b5 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36b7 : f003            >        beq skip2466
                       >        trap            ;failed not equal (non zero)
36b9 : 200440          >        jsr report_error
                       >
36bc :                 >skip2466
                       >
36bc : 28              >            plp         ;restore status
                        
36bd : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
36be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36c0 : 48              >            pha         ;use stack to load status
36c1 : a901            >            lda #1     ;precharge accu
36c3 : 28              >            plp
                        
36c4 : 3c1011                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
36c7 : 08              >            php         ;save flags
36c8 : c901            >            cmp #1     ;test result
                       >            trap_ne
36ca : f003            >        beq skip2471
                       >        trap            ;failed not equal (non zero)
36cc : 200440          >        jsr report_error
                       >
36cf :                 >skip2471
                       >
36cf : 68              >            pla         ;load status
36d0 : 48              >            pha
                       >            cmp_flag ~fnz
36d1 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36d3 : f003            >        beq skip2474
                       >        trap            ;failed not equal (non zero)
36d5 : 200440          >        jsr report_error
                       >
36d8 :                 >skip2474
                       >
36d8 : 28              >            plp         ;restore status
                        
36d9 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
36da : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36dc : 48              >            pha         ;use stack to load status
36dd : a9ff            >            lda #$ff     ;precharge accu
36df : 28              >            plp
                        
36e0 : 3c1011                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
36e3 : 08              >            php         ;save flags
36e4 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
36e6 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
36e8 : 200440          >        jsr report_error
                       >
36eb :                 >skip2479
                       >
36eb : 68              >            pla         ;load status
36ec : 48              >            pha
                       >            cmp_flag ~fnv 
36ed : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36ef : f003            >        beq skip2482
                       >        trap            ;failed not equal (non zero)
36f1 : 200440          >        jsr report_error
                       >
36f4 :                 >skip2482
                       >
36f4 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
36f5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36f7 : 48              >            pha         ;use stack to load status
36f8 : a9ff            >            lda #$ff     ;precharge accu
36fa : 28              >            plp
                        
36fb : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
36fd : 08              >            php         ;save flags
36fe : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3700 : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
3702 : 200440          >        jsr report_error
                       >
3705 :                 >skip2487
                       >
3705 : 68              >            pla         ;load status
3706 : 48              >            pha
                       >            cmp_flag fz 
3707 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3709 : f003            >        beq skip2490
                       >        trap            ;failed not equal (non zero)
370b : 200440          >        jsr report_error
                       >
370e :                 >skip2490
                       >
370e : 28              >            plp         ;restore status
                        
370f : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3710 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3712 : 48              >            pha         ;use stack to load status
3713 : a901            >            lda #1     ;precharge accu
3715 : 28              >            plp
                        
3716 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
3718 : 08              >            php         ;save flags
3719 : c901            >            cmp #1     ;test result
                       >            trap_ne
371b : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
371d : 200440          >        jsr report_error
                       >
3720 :                 >skip2495
                       >
3720 : 68              >            pla         ;load status
3721 : 48              >            pha
                       >            cmp_flag 0
3722 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3724 : f003            >        beq skip2498
                       >        trap            ;failed not equal (non zero)
3726 : 200440          >        jsr report_error
                       >
3729 :                 >skip2498
                       >
3729 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
372a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
372b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
372d : 48              >            pha         ;use stack to load status
372e : a901            >            lda #1     ;precharge accu
3730 : 28              >            plp
                        
3731 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
3733 : 08              >            php         ;save flags
3734 : c901            >            cmp #1     ;test result
                       >            trap_ne
3736 : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
3738 : 200440          >        jsr report_error
                       >
373b :                 >skip2503
                       >
373b : 68              >            pla         ;load status
373c : 48              >            pha
                       >            cmp_flag fz
373d : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
373f : f003            >        beq skip2506
                       >        trap            ;failed not equal (non zero)
3741 : 200440          >        jsr report_error
                       >
3744 :                 >skip2506
                       >
3744 : 28              >            plp         ;restore status
                        
3745 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3746 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3748 : 48              >            pha         ;use stack to load status
3749 : a901            >            lda #1     ;precharge accu
374b : 28              >            plp
                        
374c : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
374e : 08              >            php         ;save flags
374f : c901            >            cmp #1     ;test result
                       >            trap_ne
3751 : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
3753 : 200440          >        jsr report_error
                       >
3756 :                 >skip2511
                       >
3756 : 68              >            pla         ;load status
3757 : 48              >            pha
                       >            cmp_flag 0
3758 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
375a : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
375c : 200440          >        jsr report_error
                       >
375f :                 >skip2514
                       >
375f : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
3760 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3762 : 48              >            pha         ;use stack to load status
3763 : a901            >            lda #1     ;precharge accu
3765 : 28              >            plp
                        
3766 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
3768 : 08              >            php         ;save flags
3769 : c901            >            cmp #1     ;test result
                       >            trap_ne
376b : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
376d : 200440          >        jsr report_error
                       >
3770 :                 >skip2519
                       >
3770 : 68              >            pla         ;load status
3771 : 48              >            pha
                       >            cmp_flag ~fz
3772 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3774 : f003            >        beq skip2522
                       >        trap            ;failed not equal (non zero)
3776 : 200440          >        jsr report_error
                       >
3779 :                 >skip2522
                       >
3779 : 28              >            plp         ;restore status
                        
377a : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
377b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
377d : 48              >            pha         ;use stack to load status
377e : a901            >            lda #1     ;precharge accu
3780 : 28              >            plp
                        
3781 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
3783 : 08              >            php         ;save flags
3784 : c901            >            cmp #1     ;test result
                       >            trap_ne
3786 : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
3788 : 200440          >        jsr report_error
                       >
378b :                 >skip2527
                       >
378b : 68              >            pla         ;load status
378c : 48              >            pha
                       >            cmp_flag $ff
378d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
378f : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
3791 : 200440          >        jsr report_error
                       >
3794 :                 >skip2530
                       >
3794 : 28              >            plp         ;restore status
                        
3795 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
3796 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3798 : 48              >            pha         ;use stack to load status
3799 : a901            >            lda #1     ;precharge accu
379b : 28              >            plp
                        
379c : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
379e : 08              >            php         ;save flags
379f : c901            >            cmp #1     ;test result
                       >            trap_ne
37a1 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
37a3 : 200440          >        jsr report_error
                       >
37a6 :                 >skip2535
                       >
37a6 : 68              >            pla         ;load status
37a7 : 48              >            pha
                       >            cmp_flag ~fz
37a8 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37aa : f003            >        beq skip2538
                       >        trap            ;failed not equal (non zero)
37ac : 200440          >        jsr report_error
                       >
37af :                 >skip2538
                       >
37af : 28              >            plp         ;restore status
                        
37b0 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
37b1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37b3 : 48              >            pha         ;use stack to load status
37b4 : a9ff            >            lda #$ff     ;precharge accu
37b6 : 28              >            plp
                        
37b7 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
37b9 : 08              >            php         ;save flags
37ba : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
37bc : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
37be : 200440          >        jsr report_error
                       >
37c1 :                 >skip2543
                       >
37c1 : 68              >            pla         ;load status
37c2 : 48              >            pha
                       >            cmp_flag $ff
37c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37c5 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
37c7 : 200440          >        jsr report_error
                       >
37ca :                 >skip2546
                       >
37ca : 28              >            plp         ;restore status
                        
                                
37cb : e003                     cpx #3
                                trap_ne     ;x altered during test
37cd : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
37cf : 200440          >        jsr report_error
                       >
37d2 :                 >skip2548
                        
37d2 : c042                     cpy #$42
                                trap_ne     ;y altered during test 
37d4 : f003            >        beq skip2550
                       >        trap            ;failed not equal (non zero)
37d6 : 200440          >        jsr report_error
                       >
37d9 :                 >skip2550
                        
37d9 : ba                       tsx
37da : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
37dc : f003            >        beq skip2552
                       >        trap            ;failed not equal (non zero)
37de : 200440          >        jsr report_error
                       >
37e1 :                 >skip2552
                        
                                next_test
37e1 : ad0211          >            lda test_case   ;previous test
37e4 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
37e6 : f003            >        beq skip2555
                       >        trap            ;failed not equal (non zero)
37e8 : 200440          >        jsr report_error
                       >
37eb :                 >skip2555
                       >
000d =                 >test_num = test_num + 1
37eb : a90d            >            lda #test_num   ;*** next tests' number
37ed : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
37f0 : a2c0                     ldx #$c0
37f2 : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
37f4 : 6453                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
37f6 : 98               tbt1    tya
37f7 : 2553                     and zpt+1   ;set Z by anding the 2 operands
37f9 : 08                       php
37fa : 68                       pla
37fb : 2902                     and #fz     ;mask Z
37fd : 8554                     sta zpt+2
37ff : 98                       tya         ;reset op1 bits by op2
3800 : 49ff                     eor #$ff
3802 : 0553                     ora zpt+1
3804 : 49ff                     eor #$ff
3806 : 8555                     sta zpt+3
3808 : 98                       tya         ;set op1 bits by op2
3809 : 0553                     ora zpt+1
380b : 8556                     sta zpt+4
                        
                                trbt zpt,$ff
380d : 8452            >        sty zpt
                       >        load_flag $ff
380f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3811 : 48              >        pha
3812 : a553            >        lda zpt+1
3814 : 28              >        plp
3815 : 1452            >        trb zpt
3817 : 08              >        php
3818 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
381a : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
381c : 200440          >        jsr report_error
                       >
381f :                 >skip2559
                       >
381f : 68              >        pla
3820 : 48              >        pha
3821 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3823 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3825 : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
3827 : 200440          >        jsr report_error
                       >
382a :                 >skip2562
                       >
382a : 68              >        pla
382b : 2902            >        and #fz
382d : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
382f : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
3831 : 200440          >        jsr report_error
                       >
3834 :                 >skip2564
                       >
3834 : a555            >        lda zpt+3
3836 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3838 : f003            >        beq skip2566
                       >        trap            ;failed not equal (non zero)
383a : 200440          >        jsr report_error
                       >
383d :                 >skip2566
                       >
                        
                                trbt abst,$ff
383d : 8c0511          >        sty abst
                       >        load_flag $ff
3840 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3842 : 48              >        pha
3843 : a553            >        lda zpt+1
3845 : 28              >        plp
3846 : 1c0511          >        trb abst
3849 : 08              >        php
384a : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
384c : f003            >        beq skip2570
                       >        trap            ;failed not equal (non zero)
384e : 200440          >        jsr report_error
                       >
3851 :                 >skip2570
                       >
3851 : 68              >        pla
3852 : 48              >        pha
3853 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3855 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3857 : f003            >        beq skip2573
                       >        trap            ;failed not equal (non zero)
3859 : 200440          >        jsr report_error
                       >
385c :                 >skip2573
                       >
385c : 68              >        pla
385d : 2902            >        and #fz
385f : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3861 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
3863 : 200440          >        jsr report_error
                       >
3866 :                 >skip2575
                       >
3866 : a555            >        lda zpt+3
3868 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
386a : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
386c : 200440          >        jsr report_error
                       >
386f :                 >skip2577
                       >
                        
                                trbt zpt,0
386f : 8452            >        sty zpt
                       >        load_flag 0
3871 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3873 : 48              >        pha
3874 : a553            >        lda zpt+1
3876 : 28              >        plp
3877 : 1452            >        trb zpt
3879 : 08              >        php
387a : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
387c : f003            >        beq skip2581
                       >        trap            ;failed not equal (non zero)
387e : 200440          >        jsr report_error
                       >
3881 :                 >skip2581
                       >
3881 : 68              >        pla
3882 : 48              >        pha
3883 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3885 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3887 : f003            >        beq skip2584
                       >        trap            ;failed not equal (non zero)
3889 : 200440          >        jsr report_error
                       >
388c :                 >skip2584
                       >
388c : 68              >        pla
388d : 2902            >        and #fz
388f : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3891 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
3893 : 200440          >        jsr report_error
                       >
3896 :                 >skip2586
                       >
3896 : a555            >        lda zpt+3
3898 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
389a : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
389c : 200440          >        jsr report_error
                       >
389f :                 >skip2588
                       >
                        
                                trbt abst,0
389f : 8c0511          >        sty abst
                       >        load_flag 0
38a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38a4 : 48              >        pha
38a5 : a553            >        lda zpt+1
38a7 : 28              >        plp
38a8 : 1c0511          >        trb abst
38ab : 08              >        php
38ac : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
38ae : f003            >        beq skip2592
                       >        trap            ;failed not equal (non zero)
38b0 : 200440          >        jsr report_error
                       >
38b3 :                 >skip2592
                       >
38b3 : 68              >        pla
38b4 : 48              >        pha
38b5 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
38b7 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
38b9 : f003            >        beq skip2595
                       >        trap            ;failed not equal (non zero)
38bb : 200440          >        jsr report_error
                       >
38be :                 >skip2595
                       >
38be : 68              >        pla
38bf : 2902            >        and #fz
38c1 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
38c3 : f003            >        beq skip2597
                       >        trap            ;failed not equal (non zero)
38c5 : 200440          >        jsr report_error
                       >
38c8 :                 >skip2597
                       >
38c8 : a555            >        lda zpt+3
38ca : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
38cc : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
38ce : 200440          >        jsr report_error
                       >
38d1 :                 >skip2599
                       >
                        
                                tsbt zpt,$ff
38d1 : 8452            >        sty zpt
                       >        load_flag $ff
38d3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38d5 : 48              >        pha
38d6 : a553            >        lda zpt+1
38d8 : 28              >        plp
38d9 : 0452            >        tsb zpt
38db : 08              >        php
38dc : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
38de : f003            >        beq skip2603
                       >        trap            ;failed not equal (non zero)
38e0 : 200440          >        jsr report_error
                       >
38e3 :                 >skip2603
                       >
38e3 : 68              >        pla
38e4 : 48              >        pha
38e5 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
38e7 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
38e9 : f003            >        beq skip2606
                       >        trap            ;failed not equal (non zero)
38eb : 200440          >        jsr report_error
                       >
38ee :                 >skip2606
                       >
38ee : 68              >        pla
38ef : 2902            >        and #fz
38f1 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
38f3 : f003            >        beq skip2608
                       >        trap            ;failed not equal (non zero)
38f5 : 200440          >        jsr report_error
                       >
38f8 :                 >skip2608
                       >
38f8 : a556            >        lda zpt+4
38fa : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
38fc : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
38fe : 200440          >        jsr report_error
                       >
3901 :                 >skip2610
                       >
                        
                                tsbt abst,$ff
3901 : 8c0511          >        sty abst
                       >        load_flag $ff
3904 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3906 : 48              >        pha
3907 : a553            >        lda zpt+1
3909 : 28              >        plp
390a : 0c0511          >        tsb abst
390d : 08              >        php
390e : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3910 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
3912 : 200440          >        jsr report_error
                       >
3915 :                 >skip2614
                       >
3915 : 68              >        pla
3916 : 48              >        pha
3917 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3919 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
391b : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
391d : 200440          >        jsr report_error
                       >
3920 :                 >skip2617
                       >
3920 : 68              >        pla
3921 : 2902            >        and #fz
3923 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3925 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
3927 : 200440          >        jsr report_error
                       >
392a :                 >skip2619
                       >
392a : a556            >        lda zpt+4
392c : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
392e : f003            >        beq skip2621
                       >        trap            ;failed not equal (non zero)
3930 : 200440          >        jsr report_error
                       >
3933 :                 >skip2621
                       >
                        
                                tsbt zpt,0
3933 : 8452            >        sty zpt
                       >        load_flag 0
3935 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3937 : 48              >        pha
3938 : a553            >        lda zpt+1
393a : 28              >        plp
393b : 0452            >        tsb zpt
393d : 08              >        php
393e : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3940 : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
3942 : 200440          >        jsr report_error
                       >
3945 :                 >skip2625
                       >
3945 : 68              >        pla
3946 : 48              >        pha
3947 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3949 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
394b : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
394d : 200440          >        jsr report_error
                       >
3950 :                 >skip2628
                       >
3950 : 68              >        pla
3951 : 2902            >        and #fz
3953 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3955 : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
3957 : 200440          >        jsr report_error
                       >
395a :                 >skip2630
                       >
395a : a556            >        lda zpt+4
395c : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
395e : f003            >        beq skip2632
                       >        trap            ;failed not equal (non zero)
3960 : 200440          >        jsr report_error
                       >
3963 :                 >skip2632
                       >
                        
                                tsbt abst,0
3963 : 8c0511          >        sty abst
                       >        load_flag 0
3966 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3968 : 48              >        pha
3969 : a553            >        lda zpt+1
396b : 28              >        plp
396c : 0c0511          >        tsb abst
396f : 08              >        php
3970 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3972 : f003            >        beq skip2636
                       >        trap            ;failed not equal (non zero)
3974 : 200440          >        jsr report_error
                       >
3977 :                 >skip2636
                       >
3977 : 68              >        pla
3978 : 48              >        pha
3979 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
397b : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
397d : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
397f : 200440          >        jsr report_error
                       >
3982 :                 >skip2639
                       >
3982 : 68              >        pla
3983 : 2902            >        and #fz
3985 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3987 : f003            >        beq skip2641
                       >        trap            ;failed not equal (non zero)
3989 : 200440          >        jsr report_error
                       >
398c :                 >skip2641
                       >
398c : a556            >        lda zpt+4
398e : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3990 : f003            >        beq skip2643
                       >        trap            ;failed not equal (non zero)
3992 : 200440          >        jsr report_error
                       >
3995 :                 >skip2643
                       >
                        
                                
3995 : c8                       iny         ;iterate op1
3996 : d004                     bne tbt3
3998 : e653                     inc zpt+1   ;iterate op2
399a : f003                     beq tbt2
399c : 4cf637           tbt3    jmp tbt1        
399f :                  tbt2
399f : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
39a1 : f003            >        beq skip2645
                       >        trap            ;failed not equal (non zero)
39a3 : 200440          >        jsr report_error
                       >
39a6 :                 >skip2645
                        
39a6 : ba                       tsx
39a7 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
39a9 : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
39ab : 200440          >        jsr report_error
                       >
39ae :                 >skip2647
                        
                                next_test    
39ae : ad0211          >            lda test_case   ;previous test
39b1 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
39b3 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
39b5 : 200440          >        jsr report_error
                       >
39b8 :                 >skip2650
                       >
000e =                 >test_num = test_num + 1
39b8 : a90e            >            lda #test_num   ;*** next tests' number
39ba : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
                                ldx #$ba    ;protect x & y
                                ldy #$d0
                                rmbt 0
                                rmbt 1
                                rmbt 2
                                rmbt 3
                                rmbt 4
                                rmbt 5
                                rmbt 6
                                rmbt 7
                                smbt 0
                                smbt 1
                                smbt 2
                                smbt 3
                                smbt 4
                                smbt 5
                                smbt 6
                                smbt 7
                                cpx #$ba
                                trap_ne     ;x altered during test
                                cpy #$d0
                                trap_ne     ;y altered during test
                                tsx
                                cpx #$ff
                                trap_ne     ;sp push/pop mismatch
                                next_test
                            endif        
                                 
                        ; testing CMP - (zp)         
39bd : a2de                     ldx #$de    ;protect x & y
39bf : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
39c1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39c3 : 48              >            pha         ;use stack to load status
39c4 : a980            >            lda #$80     ;precharge accu
39c6 : 28              >            plp
                        
39c7 : d272                     cmp (ind1+8)
                                tst_a $80,fc
39c9 : 08              >            php         ;save flags
39ca : c980            >            cmp #$80     ;test result
                       >            trap_ne
39cc : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
39ce : 200440          >        jsr report_error
                       >
39d1 :                 >skip2655
                       >
39d1 : 68              >            pla         ;load status
39d2 : 48              >            pha
                       >            cmp_flag fc
39d3 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39d5 : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
39d7 : 200440          >        jsr report_error
                       >
39da :                 >skip2658
                       >
39da : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
39db : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39dd : 48              >            pha         ;use stack to load status
39de : a97f            >            lda #$7f     ;precharge accu
39e0 : 28              >            plp
                        
39e1 : d272                     cmp (ind1+8)
                                tst_a $7f,fzc
39e3 : 08              >            php         ;save flags
39e4 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
39e6 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
39e8 : 200440          >        jsr report_error
                       >
39eb :                 >skip2663
                       >
39eb : 68              >            pla         ;load status
39ec : 48              >            pha
                       >            cmp_flag fzc
39ed : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39ef : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
39f1 : 200440          >        jsr report_error
                       >
39f4 :                 >skip2666
                       >
39f4 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
39f5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39f7 : 48              >            pha         ;use stack to load status
39f8 : a97e            >            lda #$7e     ;precharge accu
39fa : 28              >            plp
                        
39fb : d272                     cmp (ind1+8)
                                tst_a $7e,fn
39fd : 08              >            php         ;save flags
39fe : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3a00 : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
3a02 : 200440          >        jsr report_error
                       >
3a05 :                 >skip2671
                       >
3a05 : 68              >            pla         ;load status
3a06 : 48              >            pha
                       >            cmp_flag fn
3a07 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a09 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
3a0b : 200440          >        jsr report_error
                       >
3a0e :                 >skip2674
                       >
3a0e : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3a0f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a11 : 48              >            pha         ;use stack to load status
3a12 : a980            >            lda #$80     ;precharge accu
3a14 : 28              >            plp
                        
3a15 : d272                     cmp (ind1+8)
                                tst_a $80,~fnz
3a17 : 08              >            php         ;save flags
3a18 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3a1a : f003            >        beq skip2679
                       >        trap            ;failed not equal (non zero)
3a1c : 200440          >        jsr report_error
                       >
3a1f :                 >skip2679
                       >
3a1f : 68              >            pla         ;load status
3a20 : 48              >            pha
                       >            cmp_flag ~fnz
3a21 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a23 : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
3a25 : 200440          >        jsr report_error
                       >
3a28 :                 >skip2682
                       >
3a28 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3a29 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a2b : 48              >            pha         ;use stack to load status
3a2c : a97f            >            lda #$7f     ;precharge accu
3a2e : 28              >            plp
                        
3a2f : d272                     cmp (ind1+8)
                                tst_a $7f,~fn
3a31 : 08              >            php         ;save flags
3a32 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3a34 : f003            >        beq skip2687
                       >        trap            ;failed not equal (non zero)
3a36 : 200440          >        jsr report_error
                       >
3a39 :                 >skip2687
                       >
3a39 : 68              >            pla         ;load status
3a3a : 48              >            pha
                       >            cmp_flag ~fn
3a3b : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a3d : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
3a3f : 200440          >        jsr report_error
                       >
3a42 :                 >skip2690
                       >
3a42 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3a43 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a45 : 48              >            pha         ;use stack to load status
3a46 : a97e            >            lda #$7e     ;precharge accu
3a48 : 28              >            plp
                        
3a49 : d272                     cmp (ind1+8)
                                tst_a $7e,~fzc
3a4b : 08              >            php         ;save flags
3a4c : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3a4e : f003            >        beq skip2695
                       >        trap            ;failed not equal (non zero)
3a50 : 200440          >        jsr report_error
                       >
3a53 :                 >skip2695
                       >
3a53 : 68              >            pla         ;load status
3a54 : 48              >            pha
                       >            cmp_flag ~fzc
3a55 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a57 : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
3a59 : 200440          >        jsr report_error
                       >
3a5c :                 >skip2698
                       >
3a5c : 28              >            plp         ;restore status
                        
3a5d : e0de                     cpx #$de
                                trap_ne     ;x altered during test
3a5f : f003            >        beq skip2700
                       >        trap            ;failed not equal (non zero)
3a61 : 200440          >        jsr report_error
                       >
3a64 :                 >skip2700
                        
3a64 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
3a66 : f003            >        beq skip2702
                       >        trap            ;failed not equal (non zero)
3a68 : 200440          >        jsr report_error
                       >
3a6b :                 >skip2702
                        
3a6b : ba                       tsx
3a6c : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3a6e : f003            >        beq skip2704
                       >        trap            ;failed not equal (non zero)
3a70 : 200440          >        jsr report_error
                       >
3a73 :                 >skip2704
                        
                                next_test
3a73 : ad0211          >            lda test_case   ;previous test
3a76 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3a78 : f003            >        beq skip2707
                       >        trap            ;failed not equal (non zero)
3a7a : 200440          >        jsr report_error
                       >
3a7d :                 >skip2707
                       >
000f =                 >test_num = test_num + 1
3a7d : a90f            >            lda #test_num   ;*** next tests' number
3a7f : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
3a82 : a242                     ldx #$42    ;protect x & y
                        
3a84 : a000                     ldy #0      ;AND
3a86 : a580                     lda indAN   ;set indirect address
3a88 : 8552                     sta zpt
3a8a : a581                     lda indAN+1
3a8c : 8553                     sta zpt+1
3a8e :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
3a8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a90 : 48              >            pha         ;use stack to load status
3a91 : b95311          >            lda absANa,y    ;precharge accu
3a94 : 28              >            plp
                        
3a95 : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,0
3a97 : 08              >            php         ;save flags
3a98 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3a9b : f003            >        beq skip2712
                       >        trap            ;failed not equal (non zero)
3a9d : 200440          >        jsr report_error
                       >
3aa0 :                 >skip2712
                       >
3aa0 : 68              >            pla         ;load status
                       >            eor_flag 0
3aa1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3aa3 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3aa6 : f003            >        beq skip2715
                       >        trap            ;failed not equal (non zero)
3aa8 : 200440          >        jsr report_error
                       >
3aab :                 >skip2715
                       >
                        
3aab : e652                     inc zpt
3aad : c8                       iny
3aae : c004                     cpy #4
3ab0 : d0dc                     bne tand1
3ab2 : 88                       dey
3ab3 : c652                     dec zpt
3ab5 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
3ab5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ab7 : 48              >            pha         ;use stack to load status
3ab8 : b95311          >            lda absANa,y    ;precharge accu
3abb : 28              >            plp
                        
3abc : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3abe : 08              >            php         ;save flags
3abf : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3ac2 : f003            >        beq skip2720
                       >        trap            ;failed not equal (non zero)
3ac4 : 200440          >        jsr report_error
                       >
3ac7 :                 >skip2720
                       >
3ac7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3ac8 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3aca : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3acd : f003            >        beq skip2723
                       >        trap            ;failed not equal (non zero)
3acf : 200440          >        jsr report_error
                       >
3ad2 :                 >skip2723
                       >
                        
3ad2 : c652                     dec zpt
3ad4 : 88                       dey
3ad5 : 10de                     bpl tand2
                        
3ad7 : a000                     ldy #0      ;EOR
3ad9 : a588                     lda indEO   ;set indirect address
3adb : 8552                     sta zpt
3add : a589                     lda indEO+1
3adf : 8553                     sta zpt+1
3ae1 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
3ae1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ae3 : 48              >            pha         ;use stack to load status
3ae4 : b95711          >            lda absEOa,y    ;precharge accu
3ae7 : 28              >            plp
                        
3ae8 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,0
3aea : 08              >            php         ;save flags
3aeb : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3aee : f003            >        beq skip2728
                       >        trap            ;failed not equal (non zero)
3af0 : 200440          >        jsr report_error
                       >
3af3 :                 >skip2728
                       >
3af3 : 68              >            pla         ;load status
                       >            eor_flag 0
3af4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3af6 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3af9 : f003            >        beq skip2731
                       >        trap            ;failed not equal (non zero)
3afb : 200440          >        jsr report_error
                       >
3afe :                 >skip2731
                       >
                        
3afe : e652                     inc zpt
3b00 : c8                       iny
3b01 : c004                     cpy #4
3b03 : d0dc                     bne teor1
3b05 : 88                       dey
3b06 : c652                     dec zpt
3b08 :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3b08 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b0a : 48              >            pha         ;use stack to load status
3b0b : b95711          >            lda absEOa,y    ;precharge accu
3b0e : 28              >            plp
                        
3b0f : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3b11 : 08              >            php         ;save flags
3b12 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b15 : f003            >        beq skip2736
                       >        trap            ;failed not equal (non zero)
3b17 : 200440          >        jsr report_error
                       >
3b1a :                 >skip2736
                       >
3b1a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b1b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b1d : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b20 : f003            >        beq skip2739
                       >        trap            ;failed not equal (non zero)
3b22 : 200440          >        jsr report_error
                       >
3b25 :                 >skip2739
                       >
                        
3b25 : c652                     dec zpt
3b27 : 88                       dey
3b28 : 10de                     bpl teor2
                        
3b2a : a000                     ldy #0      ;ORA
3b2c : a590                     lda indOR   ;set indirect address
3b2e : 8552                     sta zpt
3b30 : a591                     lda indOR+1
3b32 : 8553                     sta zpt+1
3b34 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
3b34 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b36 : 48              >            pha         ;use stack to load status
3b37 : b94f11          >            lda absORa,y    ;precharge accu
3b3a : 28              >            plp
                        
3b3b : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,0
3b3d : 08              >            php         ;save flags
3b3e : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b41 : f003            >        beq skip2744
                       >        trap            ;failed not equal (non zero)
3b43 : 200440          >        jsr report_error
                       >
3b46 :                 >skip2744
                       >
3b46 : 68              >            pla         ;load status
                       >            eor_flag 0
3b47 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b49 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b4c : f003            >        beq skip2747
                       >        trap            ;failed not equal (non zero)
3b4e : 200440          >        jsr report_error
                       >
3b51 :                 >skip2747
                       >
                        
3b51 : e652                     inc zpt
3b53 : c8                       iny
3b54 : c004                     cpy #4
3b56 : d0dc                     bne tora1
3b58 : 88                       dey
3b59 : c652                     dec zpt
3b5b :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
3b5b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b5d : 48              >            pha         ;use stack to load status
3b5e : b94f11          >            lda absORa,y    ;precharge accu
3b61 : 28              >            plp
                        
3b62 : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3b64 : 08              >            php         ;save flags
3b65 : d95b11          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b68 : f003            >        beq skip2752
                       >        trap            ;failed not equal (non zero)
3b6a : 200440          >        jsr report_error
                       >
3b6d :                 >skip2752
                       >
3b6d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b6e : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b70 : d95f11          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b73 : f003            >        beq skip2755
                       >        trap            ;failed not equal (non zero)
3b75 : 200440          >        jsr report_error
                       >
3b78 :                 >skip2755
                       >
                        
3b78 : c652                     dec zpt
3b7a : 88                       dey
3b7b : 10de                     bpl tora2
                        
3b7d : e042                     cpx #$42
                                trap_ne     ;x altered during test
3b7f : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
3b81 : 200440          >        jsr report_error
                       >
3b84 :                 >skip2757
                        
3b84 : ba                       tsx
3b85 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3b87 : f003            >        beq skip2759
                       >        trap            ;failed not equal (non zero)
3b89 : 200440          >        jsr report_error
                       >
3b8c :                 >skip2759
                        
                                next_test
3b8c : ad0211          >            lda test_case   ;previous test
3b8f : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3b91 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
3b93 : 200440          >        jsr report_error
                       >
3b96 :                 >skip2762
                       >
0010 =                 >test_num = test_num + 1
3b96 : a910            >            lda #test_num   ;*** next tests' number
3b98 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
3b9b : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3b9c : d8                       cld
3b9d : a254                     ldx #ad2        ;for indexed test
3b9f : a0ff                     ldy #$ff        ;max range
3ba1 : a900                     lda #0          ;start with adding zeroes & no carry
3ba3 : 8552                     sta adfc        ;carry in - for diag
3ba5 : 8553                     sta ad1         ;operand 1 - accumulator
3ba7 : 8554                     sta ad2         ;operand 2 - memory or immediate
3ba9 : 8d0511                   sta ada2        ;non zp
3bac : 8555                     sta adrl        ;expected result bits 0-7
3bae : 8556                     sta adrh        ;expected result bit 8 (carry out)
3bb0 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
3bb2 : 8558                     sta sb2
3bb4 : 8d0611                   sta sba2        ;non zp
3bb7 : a902                     lda #2          ;expected Z-flag
3bb9 : 8557                     sta adrf
3bbb : 18               tadd    clc             ;test with carry clear
3bbc : 20b63e                   jsr chkadd
3bbf : e652                     inc adfc        ;now with carry
3bc1 : e655                     inc adrl        ;result +1
3bc3 : 08                       php             ;save N & Z from low result
3bc4 : 08                       php
3bc5 : 68                       pla             ;accu holds expected flags
3bc6 : 2982                     and #$82        ;mask N & Z
3bc8 : 28                       plp
3bc9 : d002                     bne tadd1
3bcb : e656                     inc adrh        ;result bit 8 - carry
3bcd : 0556             tadd1   ora adrh        ;merge C to expected flags
3bcf : 8557                     sta adrf        ;save expected flags except overflow
3bd1 : 38                       sec             ;test with carry set
3bd2 : 20b63e                   jsr chkadd
3bd5 : c652                     dec adfc        ;same for operand +1 but no carry
3bd7 : e653                     inc ad1
3bd9 : d0e0                     bne tadd        ;iterate op1
3bdb : a900                     lda #0          ;preset result to op2 when op1 = 0
3bdd : 8556                     sta adrh
3bdf : ee0511                   inc ada2
3be2 : e654                     inc ad2
3be4 : 08                       php             ;save NZ as operand 2 becomes the new result
3be5 : 68                       pla
3be6 : 2982                     and #$82        ;mask N00000Z0
3be8 : 8557                     sta adrf        ;no need to check carry as we are adding to 0
3bea : c658                     dec sb2         ;complement subtract operand 2
3bec : ce0611                   dec sba2
3bef : a554                     lda ad2         
3bf1 : 8555                     sta adrl
3bf3 : d0c6                     bne tadd        ;iterate op2
                        
3bf5 : e054                     cpx #ad2
                                trap_ne         ;x altered during test
3bf7 : f003            >        beq skip2764
                       >        trap            ;failed not equal (non zero)
3bf9 : 200440          >        jsr report_error
                       >
3bfc :                 >skip2764
                        
3bfc : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3bfe : f003            >        beq skip2766
                       >        trap            ;failed not equal (non zero)
3c00 : 200440          >        jsr report_error
                       >
3c03 :                 >skip2766
                        
3c03 : ba                       tsx
3c04 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3c06 : f003            >        beq skip2768
                       >        trap            ;failed not equal (non zero)
3c08 : 200440          >        jsr report_error
                       >
3c0b :                 >skip2768
                        
                                next_test
3c0b : ad0211          >            lda test_case   ;previous test
3c0e : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3c10 : f003            >        beq skip2771
                       >        trap            ;failed not equal (non zero)
3c12 : 200440          >        jsr report_error
                       >
3c15 :                 >skip2771
                       >
0011 =                 >test_num = test_num + 1
3c15 : a911            >            lda #test_num   ;*** next tests' number
3c17 : 8d0211          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3c1a : f8                       sed 
3c1b : a254                     ldx #ad2        ;for indexed test
3c1d : a0ff                     ldy #$ff        ;max range
3c1f : a999                     lda #$99        ;start with adding 99 to 99 with carry
3c21 : 8553                     sta ad1         ;operand 1 - accumulator
3c23 : 8554                     sta ad2         ;operand 2 - memory or immediate
3c25 : 8d0511                   sta ada2        ;non zp
3c28 : 8555                     sta adrl        ;expected result bits 0-7
3c2a : a901                     lda #1          ;set carry in & out
3c2c : 8552                     sta adfc        ;carry in - for diag
3c2e : 8556                     sta adrh        ;expected result bit 8 (carry out)
3c30 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
3c32 : 8557                     sta adrf
3c34 : a900                     lda #0          ;complemented operand 2 for subtract
3c36 : 8558                     sta sb2
3c38 : 8d0611                   sta sba2        ;non zp
3c3b : 38               tdad    sec             ;test with carry set
3c3c : 20f33c                   jsr chkdad
3c3f : c652                     dec adfc        ;now with carry clear
3c41 : a555                     lda adrl        ;decimal adjust result
3c43 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
3c45 : c656                     dec adrh
3c47 : a999                     lda #$99
3c49 : 8555                     sta adrl
3c4b : d012                     bne tdad3
3c4d : 290f             tdad1   and #$f         ;lower nibble mask
3c4f : d00c                     bne tdad2       ;no decimal adjust needed
3c51 : c655                     dec adrl        ;decimal adjust (?0-6)
3c53 : c655                     dec adrl
3c55 : c655                     dec adrl
3c57 : c655                     dec adrl
3c59 : c655                     dec adrl
3c5b : c655                     dec adrl
3c5d : c655             tdad2   dec adrl        ;result -1
3c5f : 08               tdad3   php             ;save valid flags
3c60 : 68                       pla
3c61 : 2982                     and #$82        ;N-----Z-
3c63 : 0556                     ora adrh        ;N-----ZC
3c65 : 8557                     sta adrf
3c67 : 18                       clc             ;test with carry clear
3c68 : 20f33c                   jsr chkdad
3c6b : e652                     inc adfc        ;same for operand -1 but with carry
3c6d : a553                     lda ad1         ;decimal adjust operand 1
3c6f : f015                     beq tdad5       ;iterate operand 2
3c71 : 290f                     and #$f         ;lower nibble mask
3c73 : d00c                     bne tdad4       ;skip decimal adjust
3c75 : c653                     dec ad1         ;decimal adjust (?0-6)
3c77 : c653                     dec ad1
3c79 : c653                     dec ad1
3c7b : c653                     dec ad1
3c7d : c653                     dec ad1
3c7f : c653                     dec ad1
3c81 : c653             tdad4   dec ad1         ;operand 1 -1
3c83 : 4c3b3c                   jmp tdad        ;iterate op1
                        
3c86 : a999             tdad5   lda #$99        ;precharge op1 max
3c88 : 8553                     sta ad1
3c8a : a554                     lda ad2         ;decimal adjust operand 2
3c8c : f039                     beq tdad7       ;end of iteration
3c8e : 290f                     and #$f         ;lower nibble mask
3c90 : d018                     bne tdad6       ;skip decimal adjust
3c92 : c654                     dec ad2         ;decimal adjust (?0-6)
3c94 : c654                     dec ad2
3c96 : c654                     dec ad2
3c98 : c654                     dec ad2
3c9a : c654                     dec ad2
3c9c : c654                     dec ad2
3c9e : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
3ca0 : e658                     inc sb2
3ca2 : e658                     inc sb2
3ca4 : e658                     inc sb2
3ca6 : e658                     inc sb2
3ca8 : e658                     inc sb2
3caa : c654             tdad6   dec ad2         ;operand 2 -1
3cac : e658                     inc sb2         ;complemented operand for subtract
3cae : a558                     lda sb2
3cb0 : 8d0611                   sta sba2        ;copy as non zp operand
3cb3 : a554                     lda ad2
3cb5 : 8d0511                   sta ada2        ;copy as non zp operand
3cb8 : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
3cba : 08                       php             ;save flags
3cbb : 68                       pla
3cbc : 2982                     and #$82        ;N-----Z-
3cbe : 0901                     ora #1          ;N-----ZC
3cc0 : 8557                     sta adrf
3cc2 : e656                     inc adrh        ;result carry
3cc4 : 4c3b3c                   jmp tdad        ;iterate op2
                        
3cc7 : e054             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
3cc9 : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
3ccb : 200440          >        jsr report_error
                       >
3cce :                 >skip2773
                        
3cce : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3cd0 : f003            >        beq skip2775
                       >        trap            ;failed not equal (non zero)
3cd2 : 200440          >        jsr report_error
                       >
3cd5 :                 >skip2775
                        
3cd5 : ba                       tsx
3cd6 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3cd8 : f003            >        beq skip2777
                       >        trap            ;failed not equal (non zero)
3cda : 200440          >        jsr report_error
                       >
3cdd :                 >skip2777
                        
3cdd : d8                       cld
                        
3cde : ad0211                   lda test_case
3ce1 : c911                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
3ce3 : f003            >        beq skip2779
                       >        trap            ;failed not equal (non zero)
3ce5 : 200440          >        jsr report_error
                       >
3ce8 :                 >skip2779
                        
3ce8 : a9f0                     lda #$f0        ;mark opcode testing complete
3cea : 8d0211                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
3ced : 20cd40          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
3cf0 : 4c0013                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3cf3 :                  chkdad
                        ; decimal ADC / SBC zp
3cf3 : 08                       php             ;save carry for subtract
3cf4 : a553                     lda ad1
3cf6 : 6554                     adc ad2         ;perform add
3cf8 : 08                       php          
3cf9 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3cfb : f003            >        beq skip2783
                       >        trap            ;failed not equal (non zero)
3cfd : 200440          >        jsr report_error
                       >
3d00 :                 >skip2783
                        
3d00 : 68                       pla             ;check flags
3d01 : 2983                     and #$83        ;mask N-----ZC
3d03 : c557                     cmp adrf
                                trap_ne         ;bad flags
3d05 : f003            >        beq skip2785
                       >        trap            ;failed not equal (non zero)
3d07 : 200440          >        jsr report_error
                       >
3d0a :                 >skip2785
                        
3d0a : 28                       plp
3d0b : 08                       php             ;save carry for next add
3d0c : a553                     lda ad1
3d0e : e558                     sbc sb2         ;perform subtract
3d10 : 08                       php          
3d11 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d13 : f003            >        beq skip2787
                       >        trap            ;failed not equal (non zero)
3d15 : 200440          >        jsr report_error
                       >
3d18 :                 >skip2787
                        
3d18 : 68                       pla             ;check flags
3d19 : 2983                     and #$83        ;mask N-----ZC
3d1b : c557                     cmp adrf
                                trap_ne         ;bad flags
3d1d : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
3d1f : 200440          >        jsr report_error
                       >
3d22 :                 >skip2789
                        
3d22 : 28                       plp
                        ; decimal ADC / SBC abs
3d23 : 08                       php             ;save carry for subtract
3d24 : a553                     lda ad1
3d26 : 6d0511                   adc ada2        ;perform add
3d29 : 08                       php          
3d2a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d2c : f003            >        beq skip2791
                       >        trap            ;failed not equal (non zero)
3d2e : 200440          >        jsr report_error
                       >
3d31 :                 >skip2791
                        
3d31 : 68                       pla             ;check flags
3d32 : 2983                     and #$83        ;mask N-----ZC
3d34 : c557                     cmp adrf
                                trap_ne         ;bad flags
3d36 : f003            >        beq skip2793
                       >        trap            ;failed not equal (non zero)
3d38 : 200440          >        jsr report_error
                       >
3d3b :                 >skip2793
                        
3d3b : 28                       plp
3d3c : 08                       php             ;save carry for next add
3d3d : a553                     lda ad1
3d3f : ed0611                   sbc sba2        ;perform subtract
3d42 : 08                       php          
3d43 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d45 : f003            >        beq skip2795
                       >        trap            ;failed not equal (non zero)
3d47 : 200440          >        jsr report_error
                       >
3d4a :                 >skip2795
                        
3d4a : 68                       pla             ;check flags
3d4b : 2983                     and #$83        ;mask N-----ZC
3d4d : c557                     cmp adrf
                                trap_ne         ;bad flags
3d4f : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
3d51 : 200440          >        jsr report_error
                       >
3d54 :                 >skip2797
                        
3d54 : 28                       plp
                        ; decimal ADC / SBC #
3d55 : 08                       php             ;save carry for subtract
3d56 : a554                     lda ad2
3d58 : 8d0b11                   sta ex_adci+1   ;set ADC # operand
3d5b : a553                     lda ad1
3d5d : 200a11                   jsr ex_adci     ;execute ADC # in RAM
3d60 : 08                       php          
3d61 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d63 : f003            >        beq skip2799
                       >        trap            ;failed not equal (non zero)
3d65 : 200440          >        jsr report_error
                       >
3d68 :                 >skip2799
                        
3d68 : 68                       pla             ;check flags
3d69 : 2983                     and #$83        ;mask N-----ZC
3d6b : c557                     cmp adrf
                                trap_ne         ;bad flags
3d6d : f003            >        beq skip2801
                       >        trap            ;failed not equal (non zero)
3d6f : 200440          >        jsr report_error
                       >
3d72 :                 >skip2801
                        
3d72 : 28                       plp
3d73 : 08                       php             ;save carry for next add
3d74 : a558                     lda sb2
3d76 : 8d0e11                   sta ex_sbci+1   ;set SBC # operand
3d79 : a553                     lda ad1
3d7b : 200d11                   jsr ex_sbci     ;execute SBC # in RAM
3d7e : 08                       php          
3d7f : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d81 : f003            >        beq skip2803
                       >        trap            ;failed not equal (non zero)
3d83 : 200440          >        jsr report_error
                       >
3d86 :                 >skip2803
                        
3d86 : 68                       pla             ;check flags
3d87 : 2983                     and #$83        ;mask N-----ZC
3d89 : c557                     cmp adrf
                                trap_ne         ;bad flags
3d8b : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
3d8d : 200440          >        jsr report_error
                       >
3d90 :                 >skip2805
                        
3d90 : 28                       plp
                        ; decimal ADC / SBC zp,x
3d91 : 08                       php             ;save carry for subtract
3d92 : a553                     lda ad1
3d94 : 7500                     adc 0,x         ;perform add
3d96 : 08                       php          
3d97 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d99 : f003            >        beq skip2807
                       >        trap            ;failed not equal (non zero)
3d9b : 200440          >        jsr report_error
                       >
3d9e :                 >skip2807
                        
3d9e : 68                       pla             ;check flags
3d9f : 2983                     and #$83        ;mask N-----ZC
3da1 : c557                     cmp adrf
                                trap_ne         ;bad flags
3da3 : f003            >        beq skip2809
                       >        trap            ;failed not equal (non zero)
3da5 : 200440          >        jsr report_error
                       >
3da8 :                 >skip2809
                        
3da8 : 28                       plp
3da9 : 08                       php             ;save carry for next add
3daa : a553                     lda ad1
3dac : f504                     sbc sb2-ad2,x   ;perform subtract
3dae : 08                       php          
3daf : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3db1 : f003            >        beq skip2811
                       >        trap            ;failed not equal (non zero)
3db3 : 200440          >        jsr report_error
                       >
3db6 :                 >skip2811
                        
3db6 : 68                       pla             ;check flags
3db7 : 2983                     and #$83        ;mask N-----ZC
3db9 : c557                     cmp adrf
                                trap_ne         ;bad flags
3dbb : f003            >        beq skip2813
                       >        trap            ;failed not equal (non zero)
3dbd : 200440          >        jsr report_error
                       >
3dc0 :                 >skip2813
                        
3dc0 : 28                       plp
                        ; decimal ADC / SBC abs,x
3dc1 : 08                       php             ;save carry for subtract
3dc2 : a553                     lda ad1
3dc4 : 7db110                   adc ada2-ad2,x  ;perform add
3dc7 : 08                       php          
3dc8 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3dca : f003            >        beq skip2815
                       >        trap            ;failed not equal (non zero)
3dcc : 200440          >        jsr report_error
                       >
3dcf :                 >skip2815
                        
3dcf : 68                       pla             ;check flags
3dd0 : 2983                     and #$83        ;mask N-----ZC
3dd2 : c557                     cmp adrf
                                trap_ne         ;bad flags
3dd4 : f003            >        beq skip2817
                       >        trap            ;failed not equal (non zero)
3dd6 : 200440          >        jsr report_error
                       >
3dd9 :                 >skip2817
                        
3dd9 : 28                       plp
3dda : 08                       php             ;save carry for next add
3ddb : a553                     lda ad1
3ddd : fdb210                   sbc sba2-ad2,x  ;perform subtract
3de0 : 08                       php          
3de1 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3de3 : f003            >        beq skip2819
                       >        trap            ;failed not equal (non zero)
3de5 : 200440          >        jsr report_error
                       >
3de8 :                 >skip2819
                        
3de8 : 68                       pla             ;check flags
3de9 : 2983                     and #$83        ;mask N-----ZC
3deb : c557                     cmp adrf
                                trap_ne         ;bad flags
3ded : f003            >        beq skip2821
                       >        trap            ;failed not equal (non zero)
3def : 200440          >        jsr report_error
                       >
3df2 :                 >skip2821
                        
3df2 : 28                       plp
                        ; decimal ADC / SBC abs,y
3df3 : 08                       php             ;save carry for subtract
3df4 : a553                     lda ad1
3df6 : 790610                   adc ada2-$ff,y  ;perform add
3df9 : 08                       php          
3dfa : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3dfc : f003            >        beq skip2823
                       >        trap            ;failed not equal (non zero)
3dfe : 200440          >        jsr report_error
                       >
3e01 :                 >skip2823
                        
3e01 : 68                       pla             ;check flags
3e02 : 2983                     and #$83        ;mask N-----ZC
3e04 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e06 : f003            >        beq skip2825
                       >        trap            ;failed not equal (non zero)
3e08 : 200440          >        jsr report_error
                       >
3e0b :                 >skip2825
                        
3e0b : 28                       plp
3e0c : 08                       php             ;save carry for next add
3e0d : a553                     lda ad1
3e0f : f90710                   sbc sba2-$ff,y  ;perform subtract
3e12 : 08                       php          
3e13 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e15 : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
3e17 : 200440          >        jsr report_error
                       >
3e1a :                 >skip2827
                        
3e1a : 68                       pla             ;check flags
3e1b : 2983                     and #$83        ;mask N-----ZC
3e1d : c557                     cmp adrf
                                trap_ne         ;bad flags
3e1f : f003            >        beq skip2829
                       >        trap            ;failed not equal (non zero)
3e21 : 200440          >        jsr report_error
                       >
3e24 :                 >skip2829
                        
3e24 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3e25 : 08                       php             ;save carry for subtract
3e26 : a553                     lda ad1
3e28 : 6144                     adc (lo adi2-ad2,x) ;perform add
3e2a : 08                       php          
3e2b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e2d : f003            >        beq skip2831
                       >        trap            ;failed not equal (non zero)
3e2f : 200440          >        jsr report_error
                       >
3e32 :                 >skip2831
                        
3e32 : 68                       pla             ;check flags
3e33 : 2983                     and #$83        ;mask N-----ZC
3e35 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e37 : f003            >        beq skip2833
                       >        trap            ;failed not equal (non zero)
3e39 : 200440          >        jsr report_error
                       >
3e3c :                 >skip2833
                        
3e3c : 28                       plp
3e3d : 08                       php             ;save carry for next add
3e3e : a553                     lda ad1
3e40 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
3e42 : 08                       php          
3e43 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e45 : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
3e47 : 200440          >        jsr report_error
                       >
3e4a :                 >skip2835
                        
3e4a : 68                       pla             ;check flags
3e4b : 2983                     and #$83        ;mask N-----ZC
3e4d : c557                     cmp adrf
                                trap_ne         ;bad flags
3e4f : f003            >        beq skip2837
                       >        trap            ;failed not equal (non zero)
3e51 : 200440          >        jsr report_error
                       >
3e54 :                 >skip2837
                        
3e54 : 28                       plp
                        ; decimal ADC / SBC (abs),y
3e55 : 08                       php             ;save carry for subtract
3e56 : a553                     lda ad1
3e58 : 719c                     adc (adiy2),y   ;perform add
3e5a : 08                       php          
3e5b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e5d : f003            >        beq skip2839
                       >        trap            ;failed not equal (non zero)
3e5f : 200440          >        jsr report_error
                       >
3e62 :                 >skip2839
                        
3e62 : 68                       pla             ;check flags
3e63 : 2983                     and #$83        ;mask N-----ZC
3e65 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e67 : f003            >        beq skip2841
                       >        trap            ;failed not equal (non zero)
3e69 : 200440          >        jsr report_error
                       >
3e6c :                 >skip2841
                        
3e6c : 28                       plp
3e6d : 08                       php             ;save carry for next add
3e6e : a553                     lda ad1
3e70 : f19e                     sbc (sbiy2),y   ;perform subtract
3e72 : 08                       php          
3e73 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e75 : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
3e77 : 200440          >        jsr report_error
                       >
3e7a :                 >skip2843
                        
3e7a : 68                       pla             ;check flags
3e7b : 2983                     and #$83        ;mask N-----ZC
3e7d : c557                     cmp adrf
                                trap_ne         ;bad flags
3e7f : f003            >        beq skip2845
                       >        trap            ;failed not equal (non zero)
3e81 : 200440          >        jsr report_error
                       >
3e84 :                 >skip2845
                        
3e84 : 28                       plp
                        ; decimal ADC / SBC (zp)
3e85 : 08                       php             ;save carry for subtract
3e86 : a553                     lda ad1
3e88 : 7298                     adc (adi2)      ;perform add
3e8a : 08                       php          
3e8b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e8d : f003            >        beq skip2847
                       >        trap            ;failed not equal (non zero)
3e8f : 200440          >        jsr report_error
                       >
3e92 :                 >skip2847
                        
3e92 : 68                       pla             ;check flags
3e93 : 2983                     and #$83        ;mask N-----ZC
3e95 : c557                     cmp adrf
                                trap_ne         ;bad flags
3e97 : f003            >        beq skip2849
                       >        trap            ;failed not equal (non zero)
3e99 : 200440          >        jsr report_error
                       >
3e9c :                 >skip2849
                        
3e9c : 28                       plp
3e9d : 08                       php             ;save carry for next add
3e9e : a553                     lda ad1
3ea0 : f29a                     sbc (sbi2)      ;perform subtract
3ea2 : 08                       php          
3ea3 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ea5 : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
3ea7 : 200440          >        jsr report_error
                       >
3eaa :                 >skip2851
                        
3eaa : 68                       pla             ;check flags
3eab : 2983                     and #$83        ;mask N-----ZC
3ead : c557                     cmp adrf
                                trap_ne         ;bad flags
3eaf : f003            >        beq skip2853
                       >        trap            ;failed not equal (non zero)
3eb1 : 200440          >        jsr report_error
                       >
3eb4 :                 >skip2853
                        
3eb4 : 28                       plp
3eb5 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3eb6 : a557             chkadd  lda adrf        ;add V-flag if overflow
3eb8 : 2983                     and #$83        ;keep N-----ZC / clear V
3eba : 48                       pha
3ebb : a553                     lda ad1         ;test sign unequal between operands
3ebd : 4554                     eor ad2
3ebf : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3ec1 : a553                     lda ad1         ;test sign equal between operands and result
3ec3 : 4555                     eor adrl
3ec5 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3ec7 : 68                       pla
3ec8 : 0940                     ora #$40        ;set V
3eca : 48                       pha
3ecb : 68               ckad1   pla
3ecc : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
3ece : 08                       php             ;save carry for subtract
3ecf : a553                     lda ad1
3ed1 : 7298                     adc (adi2)      ;perform add
3ed3 : 08                       php          
3ed4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ed6 : f003            >        beq skip2855
                       >        trap            ;failed not equal (non zero)
3ed8 : 200440          >        jsr report_error
                       >
3edb :                 >skip2855
                        
3edb : 68                       pla             ;check flags
3edc : 29c3                     and #$c3        ;mask NV----ZC
3ede : c557                     cmp adrf
                                trap_ne         ;bad flags
3ee0 : f003            >        beq skip2857
                       >        trap            ;failed not equal (non zero)
3ee2 : 200440          >        jsr report_error
                       >
3ee5 :                 >skip2857
                        
3ee5 : 28                       plp
3ee6 : 08                       php             ;save carry for next add
3ee7 : a553                     lda ad1
3ee9 : f29a                     sbc (sbi2)      ;perform subtract
3eeb : 08                       php          
3eec : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
3eee : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
3ef0 : 200440          >        jsr report_error
                       >
3ef3 :                 >skip2859
                        
3ef3 : 68                       pla             ;check flags
3ef4 : 29c3                     and #$c3        ;mask NV----ZC
3ef6 : c557                     cmp adrf
                                trap_ne         ;bad flags
3ef8 : f003            >        beq skip2861
                       >        trap            ;failed not equal (non zero)
3efa : 200440          >        jsr report_error
                       >
3efd :                 >skip2861
                        
3efd : 28                       plp
3efe : 60                       rts
                                
                        ; target for the jump indirect test
3eff : 053f             ji_adr  dw test_ji
3f01 : 0f30                     dw ji_ret
                        
3f03 : 88                       dey
3f04 : 88                       dey
3f05 :                  test_ji
3f05 : 08                       php             ;either SP or Y count will fail, if we do not hit
3f06 : 88                       dey
3f07 : 88                       dey
3f08 : 88                       dey
3f09 : 28                       plp
                                trap_cs         ;flags loaded?
3f0a : 9003            >        bcc skip2863
                       >        trap            ;failed carry set
3f0c : 200440          >        jsr report_error
                       >
3f0f :                 >skip2863
                        
                                trap_vs
3f0f : 5003            >        bvc skip2865
                       >        trap            ;failed overflow set
3f11 : 200440          >        jsr report_error
                       >
3f14 :                 >skip2865
                        
                                trap_mi
3f14 : 1003            >        bpl skip2867
                       >        trap            ;failed minus (bit 7 set)
3f16 : 200440          >        jsr report_error
                       >
3f19 :                 >skip2867
                        
                                trap_eq 
3f19 : d003            >        bne skip2869
                       >        trap           ;failed equal (zero)
3f1b : 200440          >        jsr report_error
                       >
3f1e :                 >skip2869
                        
3f1e : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
3f20 : f003            >        beq skip2871
                       >        trap            ;failed not equal (non zero)
3f22 : 200440          >        jsr report_error
                       >
3f25 :                 >skip2871
                        
3f25 : e04e                     cpx #'N'
                                trap_ne        
3f27 : f003            >        beq skip2873
                       >        trap            ;failed not equal (non zero)
3f29 : 200440          >        jsr report_error
                       >
3f2c :                 >skip2873
                        
3f2c : c041                     cpy #('D'-3)
                                trap_ne
3f2e : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
3f30 : 200440          >        jsr report_error
                       >
3f33 :                 >skip2875
                        
3f33 : 48                       pha             ;save a,x
3f34 : 8a                       txa
3f35 : 48                       pha
3f36 : ba                       tsx
3f37 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3f39 : f003            >        beq skip2877
                       >        trap            ;failed not equal (non zero)
3f3b : 200440          >        jsr report_error
                       >
3f3e :                 >skip2877
                        
3f3e : 68                       pla             ;restore x
3f3f : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3f40 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f42 : 48              >            pha         ;use stack to load status
3f43 : 28              >            plp
                        
3f44 : 68                       pla             ;restore a
3f45 : e8                       inx             ;return registers with modifications
3f46 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3f48 : 6cff11                   jmp (ji_tab+2)
3f4b : ea                       nop
3f4c : ea                       nop
                                trap            ;runover protection
3f4d : 200440          >        jsr report_error
                        
3f50 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump indirect test
3f53 : b23f             jxi_adr dw  trap_ind
3f55 : b23f                     dw  trap_ind
3f57 : 613f                     dw  test_jxi    ;+4
3f59 : 7930                     dw  jxi_ret     ;+6
3f5b : b23f                     dw  trap_ind
3f5d : b23f                     dw  trap_ind
                        
3f5f : 88                       dey
3f60 : 88                       dey
3f61 :                  test_jxi
3f61 : 08                       php             ;either SP or Y count will fail, if we do not hit
3f62 : 88                       dey
3f63 : 88                       dey
3f64 : 88                       dey
3f65 : 28                       plp
                                trap_cs         ;flags loaded?
3f66 : 9003            >        bcc skip2882
                       >        trap            ;failed carry set
3f68 : 200440          >        jsr report_error
                       >
3f6b :                 >skip2882
                        
                                trap_vs
3f6b : 5003            >        bvc skip2884
                       >        trap            ;failed overflow set
3f6d : 200440          >        jsr report_error
                       >
3f70 :                 >skip2884
                        
                                trap_mi
3f70 : 1003            >        bpl skip2886
                       >        trap            ;failed minus (bit 7 set)
3f72 : 200440          >        jsr report_error
                       >
3f75 :                 >skip2886
                        
                                trap_eq 
3f75 : d003            >        bne skip2888
                       >        trap           ;failed equal (zero)
3f77 : 200440          >        jsr report_error
                       >
3f7a :                 >skip2888
                        
3f7a : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
3f7c : f003            >        beq skip2890
                       >        trap            ;failed not equal (non zero)
3f7e : 200440          >        jsr report_error
                       >
3f81 :                 >skip2890
                        
3f81 : e004                     cpx #4
                                trap_ne        
3f83 : f003            >        beq skip2892
                       >        trap            ;failed not equal (non zero)
3f85 : 200440          >        jsr report_error
                       >
3f88 :                 >skip2892
                        
3f88 : c046                     cpy #('I'-3)
                                trap_ne
3f8a : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
3f8c : 200440          >        jsr report_error
                       >
3f8f :                 >skip2894
                        
3f8f : 48                       pha             ;save a,x
3f90 : 8a                       txa
3f91 : 48                       pha
3f92 : ba                       tsx
3f93 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3f95 : f003            >        beq skip2896
                       >        trap            ;failed not equal (non zero)
3f97 : 200440          >        jsr report_error
                       >
3f9a :                 >skip2896
                        
3f9a : 68                       pla             ;restore x
3f9b : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3f9c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f9e : 48              >            pha         ;use stack to load status
3f9f : 28              >            plp
                        
3fa0 : 68                       pla             ;restore a
3fa1 : e8                       inx             ;return registers with modifications
3fa2 : e8                       inx
3fa3 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3fa5 : 7cf911                   jmp (jxi_tab,x)
3fa8 : ea                       nop
3fa9 : ea                       nop
                                trap            ;runover protection
3faa : 200440          >        jsr report_error
                        
3fad : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ; JMP (abs,x) with bad x
3fb0 : ea                       nop
3fb1 : ea                       nop
3fb2 :                  trap_ind
3fb2 : ea                       nop
3fb3 : ea                       nop
                                trap            ;near miss indexed indirect jump
3fb4 : 200440          >        jsr report_error
                        
3fb7 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
3fba :                  nmi_trap
                                trap            ;check stack for conditions at NMI
3fba : 200440          >        jsr report_error
                        
3fbd : 4c0013                   jmp start       ;catastrophic error - cannot continue
3fc0 :                  res_trap
                                trap            ;unexpected RESET
3fc0 : 200440          >        jsr report_error
                        
3fc3 : 4c0013                   jmp start       ;catastrophic error - cannot continue
                        
3fc6 : 88                       dey
3fc7 : 88                       dey
3fc8 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
3fc8 : 08                       php             ;either SP or Y count will fail, if we do not hit
3fc9 : 88                       dey
3fca : 88                       dey
3fcb : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
                            if ROM_vectors = 1
                                cmp #$ff-'B'    ;BRK pass 2 registers loaded?
                                beq break2
                            endif
3fcc : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
3fce : f003            >        beq skip2904
                       >        trap            ;failed not equal (non zero)
3fd0 : 200440          >        jsr report_error
                       >
3fd3 :                 >skip2904
                        
3fd3 : e052                     cpx #'R'
                                trap_ne        
3fd5 : f003            >        beq skip2906
                       >        trap            ;failed not equal (non zero)
3fd7 : 200440          >        jsr report_error
                       >
3fda :                 >skip2906
                        
3fda : c048                     cpy #'K'-3
                                trap_ne
3fdc : f003            >        beq skip2908
                       >        trap            ;failed not equal (non zero)
3fde : 200440          >        jsr report_error
                       >
3fe1 :                 >skip2908
                        
3fe1 : 8550                     sta irq_a       ;save registers during break test
3fe3 : 8651                     stx irq_x
3fe5 : ba                       tsx             ;test break on stack
3fe6 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
3fe9 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ;possible no break flag on stack
3feb : f003            >        beq skip2911
                       >        trap            ;failed not equal (non zero)
3fed : 200440          >        jsr report_error
                       >
3ff0 :                 >skip2911
                        
                            if ROM_vectors = 1
                                pla
                                cmp_flag intdis ;should have added interrupt disable
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret0)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret0)
                                trap_ne
                                load_flag $ff
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                                
                        break2                  ;BRK pass 2        
                                cpx #$ff-'R'
                                trap_ne        
                                cpy #$ff-'K'-3
                                trap_ne
                                sta irq_a       ;save registers during break test
                                stx irq_x
                                tsx             ;test break on stack
                                lda $102,x
                                cmp_flag $ff    ;break test should have B=1
                                trap_ne         ;possibly no break flag on stack
                                pla
                                cmp_flag $ff-decmode ;actual passed flags should have decmode cleared
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret1)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret1)
                                trap_ne
                                load_flag intdis
                                pha      
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                            else
                                trap_eq         ;check stack for conditions at BRK
3ff0 : d003            >        bne skip2913
                       >        trap           ;failed equal (zero)
3ff2 : 200440          >        jsr report_error
                       >
3ff5 :                 >skip2913
                        
                            endif
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
3ff5 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
3ff5 : a200            >        ldx #0
3ff7 : ad1241          >        lda rmsg_start
3ffa :                 >loop2915
3ffa : 200e41          >        jsr rchar
3ffd : e8              >        inx
3ffe : bd1241          >        lda rmsg_start,x
4001 : d0f7            >        bne loop2915
                        
4003 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
4004 :                  report_error
                        ;save registers
4004 : 08                       php
4005 : 48                       pha
4006 : 8a                       txa
4007 : 48                       pha
4008 : 98                       tya
4009 : 48                       pha
400a : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
400b : a200            >        ldx #0
400d : ad2641          >        lda rmsg_stack
4010 :                 >loop2916
4010 : 200e41          >        jsr rchar
4013 : e8              >        inx
4014 : bd2641          >        lda rmsg_stack,x
4017 : d0f7            >        bne loop2916
                        
4019 : ba                       tsx
401a : e8                       inx
401b : a901                     lda #1      ;address high
401d : 20fa40                   jsr rhex
4020 : 8a                       txa         ;address low
4021 : 20fa40                   jsr rhex
4024 : 20f640           rstack  jsr rspace
4027 : bd0001                   lda $100,x  ;stack data
402a : 20fa40                   jsr rhex
402d : e8                       inx
402e : d0f4                     bne rstack
4030 : 20ed40                   jsr rcrlf   ;new line
                        ;show zero page workspace
4033 : a900                     lda #0
4035 : 20fa40                   jsr rhex
4038 : a952                     lda #zpt
403a : aa                       tax
403b : 20fa40                   jsr rhex
403e : 20f640           rzp     jsr rspace
4041 : b500                     lda 0,x
4043 : 20fa40                   jsr rhex
4046 : e8                       inx
4047 : e059                     cpx #zp_bss
4049 : d0f3                     bne rzp
404b : 20ed40                   jsr rcrlf
                        ;show absolute workspace
404e : a911                     lda #hi(data_segment)
4050 : 20fa40                   jsr rhex
4053 : a900                     lda #lo(data_segment)
4055 : 20fa40                   jsr rhex
4058 : a200                     ldx #0
405a : 20f640           rabs    jsr rspace
405d : bd0011                   lda data_segment,x
4060 : 20fa40                   jsr rhex
4063 : e8                       inx
4064 : e00a                     cpx #(data_bss-data_segment)
4066 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
4068 : a200            >        ldx #0
406a : ad4241          >        lda rmsg_cont
406d :                 >loop2917
406d : 200e41          >        jsr rchar
4070 : e8              >        inx
4071 : bd4241          >        lda rmsg_cont,x
4074 : d0f7            >        bne loop2917
                        
4076 : 20e340           rerr1   jsr rget
4079 : c953                     cmp #'S'
407b : f00b                     beq rskip
407d : c943                     cmp #'C'
407f : d0f5                     bne rerr1        
                        ;restore registers
4081 : 68                       pla
4082 : a8                       tay
4083 : 68                       pla
4084 : aa                       tax
4085 : 68                       pla 
4086 : 28                       plp
4087 : 60                       rts
                        ;skip the current test
4088 : a9f0             rskip   lda #$f0            ;already end of tests?
408a : cd0211                   cmp test_case
408d : f0e7                     beq rerr1           ;skip is not available
408f : a2ff                     ldx #$ff            ;clear stack
4091 : 9a                       txs
4092 : ee0211                   inc test_case       ;next test
4095 : a900                     lda #lo(start)      ;find begin of test
4097 : 8552                     sta zpt
4099 : a913                     lda #hi(start)
409b : 8553                     sta zpt+1
409d : a004             rskipl1 ldy #4              ;search pattern
409f : b152             rskipl2 lda (zpt),y         ;next byte
40a1 : d9c840                   cmp rmark,y
40a4 : d00a                     bne rskipnx         ;no match
40a6 : 88                       dey
40a7 : 300f                     bmi rskipf          ;found pattern        
40a9 : c001                     cpy #1              ;skip immediate value
40ab : d0f2                     bne rskipl2
40ad : 88                       dey
40ae : f0ef                     beq rskipl2
                                
40b0 : e652             rskipnx inc zpt             ;next RAM location
40b2 : d0e9                     bne rskipl1
40b4 : e653                     inc zpt+1
40b6 : d0e5                     bne rskipl1
                        
40b8 : a001             rskipf  ldy #1              ;pattern found - check test number
40ba : b152                     lda (zpt),y         ;test number
40bc : c9f0                     cmp #$f0            ;end of last test?
40be : f005                     beq rskipe          ;ask to rerun all
40c0 : cd0211                   cmp test_case       ;is next test?
40c3 : d0eb                     bne rskipnx         ;continue searching
40c5 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
40c8 : a900             rmark   lda #0              ;begin of test search pattern
40ca : 8d0211                   sta test_case
                        
                        ;show test has ended, ask to repeat
40cd :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
40cd : a200            >        ldx #0
40cf : ad7441          >        lda rmsg_success
40d2 :                 >loop2918
40d2 : 200e41          >        jsr rchar
40d5 : e8              >        inx
40d6 : bd7441          >        lda rmsg_success,x
40d9 : d0f7            >        bne loop2918
                        
40db : 20e340           rsuc1   jsr rget
40de : c952                     cmp #'R'
40e0 : d0f9                     bne rsuc1        
40e2 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
40e3 :                  rget                ;get character in A
40e3 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
40e6 : c961                     cmp #'a'    ;lower case
40e8 : 9002                     bcc rget1
40ea : 295f                     and #$5f    ;convert to upper case
40ec : 60               rget1   rts
                        
                        ;output subroutines
40ed : a90a             rcrlf   lda #10
40ef : 200e41                   jsr rchar
40f2 : a90d                     lda #13
40f4 : d018                     bne rchar
                        
40f6 : a920             rspace  lda #' '
40f8 : d014                     bne rchar
                                
40fa : 48               rhex    pha         ;report hex byte in A
40fb : 4a                       lsr a       ;high nibble first
40fc : 4a                       lsr a
40fd : 4a                       lsr a
40fe : 4a                       lsr a
40ff : 200541                   jsr rnib
4102 : 68                       pla         ;now low nibble
4103 : 290f                     and #$f
                        
4105 : 18               rnib    clc         ;report nibble in A
4106 : 6930                     adc #'0'    ;make printable 0-9
4108 : c93a                     cmp #'9'+1
410a : 9002                     bcc rchar
410c : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
410e :                  rchar               ;report character in A
410e : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
4111 : 60                       rts
                        
4112 :                  rmsg_start
4112 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
4126 :                  rmsg_stack
4126 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
4142 :                  rmsg_cont
4142 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
4174 :                  rmsg_success
4174 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
419f :                  zp_init
419f : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
41a3 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
41a4 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
41a8 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
41ac : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
41b0 : 1011             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
41b2 : 1111                     dw  abs1+1
41b4 : 1211                     dw  abs1+2
41b6 : 1311                     dw  abs1+3
41b8 : 1411                     dw  abs7f
41ba : 1810             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
41bc : 0511             indt_   dw  abst            ;indirect pointer to store area in absolute memory
41be : 0611                     dw  abst+1
41c0 : 0711                     dw  abst+2
41c2 : 0811                     dw  abst+3
41c4 : 0d10             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
41c6 : 4711             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
41c8 : 4811                     dw  absAN+1
41ca : 4911                     dw  absAN+2
41cc : 4a11                     dw  absAN+3
41ce : 4b11             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
41d0 : 4c11                     dw  absEO+1
41d2 : 4d11                     dw  absEO+2
41d4 : 4e11                     dw  absEO+3
41d6 : 4311             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
41d8 : 4411                     dw  absOR+1
41da : 4511                     dw  absOR+2
41dc : 4611                     dw  absOR+3
                        ;add/subtract indirect pointers
41de : 0511             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
41e0 : 0611             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
41e2 : 0610             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
41e4 : 0710             sbiy2_  dw  sba2-$ff
41e6 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
41e6 :                  data_init
41e6 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
41e8 : 60                       rts
41e9 : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
41eb : 60                       rts
41ec : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
41f0 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
41f1 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
41f5 :                  rASL_                       ;expected result ASL & ROL -carry  
41f5 : 86048200         rROL_   db  $86,$04,$82,0   ; "
41f9 : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
41fd :                  rLSR_                       ;expected result LSR & ROR -carry
41fd : 61412000         rROR_   db  $61,$41,$20,0   ; "
4201 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
4205 :                  fASL_                       ;expected flags for shifts
4205 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
4209 : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
420d :                  fLSR_
420d : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
4211 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
4215 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
421a : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
421f : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
4223 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
4227 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
422b : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
422f : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
4233 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
4237 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
423b : 02800080         absflo_ db  fz,fn,0,fn
423f :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
423f :                  vec_init
423f : ba3f                     dw  nmi_trap
4241 : c03f                     dw  res_trap
4243 : c83f                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
4245 : 00000000000000..         ds  lo(jxi_ret - * - 2)
4277 : ea                       nop
4278 : ea                       nop
4279 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
427a : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
427b : 200440          >        jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
427e : 00000000000000..         ds  lo(ji_ret - * - 2)
430d : ea                       nop
430e : ea                       nop
430f : ea               ji_px   nop             ;low address byte matched with ji_ret 
4310 : ea                       nop
                                trap            ;jmp indirect page cross bug
4311 : 200440          >        jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
430f =                          end start
                        
No errors in pass 2.
Wrote binary from address $1300 through $4313.
Total size 12308 bytes.
Program start address is at $1300 (4864).
